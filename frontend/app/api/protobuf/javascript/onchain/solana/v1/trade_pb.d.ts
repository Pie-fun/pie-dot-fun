// @generated by protoc-gen-es v1.6.0
// @generated from file onchain/solana/v1/trade.proto (package onchain.solana.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * Trade
 * Reference: https://github.com/Topledger/solana-programs/blob/b6532ee5b9c0608903d6b8b9270cce7b161adf55/dex-trades/proto/output.proto
 *
 * @generated from message onchain.solana.v1.Trade
 */
export declare class Trade extends Message<Trade> {
  /**
   * 블록 날짜
   *
   * @generated from field: string block_date = 1;
   */
  blockDate: string;

  /**
   * 블록 생성 시간 (Unix timestamp)
   *
   * @generated from field: int64 block_time = 2;
   */
  blockTime: bigint;

  /**
   * 블록 슬롯 번호
   *
   * @generated from field: uint64 block_slot = 3;
   */
  blockSlot: bigint;

  /**
   * 트랜잭션 ID (시그니처)
   *
   * @generated from field: string tx_id = 4;
   */
  txId: string;

  /**
   * 트랜잭션 서명자의 주소
   *
   * @generated from field: string signer = 5;
   */
  signer: string;

  /**
   * 유동성 풀의 주소
   *
   * @generated from field: string pool_address = 6;
   */
  poolAddress: string;

  /**
   * 기준 토큰(base token)의 민트 주소
   *
   * @generated from field: string base_mint = 7;
   */
  baseMint: string;

  /**
   * 상대 토큰(quote token)의 민트 주소
   *
   * @generated from field: string quote_mint = 8;
   */
  quoteMint: string;

  /**
   * 기준 토큰의 보관 계정 주소
   *
   * @generated from field: string base_vault = 9;
   */
  baseVault: string;

  /**
   * 상대 토큰의 보관 계정 주소
   *
   * @generated from field: string quote_vault = 10;
   */
  quoteVault: string;

  /**
   * 기준 토큰의 거래량
   *
   * @generated from field: double base_amount = 11;
   */
  baseAmount: number;

  /**
   * 상대 토큰의 거래량
   *
   * @generated from field: double quote_amount = 12;
   */
  quoteAmount: number;

  /**
   * 내부 인스트럭션 여부
   *
   * @generated from field: bool is_inner_instruction = 13;
   */
  isInnerInstruction: boolean;

  /**
   * 인스트럭션 인덱스
   *
   * @generated from field: uint32 instruction_index = 14;
   */
  instructionIndex: number;

  /**
   * 인스트럭션 타입 (예: swap, deposit 등)
   *
   * @generated from field: string instruction_type = 15;
   */
  instructionType: string;

  /**
   * 내부 인스트럭션의 인덱스
   *
   * @generated from field: uint32 inner_instruxtion_index = 16;
   */
  innerInstruxtionIndex: number;

  /**
   * 외부 프로그램 ID (호출한 프로그램)
   *
   * @generated from field: string outer_program = 17;
   */
  outerProgram: string;

  /**
   * 내부 프로그램 ID (실제 실행된 프로그램)
   *
   * @generated from field: string inner_program = 18;
   */
  innerProgram: string;

  /**
   * 트랜잭션 수수료 (lamports 단위)
   *
   * @generated from field: uint64 txn_fee_lamports = 19;
   */
  txnFeeLamports: bigint;

  /**
   * 서명자의 SOL 잔액 변화량 (lamports 단위)
   *
   * @generated from field: int64 signer_lamports_change = 20;
   */
  signerLamportsChange: bigint;

  constructor(data?: PartialMessage<Trade>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "onchain.solana.v1.Trade";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Trade;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Trade;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Trade;

  static equals(a: Trade | PlainMessage<Trade> | undefined, b: Trade | PlainMessage<Trade> | undefined): boolean;
}


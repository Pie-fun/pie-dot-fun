// @generated by protoc-gen-es v1.6.0
// @generated from file ethereum/v1/game/game.proto (package ethereum.v1.game, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum ethereum.v1.game.ClientMessageType
 */
export declare enum ClientMessageType {
  /**
   * @generated from enum value: CLIENT_MESSAGE_TYPE_UNSPECIFIED = 0;
   */
  CLIENT_MESSAGE_TYPE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: CLIENT_START_GAME = 1;
   */
  CLIENT_START_GAME = 1,

  /**
   * @generated from enum value: CLIENT_END_GAME = 2;
   */
  CLIENT_END_GAME = 2,

  /**
   * @generated from enum value: CLIENT_TAKE_STAR = 3;
   */
  CLIENT_TAKE_STAR = 3,

  /**
   * @generated from enum value: CLIENT_DESTROY_OBJECT = 4;
   */
  CLIENT_DESTROY_OBJECT = 4,

  /**
   * @generated from enum value: CLIENT_SPACESHIP_POSITION = 5;
   */
  CLIENT_SPACESHIP_POSITION = 5,

  /**
   * @generated from enum value: CLIENT_SPACESHIP_EVENT = 6;
   */
  CLIENT_SPACESHIP_EVENT = 6,

  /**
   * @generated from enum value: CLIENT_KEYBOARD_EVENT = 7;
   */
  CLIENT_KEYBOARD_EVENT = 7,

  /**
   * @generated from enum value: CLIENT_DICONNECT = 8;
   */
  CLIENT_DICONNECT = 8,
}

/**
 * @generated from enum ethereum.v1.game.ServerMessageType
 */
export declare enum ServerMessageType {
  /**
   * @generated from enum value: SERVER_MESSAGE_TYPE_UNSPECIFIED = 0;
   */
  SERVER_MESSAGE_TYPE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: SERVER_CONNECT = 1;
   */
  SERVER_CONNECT = 1,

  /**
   * @generated from enum value: SERVER_DISCONNECT = 2;
   */
  SERVER_DISCONNECT = 2,

  /**
   * @generated from enum value: SERVER_START_GAME = 3;
   */
  SERVER_START_GAME = 3,

  /**
   * @generated from enum value: SERVER_END_GAME = 4;
   */
  SERVER_END_GAME = 4,

  /**
   * @generated from enum value: SERVER_TAKE_STAR = 5;
   */
  SERVER_TAKE_STAR = 5,

  /**
   * @generated from enum value: SERVER_DESTROY_OBJECT = 6;
   */
  SERVER_DESTROY_OBJECT = 6,

  /**
   * @generated from enum value: SERVER_SPACESHIP_POSITION = 7;
   */
  SERVER_SPACESHIP_POSITION = 7,

  /**
   * @generated from enum value: SERVER_SPACESHIP_EVENT = 8;
   */
  SERVER_SPACESHIP_EVENT = 8,

  /**
   * @generated from enum value: SERVER_KEYBOARD_EVENT = 9;
   */
  SERVER_KEYBOARD_EVENT = 9,
}

/**
 * @generated from enum ethereum.v1.game.ServerAckType
 */
export declare enum ServerAckType {
  /**
   * @generated from enum value: SERVER_RESPONSE_TYPE_UNSPECIFIED = 0;
   */
  SERVER_RESPONSE_TYPE_UNSPECIFIED = 0,

  /**
   * Message sent to client when message from client is accepted
   *
   * @generated from enum value: ACK = 100;
   */
  ACK = 100,

  /**
   * Message sent to client when message from client is rejected
   *
   * @generated from enum value: NACK = 200;
   */
  NACK = 200,

  /**
   * @generated from enum value: NACK_UNAUTHENTICATED = 201;
   */
  NACK_UNAUTHENTICATED = 201,

  /**
   * @generated from enum value: NACK_SESSION_ALREADY_EXISTS = 202;
   */
  NACK_SESSION_ALREADY_EXISTS = 202,

  /**
   * @generated from enum value: NACK_DAILY_ROUND_EXCEEDED = 203;
   */
  NACK_DAILY_ROUND_EXCEEDED = 203,

  /**
   * Message sent to client when internal server error occurs
   *
   * @generated from enum value: ERR = 300;
   */
  ERR = 300,
}

/**
 * @generated from message ethereum.v1.game.ClientMessage
 */
export declare class ClientMessage extends Message<ClientMessage> {
  /**
   * @generated from field: ethereum.v1.game.ClientMessageType msg_type = 1;
   */
  msgType: ClientMessageType;

  /**
   * @generated from field: string payload = 2;
   */
  payload: string;

  constructor(data?: PartialMessage<ClientMessage>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.game.ClientMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClientMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClientMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClientMessage;

  static equals(a: ClientMessage | PlainMessage<ClientMessage> | undefined, b: ClientMessage | PlainMessage<ClientMessage> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.game.ServerMessage
 */
export declare class ServerMessage extends Message<ServerMessage> {
  /**
   * @generated from field: ethereum.v1.game.ServerMessageType msg_type = 1;
   */
  msgType: ServerMessageType;

  /**
   * @generated from field: ethereum.v1.game.ServerAckType ack_type = 2;
   */
  ackType: ServerAckType;

  /**
   * @generated from field: string payload = 3;
   */
  payload: string;

  constructor(data?: PartialMessage<ServerMessage>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.game.ServerMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ServerMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ServerMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ServerMessage;

  static equals(a: ServerMessage | PlainMessage<ServerMessage> | undefined, b: ServerMessage | PlainMessage<ServerMessage> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.game.ConnectServerPayload
 */
export declare class ConnectServerPayload extends Message<ConnectServerPayload> {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * @generated from field: ethereum.v1.game.Game game = 2;
   */
  game?: Game;

  constructor(data?: PartialMessage<ConnectServerPayload>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.game.ConnectServerPayload";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConnectServerPayload;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConnectServerPayload;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConnectServerPayload;

  static equals(a: ConnectServerPayload | PlainMessage<ConnectServerPayload> | undefined, b: ConnectServerPayload | PlainMessage<ConnectServerPayload> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.game.TakeStarClientPayload
 */
export declare class TakeStarClientPayload extends Message<TakeStarClientPayload> {
  /**
   * @generated from field: ethereum.v1.game.Star star = 1;
   */
  star?: Star;

  constructor(data?: PartialMessage<TakeStarClientPayload>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.game.TakeStarClientPayload";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TakeStarClientPayload;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TakeStarClientPayload;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TakeStarClientPayload;

  static equals(a: TakeStarClientPayload | PlainMessage<TakeStarClientPayload> | undefined, b: TakeStarClientPayload | PlainMessage<TakeStarClientPayload> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.game.SpceshipPosiitionClientPayload
 */
export declare class SpceshipPosiitionClientPayload extends Message<SpceshipPosiitionClientPayload> {
  /**
   * @generated from field: ethereum.v1.game.Position position = 1;
   */
  position?: Position;

  constructor(data?: PartialMessage<SpceshipPosiitionClientPayload>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.game.SpceshipPosiitionClientPayload";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SpceshipPosiitionClientPayload;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SpceshipPosiitionClientPayload;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SpceshipPosiitionClientPayload;

  static equals(a: SpceshipPosiitionClientPayload | PlainMessage<SpceshipPosiitionClientPayload> | undefined, b: SpceshipPosiitionClientPayload | PlainMessage<SpceshipPosiitionClientPayload> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.game.SpaceshipEventClientPayload
 */
export declare class SpaceshipEventClientPayload extends Message<SpaceshipEventClientPayload> {
  /**
   * @generated from field: string event = 1;
   */
  event: string;

  constructor(data?: PartialMessage<SpaceshipEventClientPayload>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.game.SpaceshipEventClientPayload";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SpaceshipEventClientPayload;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SpaceshipEventClientPayload;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SpaceshipEventClientPayload;

  static equals(a: SpaceshipEventClientPayload | PlainMessage<SpaceshipEventClientPayload> | undefined, b: SpaceshipEventClientPayload | PlainMessage<SpaceshipEventClientPayload> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.game.KeyboardEventClientPayload
 */
export declare class KeyboardEventClientPayload extends Message<KeyboardEventClientPayload> {
  /**
   * @generated from field: string event = 1;
   */
  event: string;

  constructor(data?: PartialMessage<KeyboardEventClientPayload>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.game.KeyboardEventClientPayload";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): KeyboardEventClientPayload;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): KeyboardEventClientPayload;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): KeyboardEventClientPayload;

  static equals(a: KeyboardEventClientPayload | PlainMessage<KeyboardEventClientPayload> | undefined, b: KeyboardEventClientPayload | PlainMessage<KeyboardEventClientPayload> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.game.DestroyObjectClientPayload
 */
export declare class DestroyObjectClientPayload extends Message<DestroyObjectClientPayload> {
  /**
   * @generated from field: ethereum.v1.game.Position position = 1;
   */
  position?: Position;

  constructor(data?: PartialMessage<DestroyObjectClientPayload>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.game.DestroyObjectClientPayload";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DestroyObjectClientPayload;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DestroyObjectClientPayload;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DestroyObjectClientPayload;

  static equals(a: DestroyObjectClientPayload | PlainMessage<DestroyObjectClientPayload> | undefined, b: DestroyObjectClientPayload | PlainMessage<DestroyObjectClientPayload> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.game.Star
 */
export declare class Star extends Message<Star> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: ethereum.v1.game.Position position = 2;
   */
  position?: Position;

  /**
   * @generated from field: int32 score = 3;
   */
  score: number;

  constructor(data?: PartialMessage<Star>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.game.Star";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Star;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Star;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Star;

  static equals(a: Star | PlainMessage<Star> | undefined, b: Star | PlainMessage<Star> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.game.Capsule
 */
export declare class Capsule extends Message<Capsule> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: ethereum.v1.game.Position position = 2;
   */
  position?: Position;

  constructor(data?: PartialMessage<Capsule>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.game.Capsule";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Capsule;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Capsule;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Capsule;

  static equals(a: Capsule | PlainMessage<Capsule> | undefined, b: Capsule | PlainMessage<Capsule> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.game.Position
 */
export declare class Position extends Message<Position> {
  /**
   * @generated from field: float x = 1;
   */
  x: number;

  /**
   * @generated from field: float y = 2;
   */
  y: number;

  constructor(data?: PartialMessage<Position>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.game.Position";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Position;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Position;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Position;

  static equals(a: Position | PlainMessage<Position> | undefined, b: Position | PlainMessage<Position> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.game.Map
 */
export declare class Map extends Message<Map> {
  /**
   * @generated from field: repeated ethereum.v1.game.Star stars = 1;
   */
  stars: Star[];

  /**
   * @generated from field: repeated ethereum.v1.game.Capsule capsules = 2;
   */
  capsules: Capsule[];

  constructor(data?: PartialMessage<Map>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.game.Map";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Map;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Map;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Map;

  static equals(a: Map | PlainMessage<Map> | undefined, b: Map | PlainMessage<Map> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.game.Spaceship
 */
export declare class Spaceship extends Message<Spaceship> {
  /**
   * @generated from field: ethereum.v1.game.Position position = 1;
   */
  position?: Position;

  /**
   * @generated from field: int32 booster = 2;
   */
  booster: number;

  /**
   * @generated from field: int32 bullet = 3;
   */
  bullet: number;

  constructor(data?: PartialMessage<Spaceship>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.game.Spaceship";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Spaceship;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Spaceship;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Spaceship;

  static equals(a: Spaceship | PlainMessage<Spaceship> | undefined, b: Spaceship | PlainMessage<Spaceship> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.game.Game
 */
export declare class Game extends Message<Game> {
  /**
   * UUID of the game. Used to identify the game in the api server which means new game score will be created using this id.
   *
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: ethereum.v1.game.Map map = 2;
   */
  map?: Map;

  /**
   * @generated from field: ethereum.v1.game.Spaceship spaceship = 3;
   */
  spaceship?: Spaceship;

  /**
   * @generated from field: int32 score = 4;
   */
  score: number;

  /**
   * @generated from field: google.protobuf.Timestamp create_time = 5;
   */
  createTime?: Timestamp;

  constructor(data?: PartialMessage<Game>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.game.Game";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Game;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Game;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Game;

  static equals(a: Game | PlainMessage<Game> | undefined, b: Game | PlainMessage<Game> | undefined): boolean;
}


// @generated by protoc-gen-es v1.6.0
// @generated from file ethereum/v1/outpost/nft.proto (package ethereum.v1.outpost, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 * ChainType enumeration represents the type of blockchain.
 * Does not support optimism, zksync, bsc yet
 *
 * @generated from enum ethereum.v1.outpost.ChainType
 */
export const ChainType = proto3.makeEnum(
  "ethereum.v1.outpost.ChainType",
  [
    {no: 0, name: "CHAIN_UNSPECIFIED"},
    {no: 1, name: "ETHEREUM"},
    {no: 137, name: "POLYGON"},
    {no: 42161, name: "ARBITRUM"},
    {no: 10, name: "OPTIMISM"},
    {no: 8453, name: "BASE"},
    {no: 81457, name: "BLAST"},
    {no: 11155111, name: "ETHEREUM_SEPOLIA"},
    {no: 80001, name: "POLYGON_MUMBAI"},
    {no: 168587773, name: "BLAST_SEPOLIA"},
  ],
);

/**
 * @generated from enum ethereum.v1.outpost.ContractType
 */
export const ContractType = proto3.makeEnum(
  "ethereum.v1.outpost.ContractType",
  [
    {no: 0, name: "CONTRACT_TYPE_UNSPECIFIED"},
    {no: 1, name: "ERC721"},
    {no: 2, name: "ERC1155"},
  ],
);

/**
 * ListNFTsRequest payload
 * (-- api-linter: core::0158::request-page-token-field=disabled
 *     aip.dev/not-precedent: We need to do this because reasons. --)
 * (-- api-linter: core::0132::request-unknown-fields=disabled
 *     aip.dev/not-precedent: We really need this field because reasons. --)
 *
 * @generated from message ethereum.v1.outpost.ListNFTsRequest
 */
export const ListNFTsRequest = proto3.makeMessageType(
  "ethereum.v1.outpost.ListNFTsRequest",
  () => [
    { no: 1, name: "owner_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "filter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "sync_onchain", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * ListNFTsResponse response
 * (-- api-linter: core::0158::response-next-page-token-field=disabled
 *     aip.dev/not-precedent: We need to do this because reasons. --)
 *
 * @generated from message ethereum.v1.outpost.ListNFTsResponse
 */
export const ListNFTsResponse = proto3.makeMessageType(
  "ethereum.v1.outpost.ListNFTsResponse",
  () => [
    { no: 1, name: "nfts", kind: "message", T: NFT, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * ListNFTsDelegateRequest
 *
 * @generated from message ethereum.v1.outpost.ListNFTsDelegateRequest
 */
export const ListNFTsDelegateRequest = proto3.makeMessageType(
  "ethereum.v1.outpost.ListNFTsDelegateRequest",
  () => [
    { no: 1, name: "owner_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * ListNFTsDelegateRequest
 *
 * @generated from message ethereum.v1.outpost.ListNFTsDelegateResponse
 */
export const ListNFTsDelegateResponse = proto3.makeMessageType(
  "ethereum.v1.outpost.ListNFTsDelegateResponse",
  () => [
    { no: 1, name: "nfts", kind: "message", T: NFT, repeated: true },
  ],
);

/**
 * GetNFTRequest
 *
 * @generated from message ethereum.v1.outpost.GetNFTRequest
 */
export const GetNFTRequest = proto3.makeMessageType(
  "ethereum.v1.outpost.GetNFTRequest",
  () => [
    { no: 1, name: "nft", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * ValidateNFTAccessRequest
 *
 * @generated from message ethereum.v1.outpost.ValidateNFTAccessRequest
 */
export const ValidateNFTAccessRequest = proto3.makeMessageType(
  "ethereum.v1.outpost.ValidateNFTAccessRequest",
  () => [
    { no: 1, name: "nft", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "owner_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message ethereum.v1.outpost.ValidateNFTAccessResponse
 */
export const ValidateNFTAccessResponse = proto3.makeMessageType(
  "ethereum.v1.outpost.ValidateNFTAccessResponse",
  () => [
    { no: 1, name: "nft", kind: "message", T: NFT },
    { no: 2, name: "access", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * @generated from message ethereum.v1.outpost.ListOwnersRequest
 */
export const ListOwnersRequest = proto3.makeMessageType(
  "ethereum.v1.outpost.ListOwnersRequest",
  () => [
    { no: 1, name: "nfts", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
);

/**
 * @generated from message ethereum.v1.outpost.ListOwnersResponse
 */
export const ListOwnersResponse = proto3.makeMessageType(
  "ethereum.v1.outpost.ListOwnersResponse",
  () => [
    { no: 1, name: "owners", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "message", T: ListOwnersResponse_NFTs} },
  ],
);

/**
 * @generated from message ethereum.v1.outpost.ListOwnersResponse.NFTs
 */
export const ListOwnersResponse_NFTs = proto3.makeMessageType(
  "ethereum.v1.outpost.ListOwnersResponse.NFTs",
  () => [
    { no: 1, name: "nfts", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ],
  {localName: "ListOwnersResponse_NFTs"},
);

/**
 * ValidateNFTRequest
 *
 * @generated from message ethereum.v1.outpost.ValidateNFTRequest
 */
export const ValidateNFTRequest = proto3.makeMessageType(
  "ethereum.v1.outpost.ValidateNFTRequest",
  () => [
    { no: 1, name: "nft", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message ethereum.v1.outpost.ValidateNFTResponse
 */
export const ValidateNFTResponse = proto3.makeMessageType(
  "ethereum.v1.outpost.ValidateNFTResponse",
  () => [
    { no: 2, name: "valid", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * @generated from message ethereum.v1.outpost.GetContractRequest
 */
export const GetContractRequest = proto3.makeMessageType(
  "ethereum.v1.outpost.GetContractRequest",
  () => [
    { no: 1, name: "nft_contract", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message ethereum.v1.outpost.CheckHolderOfContractRequest
 */
export const CheckHolderOfContractRequest = proto3.makeMessageType(
  "ethereum.v1.outpost.CheckHolderOfContractRequest",
  () => [
    { no: 1, name: "nft_contract", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "wallet_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message ethereum.v1.outpost.CheckHolderOfContractResponse
 */
export const CheckHolderOfContractResponse = proto3.makeMessageType(
  "ethereum.v1.outpost.CheckHolderOfContractResponse",
  () => [
    { no: 1, name: "is_holder", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * NFT message represents an NFT asset.
 *
 * @generated from message ethereum.v1.outpost.NFT
 */
export const NFT = proto3.makeMessageType(
  "ethereum.v1.outpost.NFT",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "token_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "token_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "image_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "image_original_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "animation_uri", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 8, name: "animation_original_uri", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 9, name: "metadata_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "ownerAddress", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 11, name: "contract", kind: "message", T: NFTContract },
  ],
);

/**
 * NFTContract message represents an NFT contract.
 *
 * @generated from message ethereum.v1.outpost.NFTContract
 */
export const NFTContract = proto3.makeMessageType(
  "ethereum.v1.outpost.NFTContract",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "symbol", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "chain", kind: "enum", T: proto3.getEnumType(ChainType) },
    { no: 6, name: "type", kind: "enum", T: proto3.getEnumType(ContractType) },
    { no: 7, name: "image_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);


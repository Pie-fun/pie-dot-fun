// @generated by protoc-gen-es v1.6.0
// @generated from file ethereum/v1/score/score.proto (package ethereum.v1.score, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum ethereum.v1.score.GameMode
 */
export declare enum GameMode {
  /**
   * default value. this value is unused.
   *
   * @generated from enum value: GAME_MODE_UNSPECIFIED = 0;
   */
  GAME_MODE_UNSPECIFIED = 0,

  /**
   * time_attack
   *
   * @generated from enum value: TIME_ATTACK = 1;
   */
  TIME_ATTACK = 1,
}

/**
 * @generated from enum ethereum.v1.score.PlayMode
 */
export declare enum PlayMode {
  /**
   * default value. this value is unused.
   *
   * @generated from enum value: PLAY_MODE_UNSPECIFIED = 0;
   */
  PLAY_MODE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: SINGLE_PLAYER = 1;
   */
  SINGLE_PLAYER = 1,
}

/**
 * CreateScoreRequest
 *
 * @generated from message ethereum.v1.score.CreateScoreRequest
 */
export declare class CreateScoreRequest extends Message<CreateScoreRequest> {
  /**
   * score to create
   *
   * @generated from field: ethereum.v1.score.Score score = 1;
   */
  score?: Score;

  constructor(data?: PartialMessage<CreateScoreRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.score.CreateScoreRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateScoreRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateScoreRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateScoreRequest;

  static equals(a: CreateScoreRequest | PlainMessage<CreateScoreRequest> | undefined, b: CreateScoreRequest | PlainMessage<CreateScoreRequest> | undefined): boolean;
}

/**
 * ListScoresRequest payload
 * (-- api-linter: core::0158::request-page-token-field=disabled
 *     aip.dev/not-precedent: We need to do this because reasons. --)
 * (-- api-linter: core::0132::request-unknown-fields=disabled
 *     aip.dev/not-precedent: We really need this field because reasons. --)
 *
 * @generated from message ethereum.v1.score.ListScoresRequest
 */
export declare class ListScoresRequest extends Message<ListScoresRequest> {
  /**
   * The maximum number of scores to return. The service may return fewer than
   * this value.
   * If unspecified, at most 50 rows will be returned.
   * The maximum value is 1024; values above 1024 will be coerced to 1024.
   *
   * @generated from field: int32 page_size = 1;
   */
  pageSize: number;

  /**
   * Token of the page to retrieve. If not specified, the first
   * page of results will be returned. Use the value obtained from
   * `next_page_token` in the previous response in order to request
   * the next page of results.
   *
   * When paginating, all other parameters provided to `ListScores` must match
   * the call that provided the page token.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;

  /**
   * Available Sequence and Operator
   * * point
   *   * `>`, `>=`, `=`, `<=`, `<`
   * * week
   *   * `>`, `>=`, `=`, `<=`, `<`
   * * minted
   *   * `negation`
   * * play_mode
   *   * equal`
   * * game_mode
   *   * equal`
   *
   * Examples
   * * filter=week=10
   * * filter=point>300
   * * filter=minted
   * * filter=game_mode="SINGLE_PLAYER"
   * * filter=play_mode="TIME_ATTACK"
   * * filter=week=10 AND minted AND play_mode="TIME_ATTACK"
   * * filter=week>10 AND week<20 AND minted AND play_mode="TIME_ATTACK"
   *
   * @generated from field: string filter = 3;
   */
  filter: string;

  /**
   * Optional. One or more fields to compare and use to sort the output.
   * Default order for a field is descending by create_time
   * Reference
   * * https://google.aip.dev/132#ordering.
   *
   * Examples
   * * order_by="point desc,create_time asc"
   *
   * @generated from field: string order_by = 4;
   */
  orderBy: string;

  constructor(data?: PartialMessage<ListScoresRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.score.ListScoresRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListScoresRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListScoresRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListScoresRequest;

  static equals(a: ListScoresRequest | PlainMessage<ListScoresRequest> | undefined, b: ListScoresRequest | PlainMessage<ListScoresRequest> | undefined): boolean;
}

/**
 * ListScoresResponse response
 * (-- api-linter: core::0158::response-next-page-token-field=disabled
 *     aip.dev/not-precedent: We need to do this because reasons. --)
 *
 * @generated from message ethereum.v1.score.ListScoresResponse
 */
export declare class ListScoresResponse extends Message<ListScoresResponse> {
  /**
   * The list of rows that matched the query.
   *
   * @generated from field: repeated ethereum.v1.score.Score scores = 1;
   */
  scores: Score[];

  /**
   * Pagination token used to retrieve the next page of results.
   * Pass the content of this string as the `page_token` attribute of
   * the next request. `next_page_token` is not returned for the last
   * page.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  constructor(data?: PartialMessage<ListScoresResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.score.ListScoresResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListScoresResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListScoresResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListScoresResponse;

  static equals(a: ListScoresResponse | PlainMessage<ListScoresResponse> | undefined, b: ListScoresResponse | PlainMessage<ListScoresResponse> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.score.GetScoreRequest
 */
export declare class GetScoreRequest extends Message<GetScoreRequest> {
  /**
   * The name of the score to retrieve.
   * Format: scores/{score_uuid}
   *
   * @generated from field: string score = 1;
   */
  score: string;

  constructor(data?: PartialMessage<GetScoreRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.score.GetScoreRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetScoreRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetScoreRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetScoreRequest;

  static equals(a: GetScoreRequest | PlainMessage<GetScoreRequest> | undefined, b: GetScoreRequest | PlainMessage<GetScoreRequest> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.score.Score
 */
export declare class Score extends Message<Score> {
  /**
   * The resource name of the Score.
   * Format: scores/{uuid}
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The resource name of the owner Profile.
   * Format: profiles/{address}
   *
   * @generated from field: string profile = 2;
   */
  profile: string;

  /**
   * created time of score
   *
   * @generated from field: google.protobuf.Timestamp create_time = 3;
   */
  createTime?: Timestamp;

  /**
   * point of score
   *
   * @generated from field: uint32 point = 4;
   */
  point: number;

  /**
   * Game mode of score.
   *
   * @generated from field: ethereum.v1.score.GameMode game_mode = 5;
   */
  gameMode: GameMode;

  /**
   * Play mode of score.
   *
   * @generated from field: ethereum.v1.score.PlayMode play_mode = 6;
   */
  playMode: PlayMode;

  /**
   * week of score
   *
   * @generated from field: uint32 week = 7;
   */
  week: number;

  constructor(data?: PartialMessage<Score>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.score.Score";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Score;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Score;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Score;

  static equals(a: Score | PlainMessage<Score> | undefined, b: Score | PlainMessage<Score> | undefined): boolean;
}


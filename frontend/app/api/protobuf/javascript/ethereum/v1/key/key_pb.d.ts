// @generated by protoc-gen-es v1.6.0
// @generated from file ethereum/v1/key/key.proto (package ethereum.v1.key, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * The state of key
 *
 * @generated from enum ethereum.v1.key.State
 */
export declare enum State {
  /**
   * default value. this value is unused.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * Key was firstly created but not minted yet.
   *
   * @generated from enum value: CREATED = 1;
   */
  CREATED = 1,

  /**
   * Key was firstly created with base spaceship rental.
   *
   * @generated from enum value: MINTED = 2;
   */
  MINTED = 2,
}

/**
 * @generated from enum ethereum.v1.key.PrimaryType
 */
export declare enum PrimaryType {
  /**
   * default value. this value is unused.
   *
   * @generated from enum value: PRIMARY_TYPE_UNSPECIFIED = 0;
   */
  PRIMARY_TYPE_UNSPECIFIED = 0,

  /**
   * Whitelist.
   *
   * @generated from enum value: W_KEY = 1;
   */
  W_KEY = 1,

  /**
   * Star Gatherer
   *
   * @generated from enum value: G_KEY = 2;
   */
  G_KEY = 2,

  /**
   * Doodle Artist
   *
   * @generated from enum value: A_KEY = 3;
   */
  A_KEY = 3,

  /**
   * Star Hunter
   *
   * @generated from enum value: H_KEY = 4;
   */
  H_KEY = 4,

  /**
   * Top Ranker
   *
   * @generated from enum value: R_KEY = 5;
   */
  R_KEY = 5,
}

/**
 * @generated from enum ethereum.v1.key.SecondaryType
 */
export declare enum SecondaryType {
  /**
   * @generated from enum value: SECONDARY_TYPE_UNSPECIFIED = 0;
   */
  SECONDARY_TYPE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: TIER_1 = 1;
   */
  TIER_1 = 1,

  /**
   * @generated from enum value: TIER_2 = 2;
   */
  TIER_2 = 2,

  /**
   * @generated from enum value: TIER_3 = 3;
   */
  TIER_3 = 3,

  /**
   * @generated from enum value: TIER_4 = 4;
   */
  TIER_4 = 4,

  /**
   * @generated from enum value: TIER_5 = 5;
   */
  TIER_5 = 5,
}

/**
 * ListKeysRequest payload
 * (-- api-linter: core::0158::request-page-token-field=disabled
 *     aip.dev/not-precedent: We need to do this because reasons. --)
 * (-- api-linter: core::0132::request-unknown-fields=disabled
 *     aip.dev/not-precedent: We really need this field because reasons. --)
 *
 * @generated from message ethereum.v1.key.ListKeysRequest
 */
export declare class ListKeysRequest extends Message<ListKeysRequest> {
  /**
   * The name of the profile.
   * Format: profiles/{address}
   * Wildcard "profiles/*" is supported.
   *
   * @generated from field: string profile = 1;
   */
  profile: string;

  /**
   * The maximum number of keys to return. The service may return fewer than
   * this value.
   * If unspecified, at most 50 rows will be returned.
   * The maximum value is 1024; values above 1024 will be coerced to 1024.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Token of the page to retrieve. If not specified, the first
   * page of results will be returned. Use the value obtained from
   * `next_page_token` in the previous response in order to request
   * the next page of results.
   *
   * When paginating, all other parameters provided to `ListKeys` must match
   * the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Available Sequence and Operator
   * * name
   *   * `Equal`
   * * owner, profile
   *   * `=`
   * * state
   *   * `=`
   * * primary_type
   *   * `=`
   * * secondary_type
   *   * `=`
   * * create_time
   *   * `>`
   * * minted
   *   * Equal`
   *
   * Examples
   * * filter=name="profiles/0x6F11EF2c07f2E381CbE514198DdE87A0c0a19442/keys/0x79FCDEF22feeD20eDDacbB2587640e45491b757f"
   * * filter=owner="profiles/0x6F11EF2c07f2E381CbE514198DdE87A0c0a19442"
   * * filter=profile="profiles/0x6F11EF2c07f2E381CbE514198DdE87A0c0a19442"
   * * filter=state=CREATED
   * * filter=primary_tupe=A_KEY
   * * filter=minted
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  /**
   * One or more fields to compare and use to sort the output. (optional)
   * Default order for a field is descending by id
   * To specify ascending or descending order, append " asc" or " desc" to the field name. If not specified, the order is ascending.
   *
   * Reference
   * * https://google.aip.dev/132#ordering.
   *
   * Supported Fields
   * * "owner_address", "primary_type", "secondary_type", "token_id", "create_time", "mint_time"
   *
   * Examples
   * * order_by=mint_time asc
   * * order_by=primary_type asc, secondary_type asc
   * * order_by=token_id asc
   *
   * @generated from field: string order_by = 5;
   */
  orderBy: string;

  constructor(data?: PartialMessage<ListKeysRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.key.ListKeysRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListKeysRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListKeysRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListKeysRequest;

  static equals(a: ListKeysRequest | PlainMessage<ListKeysRequest> | undefined, b: ListKeysRequest | PlainMessage<ListKeysRequest> | undefined): boolean;
}

/**
 * ListKeysResponse
 * (-- api-linter: core::0158::response-next-page-token-field=disabled
 *     aip.dev/not-precedent: We need to do this because reasons. --)
 *
 * @generated from message ethereum.v1.key.ListKeysResponse
 */
export declare class ListKeysResponse extends Message<ListKeysResponse> {
  /**
   * The list of rows that matched the query.
   *
   * @generated from field: repeated ethereum.v1.key.Key keys = 1;
   */
  keys: Key[];

  /**
   * Pagination token used to retrieve the next page of results.
   * Pass the content of this string as the `page_token` attribute of
   * the next request. `next_page_token` is not returned for the last
   * page.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * The total number of keys that matched with the filter query.
   *
   * @generated from field: uint32 total_size = 3;
   */
  totalSize: number;

  constructor(data?: PartialMessage<ListKeysResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.key.ListKeysResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListKeysResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListKeysResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListKeysResponse;

  static equals(a: ListKeysResponse | PlainMessage<ListKeysResponse> | undefined, b: ListKeysResponse | PlainMessage<ListKeysResponse> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.key.ListKeyVOsRequest
 */
export declare class ListKeyVOsRequest extends Message<ListKeyVOsRequest> {
  /**
   * Available Sequence and Operator
   * * primary_type
   *   * `=`
   * * secondary_type
   *   * `=`
   *
   * Examples
   * * primary_tupe="S_KEY"
   * * secondary_type="TIER_1"
   *
   * @generated from field: string filter = 1;
   */
  filter: string;

  constructor(data?: PartialMessage<ListKeyVOsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.key.ListKeyVOsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListKeyVOsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListKeyVOsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListKeyVOsRequest;

  static equals(a: ListKeyVOsRequest | PlainMessage<ListKeyVOsRequest> | undefined, b: ListKeyVOsRequest | PlainMessage<ListKeyVOsRequest> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.key.ListKeyVOsResponse
 */
export declare class ListKeyVOsResponse extends Message<ListKeyVOsResponse> {
  /**
   * The list of rows that matched the query.
   *
   * @generated from field: repeated ethereum.v1.key.KeyVO key_value_objects = 1;
   */
  keyValueObjects: KeyVO[];

  constructor(data?: PartialMessage<ListKeyVOsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.key.ListKeyVOsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListKeyVOsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListKeyVOsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListKeyVOsResponse;

  static equals(a: ListKeyVOsResponse | PlainMessage<ListKeyVOsResponse> | undefined, b: ListKeyVOsResponse | PlainMessage<ListKeyVOsResponse> | undefined): boolean;
}

/**
 * CreateKeyVORequest
 *
 * @generated from message ethereum.v1.key.CreateKeyVORequest
 */
export declare class CreateKeyVORequest extends Message<CreateKeyVORequest> {
  /**
   * score to create
   *
   * @generated from field: ethereum.v1.key.KeyVO key_vo = 1;
   */
  keyVo?: KeyVO;

  constructor(data?: PartialMessage<CreateKeyVORequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.key.CreateKeyVORequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateKeyVORequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateKeyVORequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateKeyVORequest;

  static equals(a: CreateKeyVORequest | PlainMessage<CreateKeyVORequest> | undefined, b: CreateKeyVORequest | PlainMessage<CreateKeyVORequest> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.key.Key
 */
export declare class Key extends Message<Key> {
  /**
   * The resource name of the Key.
   * Format: profiles/{profile_address}/keys/{key_address}
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * EIP-6551 TBA Address of the Key.
   *
   * @generated from field: string address = 2;
   */
  address: string;

  /**
   * The owner of Key.
   * Format: profiles/{address}
   *
   * @generated from field: string owner = 3;
   */
  owner: string;

  /**
   * The state of Key
   *
   * @generated from field: ethereum.v1.key.State state = 4;
   */
  state: State;

  /**
   * The created time of Key.
   * RFC3339 format e.g. "2006-01-02T15:04:05Z07:00"
   *
   * @generated from field: google.protobuf.Timestamp create_time = 5;
   */
  createTime?: Timestamp;

  /**
   * The minted time of Key.
   * This field is only set when Key is minted. (optional)
   * RFC3339 format e.g. "2006-01-02T15:04:05Z07:00"
   *
   * @generated from field: optional google.protobuf.Timestamp mint_time = 6;
   */
  mintTime?: Timestamp;

  /**
   * The transaction hash for minting key.
   * This field is only set when Key is minted. (optional)
   *
   * @generated from field: optional string mint_tx_hash = 7;
   */
  mintTxHash?: string;

  /**
   * The amount of Eth Contribution (nominated as wei)
   * This field is only set when Key is minted. (optional)
   *
   * @generated from field: optional string eth_contribution = 8;
   */
  ethContribution?: string;

  /**
   * Whether Key finished tutorial or not
   *
   * @generated from field: bool is_minted = 9;
   */
  isMinted: boolean;

  /**
   * Key value object
   *
   * @generated from field: ethereum.v1.key.KeyVO vo = 10;
   */
  vo?: KeyVO;

  constructor(data?: PartialMessage<Key>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.key.Key";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Key;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Key;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Key;

  static equals(a: Key | PlainMessage<Key> | undefined, b: Key | PlainMessage<Key> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.key.KeyVO
 */
export declare class KeyVO extends Message<KeyVO> {
  /**
   * EIP-6551 TBA Address of the Key VO.
   *
   * @generated from field: string address = 1;
   */
  address: string;

  /**
   * Token ID of the Key VO.
   * Output only.
   *
   * @generated from field: string token_id = 2;
   */
  tokenId: string;

  /**
   * The primary type of the Key VO.
   * Output only.
   *
   * @generated from field: ethereum.v1.key.PrimaryType primary_type = 3;
   */
  primaryType: PrimaryType;

  /**
   * The secondary type of the Key VO.
   * Output only.
   *
   * @generated from field: ethereum.v1.key.SecondaryType secondary_type = 4;
   */
  secondaryType: SecondaryType;

  /**
   * The cached URI of the Key VO's image.
   * Output only.
   *
   * @generated from field: string cached_image_uri = 5;
   */
  cachedImageUri: string;

  /**
   * The original URI of the Key VO's image.
   * e.g. ipfs://Qm...
   * Output only.
   *
   * @generated from field: string original_image_uri = 6;
   */
  originalImageUri: string;

  /**
   * The URI of the Key VO's image.
   * Output only.
   *
   * @generated from field: string metadata_uri = 7;
   */
  metadataUri: string;

  /**
   * The contract that owns the Key VO.
   * Output only.
   *
   * @generated from field: string contractAddress = 8;
   */
  contractAddress: string;

  constructor(data?: PartialMessage<KeyVO>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.key.KeyVO";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): KeyVO;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): KeyVO;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): KeyVO;

  static equals(a: KeyVO | PlainMessage<KeyVO> | undefined, b: KeyVO | PlainMessage<KeyVO> | undefined): boolean;
}


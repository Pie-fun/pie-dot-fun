// @generated by protoc-gen-es v1.6.0
// @generated from file ethereum/v1/leaderboard/leaderboard.proto (package ethereum.v1.leaderboard, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { GameMode, PlayMode, Score } from "../score/score_pb.js";
import type { Profile } from "../profile/profile_pb.js";

/**
 * @generated from message ethereum.v1.leaderboard.GetTopRankerLeaderboardRequest
 */
export declare class GetTopRankerLeaderboardRequest extends Message<GetTopRankerLeaderboardRequest> {
  /**
   * The maximum number of scores to return. The service may return fewer than
   * this value.
   * If unspecified, at most 5 rows will be returned.
   * The maximum value is 1024; values above 1024 will be coerced to 1024.
   *
   * @generated from field: int32 page_size = 1;
   */
  pageSize: number;

  /**
   * Token of the page to retrieve. If not specified, the first
   * page of results will be returned. Use the value obtained from
   * `next_page_token` in the previous response in order to request
   * the next page of results.
   *
   * When paginating, all other parameters provided to `GetLeaderbaord` must match
   * the call that provided the page token.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;

  /**
   * The corresponding week of leaderboard.
   * If unspecified, the current week will be used.
   *
   * @generated from field: uint32 week = 3;
   */
  week: number;

  /**
   * The corresponding season of leaderboard.
   * The default value is 1
   *
   * @generated from field: uint32 season = 4;
   */
  season: number;

  /**
   * The corresponding play_mode of leaderboard.
   * The default value is "TIME_ATTACK"
   *
   * @generated from field: ethereum.v1.score.PlayMode play_mode = 5;
   */
  playMode: PlayMode;

  /**
   * The corresponding game_mode of leaderboard.
   * The default value is "SINGLE_PLAYER"
   *
   * @generated from field: ethereum.v1.score.GameMode game_mode = 6;
   */
  gameMode: GameMode;

  constructor(data?: PartialMessage<GetTopRankerLeaderboardRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.leaderboard.GetTopRankerLeaderboardRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetTopRankerLeaderboardRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetTopRankerLeaderboardRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetTopRankerLeaderboardRequest;

  static equals(a: GetTopRankerLeaderboardRequest | PlainMessage<GetTopRankerLeaderboardRequest> | undefined, b: GetTopRankerLeaderboardRequest | PlainMessage<GetTopRankerLeaderboardRequest> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.leaderboard.GetTopRankerLeaderboardResponse
 */
export declare class GetTopRankerLeaderboardResponse extends Message<GetTopRankerLeaderboardResponse> {
  /**
   * @generated from field: repeated ethereum.v1.leaderboard.TopRanker top_rankers = 1;
   */
  topRankers: TopRanker[];

  /**
   * Pagination token used to retrieve the next page of results.
   * Pass the content of this string as the `page_token` attribute of
   * the next request. `next_page_token` is not returned for the last
   * page.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * @generated from field: google.protobuf.Timestamp deadline = 3;
   */
  deadline?: Timestamp;

  constructor(data?: PartialMessage<GetTopRankerLeaderboardResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.leaderboard.GetTopRankerLeaderboardResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetTopRankerLeaderboardResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetTopRankerLeaderboardResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetTopRankerLeaderboardResponse;

  static equals(a: GetTopRankerLeaderboardResponse | PlainMessage<GetTopRankerLeaderboardResponse> | undefined, b: GetTopRankerLeaderboardResponse | PlainMessage<GetTopRankerLeaderboardResponse> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.leaderboard.GetTopRankerRequest
 */
export declare class GetTopRankerRequest extends Message<GetTopRankerRequest> {
  /**
   * @generated from field: string profile_address = 1;
   */
  profileAddress: string;

  /**
   * The corresponding week of leaderboard.
   * If unspecified, the current week will be used.
   *
   * @generated from field: uint32 week = 2;
   */
  week: number;

  /**
   * The corresponding play_mode of leaderboard.
   * The default value is "TIME_ATTACK"
   *
   * @generated from field: ethereum.v1.score.PlayMode play_mode = 3;
   */
  playMode: PlayMode;

  /**
   * The corresponding game_mode of leaderboard.
   * The default value is "SINGLE_PLAYER"
   *
   * @generated from field: ethereum.v1.score.GameMode game_mode = 4;
   */
  gameMode: GameMode;

  constructor(data?: PartialMessage<GetTopRankerRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.leaderboard.GetTopRankerRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetTopRankerRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetTopRankerRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetTopRankerRequest;

  static equals(a: GetTopRankerRequest | PlainMessage<GetTopRankerRequest> | undefined, b: GetTopRankerRequest | PlainMessage<GetTopRankerRequest> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.leaderboard.RenderTopRankerLeaderboardRequest
 */
export declare class RenderTopRankerLeaderboardRequest extends Message<RenderTopRankerLeaderboardRequest> {
  /**
   * The corresponding week of leaderboard.
   * If unspecified, the current week will be used.
   *
   * @generated from field: uint32 week = 1;
   */
  week: number;

  /**
   * The corresponding season of leaderboard.
   * The default value is 1
   *
   * @generated from field: uint32 season = 2;
   */
  season: number;

  /**
   * The corresponding play_mode of leaderboard.
   * The default value is "TIME_ATTACK"
   *
   * @generated from field: ethereum.v1.score.PlayMode play_mode = 3;
   */
  playMode: PlayMode;

  /**
   * The corresponding game_mode of leaderboard.
   * The default value is "SINGLE_PLAYER"
   *
   * @generated from field: ethereum.v1.score.GameMode game_mode = 4;
   */
  gameMode: GameMode;

  /**
   * @generated from field: string me = 5;
   */
  me: string;

  constructor(data?: PartialMessage<RenderTopRankerLeaderboardRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.leaderboard.RenderTopRankerLeaderboardRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RenderTopRankerLeaderboardRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RenderTopRankerLeaderboardRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RenderTopRankerLeaderboardRequest;

  static equals(a: RenderTopRankerLeaderboardRequest | PlainMessage<RenderTopRankerLeaderboardRequest> | undefined, b: RenderTopRankerLeaderboardRequest | PlainMessage<RenderTopRankerLeaderboardRequest> | undefined): boolean;
}

/**
 * GetWeeklyTopCollectorLeaderboardRequest payload
 * (-- api-linter: core::0158::request-page-token-field=disabled
 *     aip.dev/not-precedent: We need to do this because reasons. --)
 * (-- api-linter: core::0132::request-unknown-fields=disabled
 *     aip.dev/not-precedent: We really need this field because reasons. --)
 *
 * @generated from message ethereum.v1.leaderboard.GetWeeklyTopCollectorLeaderboardRequest
 */
export declare class GetWeeklyTopCollectorLeaderboardRequest extends Message<GetWeeklyTopCollectorLeaderboardRequest> {
  /**
   * The maximum number of scores to return. The service may return fewer than
   * this value.
   * If unspecified, at most 5 rows will be returned.
   * The maximum value is 1024; values above 1024 will be coerced to 1024.
   *
   * @generated from field: int32 page_size = 1;
   */
  pageSize: number;

  /**
   * Token of the page to retrieve. If not specified, the first
   * page of results will be returned. Use the value obtained from
   * `next_page_token` in the previous response in order to request
   * the next page of results.
   *
   * When paginating, all other parameters provided to `ListWeeklytimeTopCollectors` must match
   * the call that provided the page token.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;

  /**
   * The corresponding week of leaderboard.
   * If unspecified, the current week will be used.
   *
   * @generated from field: uint32 week = 3;
   */
  week: number;

  /**
   * The corresponding season of leaderboard.
   * The default value is 1
   *
   * @generated from field: uint32 season = 4;
   */
  season: number;

  constructor(data?: PartialMessage<GetWeeklyTopCollectorLeaderboardRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.leaderboard.GetWeeklyTopCollectorLeaderboardRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetWeeklyTopCollectorLeaderboardRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetWeeklyTopCollectorLeaderboardRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetWeeklyTopCollectorLeaderboardRequest;

  static equals(a: GetWeeklyTopCollectorLeaderboardRequest | PlainMessage<GetWeeklyTopCollectorLeaderboardRequest> | undefined, b: GetWeeklyTopCollectorLeaderboardRequest | PlainMessage<GetWeeklyTopCollectorLeaderboardRequest> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.leaderboard.GetWeeklyTopCollectorLeaderboardResponse
 */
export declare class GetWeeklyTopCollectorLeaderboardResponse extends Message<GetWeeklyTopCollectorLeaderboardResponse> {
  /**
   * @generated from field: repeated ethereum.v1.leaderboard.StarHunter top_collectors = 1;
   */
  topCollectors: StarHunter[];

  /**
   * Pagination token used to retrieve the next page of results.
   * Pass the content of this string as the `page_token` attribute of
   * the next request. `next_page_token` is not returned for the last
   * page.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * @generated from field: google.protobuf.Timestamp deadline = 3;
   */
  deadline?: Timestamp;

  constructor(data?: PartialMessage<GetWeeklyTopCollectorLeaderboardResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.leaderboard.GetWeeklyTopCollectorLeaderboardResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetWeeklyTopCollectorLeaderboardResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetWeeklyTopCollectorLeaderboardResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetWeeklyTopCollectorLeaderboardResponse;

  static equals(a: GetWeeklyTopCollectorLeaderboardResponse | PlainMessage<GetWeeklyTopCollectorLeaderboardResponse> | undefined, b: GetWeeklyTopCollectorLeaderboardResponse | PlainMessage<GetWeeklyTopCollectorLeaderboardResponse> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.leaderboard.GetWeeklyTopCollectorRequest
 */
export declare class GetWeeklyTopCollectorRequest extends Message<GetWeeklyTopCollectorRequest> {
  /**
   * @generated from field: string profile_address = 1;
   */
  profileAddress: string;

  /**
   * The corresponding week of leaderboard.
   * If unspecified, the current week will be used.
   *
   * @generated from field: uint32 week = 2;
   */
  week: number;

  constructor(data?: PartialMessage<GetWeeklyTopCollectorRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.leaderboard.GetWeeklyTopCollectorRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetWeeklyTopCollectorRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetWeeklyTopCollectorRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetWeeklyTopCollectorRequest;

  static equals(a: GetWeeklyTopCollectorRequest | PlainMessage<GetWeeklyTopCollectorRequest> | undefined, b: GetWeeklyTopCollectorRequest | PlainMessage<GetWeeklyTopCollectorRequest> | undefined): boolean;
}

/**
 * GetAllTimeTopCollectorsLeaderboardRequest payload
 * (-- api-linter: core::0158::request-page-token-field=disabled
 *     aip.dev/not-precedent: We need to do this because reasons. --)
 * (-- api-linter: core::0132::request-unknown-fields=disabled
 *     aip.dev/not-precedent: We really need this field because reasons. --)
 *
 * @generated from message ethereum.v1.leaderboard.GetAllTimeTopCollectorLeaderboardRequest
 */
export declare class GetAllTimeTopCollectorLeaderboardRequest extends Message<GetAllTimeTopCollectorLeaderboardRequest> {
  /**
   * The maximum number of scores to return. The service may return fewer than
   * this value.
   * If unspecified, at most 5 rows will be returned.
   * The maximum value is 1024; values above 1024 will be coerced to 1024.
   *
   * @generated from field: int32 page_size = 1;
   */
  pageSize: number;

  /**
   * Token of the page to retrieve. If not specified, the first
   * page of results will be returned. Use the value obtained from
   * `next_page_token` in the previous response in order to request
   * the next page of results.
   *
   * When paginating, all other parameters provided to `GetAllTimeTopCollectorLeaderboard` must match
   * the call that provided the page token.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;

  constructor(data?: PartialMessage<GetAllTimeTopCollectorLeaderboardRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.leaderboard.GetAllTimeTopCollectorLeaderboardRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAllTimeTopCollectorLeaderboardRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAllTimeTopCollectorLeaderboardRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAllTimeTopCollectorLeaderboardRequest;

  static equals(a: GetAllTimeTopCollectorLeaderboardRequest | PlainMessage<GetAllTimeTopCollectorLeaderboardRequest> | undefined, b: GetAllTimeTopCollectorLeaderboardRequest | PlainMessage<GetAllTimeTopCollectorLeaderboardRequest> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.leaderboard.GetAllTimeTopCollectorLeaderboardResponse
 */
export declare class GetAllTimeTopCollectorLeaderboardResponse extends Message<GetAllTimeTopCollectorLeaderboardResponse> {
  /**
   * @generated from field: repeated ethereum.v1.leaderboard.StarHunter top_collectors = 1;
   */
  topCollectors: StarHunter[];

  /**
   * Pagination token used to retrieve the next page of results.
   * Pass the content of this string as the `page_token` attribute of
   * the next request. `next_page_token` is not returned for the last
   * page.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  constructor(data?: PartialMessage<GetAllTimeTopCollectorLeaderboardResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.leaderboard.GetAllTimeTopCollectorLeaderboardResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAllTimeTopCollectorLeaderboardResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAllTimeTopCollectorLeaderboardResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAllTimeTopCollectorLeaderboardResponse;

  static equals(a: GetAllTimeTopCollectorLeaderboardResponse | PlainMessage<GetAllTimeTopCollectorLeaderboardResponse> | undefined, b: GetAllTimeTopCollectorLeaderboardResponse | PlainMessage<GetAllTimeTopCollectorLeaderboardResponse> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.leaderboard.RenderWeeklyStarHunterLeaderboardRequest
 */
export declare class RenderWeeklyStarHunterLeaderboardRequest extends Message<RenderWeeklyStarHunterLeaderboardRequest> {
  /**
   * The corresponding week of leaderboard.
   * If unspecified, the current week will be used.
   *
   * @generated from field: uint32 week = 1;
   */
  week: number;

  /**
   * The corresponding season of leaderboard.
   * The default value is 1
   *
   * @generated from field: uint32 season = 2;
   */
  season: number;

  /**
   * @generated from field: string me = 3;
   */
  me: string;

  constructor(data?: PartialMessage<RenderWeeklyStarHunterLeaderboardRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.leaderboard.RenderWeeklyStarHunterLeaderboardRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RenderWeeklyStarHunterLeaderboardRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RenderWeeklyStarHunterLeaderboardRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RenderWeeklyStarHunterLeaderboardRequest;

  static equals(a: RenderWeeklyStarHunterLeaderboardRequest | PlainMessage<RenderWeeklyStarHunterLeaderboardRequest> | undefined, b: RenderWeeklyStarHunterLeaderboardRequest | PlainMessage<RenderWeeklyStarHunterLeaderboardRequest> | undefined): boolean;
}

/**
 * GetWeeklyStarHunterLeaderboardRequest payload
 * (-- api-linter: core::0158::request-page-token-field=disabled
 *     aip.dev/not-precedent: We need to do this because reasons. --)
 * (-- api-linter: core::0132::request-unknown-fields=disabled
 *     aip.dev/not-precedent: We really need this field because reasons. --)
 *
 * @generated from message ethereum.v1.leaderboard.GetWeeklyStarHunterLeaderboardRequest
 */
export declare class GetWeeklyStarHunterLeaderboardRequest extends Message<GetWeeklyStarHunterLeaderboardRequest> {
  /**
   * The maximum number of scores to return. The service may return fewer than
   * this value.
   * If unspecified, at most 5 rows will be returned.
   * The maximum value is 1024; values above 1024 will be coerced to 1024.
   *
   * @generated from field: int32 page_size = 1;
   */
  pageSize: number;

  /**
   * Token of the page to retrieve. If not specified, the first
   * page of results will be returned. Use the value obtained from
   * `next_page_token` in the previous response in order to request
   * the next page of results.
   *
   * When paginating, all other parameters provided to `ListWeeklytimeTopCollectors` must match
   * the call that provided the page token.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;

  /**
   * The corresponding week of leaderboard.
   * If unspecified, the current week will be used.
   *
   * @generated from field: uint32 week = 3;
   */
  week: number;

  /**
   * The corresponding season of leaderboard.
   * The default value is 1
   *
   * @generated from field: uint32 season = 4;
   */
  season: number;

  constructor(data?: PartialMessage<GetWeeklyStarHunterLeaderboardRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.leaderboard.GetWeeklyStarHunterLeaderboardRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetWeeklyStarHunterLeaderboardRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetWeeklyStarHunterLeaderboardRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetWeeklyStarHunterLeaderboardRequest;

  static equals(a: GetWeeklyStarHunterLeaderboardRequest | PlainMessage<GetWeeklyStarHunterLeaderboardRequest> | undefined, b: GetWeeklyStarHunterLeaderboardRequest | PlainMessage<GetWeeklyStarHunterLeaderboardRequest> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.leaderboard.GetWeeklyStarHunterLeaderboardResponse
 */
export declare class GetWeeklyStarHunterLeaderboardResponse extends Message<GetWeeklyStarHunterLeaderboardResponse> {
  /**
   * @generated from field: repeated ethereum.v1.leaderboard.StarHunter star_hunters = 1;
   */
  starHunters: StarHunter[];

  /**
   * Pagination token used to retrieve the next page of results.
   * Pass the content of this string as the `page_token` attribute of
   * the next request. `next_page_token` is not returned for the last
   * page.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  /**
   * @generated from field: google.protobuf.Timestamp deadline = 3;
   */
  deadline?: Timestamp;

  constructor(data?: PartialMessage<GetWeeklyStarHunterLeaderboardResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.leaderboard.GetWeeklyStarHunterLeaderboardResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetWeeklyStarHunterLeaderboardResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetWeeklyStarHunterLeaderboardResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetWeeklyStarHunterLeaderboardResponse;

  static equals(a: GetWeeklyStarHunterLeaderboardResponse | PlainMessage<GetWeeklyStarHunterLeaderboardResponse> | undefined, b: GetWeeklyStarHunterLeaderboardResponse | PlainMessage<GetWeeklyStarHunterLeaderboardResponse> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.leaderboard.GetWeeklyStarHunterRequest
 */
export declare class GetWeeklyStarHunterRequest extends Message<GetWeeklyStarHunterRequest> {
  /**
   * @generated from field: string profile_address = 1;
   */
  profileAddress: string;

  /**
   * The corresponding week of leaderboard.
   * If unspecified, the current week will be used.
   *
   * @generated from field: uint32 week = 2;
   */
  week: number;

  constructor(data?: PartialMessage<GetWeeklyStarHunterRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.leaderboard.GetWeeklyStarHunterRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetWeeklyStarHunterRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetWeeklyStarHunterRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetWeeklyStarHunterRequest;

  static equals(a: GetWeeklyStarHunterRequest | PlainMessage<GetWeeklyStarHunterRequest> | undefined, b: GetWeeklyStarHunterRequest | PlainMessage<GetWeeklyStarHunterRequest> | undefined): boolean;
}

/**
 * GetAllTimeStarHuntersLeaderboardRequest payload
 * (-- api-linter: core::0158::request-page-token-field=disabled
 *     aip.dev/not-precedent: We need to do this because reasons. --)
 * (-- api-linter: core::0132::request-unknown-fields=disabled
 *     aip.dev/not-precedent: We really need this field because reasons. --)
 *
 * @generated from message ethereum.v1.leaderboard.GetAllTimeStarHunterLeaderboardRequest
 */
export declare class GetAllTimeStarHunterLeaderboardRequest extends Message<GetAllTimeStarHunterLeaderboardRequest> {
  /**
   * The maximum number of scores to return. The service may return fewer than
   * this value.
   * If unspecified, at most 5 rows will be returned.
   * The maximum value is 1024; values above 1024 will be coerced to 1024.
   *
   * @generated from field: int32 page_size = 1;
   */
  pageSize: number;

  /**
   * Token of the page to retrieve. If not specified, the first
   * page of results will be returned. Use the value obtained from
   * `next_page_token` in the previous response in order to request
   * the next page of results.
   *
   * When paginating, all other parameters provided to `GetAllTimeStarHunterLeaderboard` must match
   * the call that provided the page token.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;

  constructor(data?: PartialMessage<GetAllTimeStarHunterLeaderboardRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.leaderboard.GetAllTimeStarHunterLeaderboardRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAllTimeStarHunterLeaderboardRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAllTimeStarHunterLeaderboardRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAllTimeStarHunterLeaderboardRequest;

  static equals(a: GetAllTimeStarHunterLeaderboardRequest | PlainMessage<GetAllTimeStarHunterLeaderboardRequest> | undefined, b: GetAllTimeStarHunterLeaderboardRequest | PlainMessage<GetAllTimeStarHunterLeaderboardRequest> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.leaderboard.GetAllTimeStarHunterLeaderboardResponse
 */
export declare class GetAllTimeStarHunterLeaderboardResponse extends Message<GetAllTimeStarHunterLeaderboardResponse> {
  /**
   * @generated from field: repeated ethereum.v1.leaderboard.StarHunter star_hunters = 1;
   */
  starHunters: StarHunter[];

  /**
   * Pagination token used to retrieve the next page of results.
   * Pass the content of this string as the `page_token` attribute of
   * the next request. `next_page_token` is not returned for the last
   * page.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  constructor(data?: PartialMessage<GetAllTimeStarHunterLeaderboardResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.leaderboard.GetAllTimeStarHunterLeaderboardResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetAllTimeStarHunterLeaderboardResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetAllTimeStarHunterLeaderboardResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetAllTimeStarHunterLeaderboardResponse;

  static equals(a: GetAllTimeStarHunterLeaderboardResponse | PlainMessage<GetAllTimeStarHunterLeaderboardResponse> | undefined, b: GetAllTimeStarHunterLeaderboardResponse | PlainMessage<GetAllTimeStarHunterLeaderboardResponse> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.leaderboard.ImageResponse
 */
export declare class ImageResponse extends Message<ImageResponse> {
  /**
   * @generated from field: bytes image = 1;
   */
  image: Uint8Array;

  constructor(data?: PartialMessage<ImageResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.leaderboard.ImageResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ImageResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ImageResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ImageResponse;

  static equals(a: ImageResponse | PlainMessage<ImageResponse> | undefined, b: ImageResponse | PlainMessage<ImageResponse> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.leaderboard.TopRanker
 */
export declare class TopRanker extends Message<TopRanker> {
  /**
   * @generated from field: uint32 rank = 1;
   */
  rank: number;

  /**
   * @generated from field: ethereum.v1.profile.Profile profile = 2;
   */
  profile?: Profile;

  /**
   * @generated from field: ethereum.v1.score.Score score = 3;
   */
  score?: Score;

  constructor(data?: PartialMessage<TopRanker>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.leaderboard.TopRanker";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TopRanker;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TopRanker;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TopRanker;

  static equals(a: TopRanker | PlainMessage<TopRanker> | undefined, b: TopRanker | PlainMessage<TopRanker> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.leaderboard.StarHunter
 */
export declare class StarHunter extends Message<StarHunter> {
  /**
   * @generated from field: uint32 rank = 1;
   */
  rank: number;

  /**
   * @generated from field: ethereum.v1.profile.Profile profile = 2;
   */
  profile?: Profile;

  /**
   * @generated from field: uint32 total_stars = 3;
   */
  totalStars: number;

  constructor(data?: PartialMessage<StarHunter>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.leaderboard.StarHunter";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StarHunter;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StarHunter;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StarHunter;

  static equals(a: StarHunter | PlainMessage<StarHunter> | undefined, b: StarHunter | PlainMessage<StarHunter> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.leaderboard.RenderStarHuntersLeaderboardImageRequest
 */
export declare class RenderStarHuntersLeaderboardImageRequest extends Message<RenderStarHuntersLeaderboardImageRequest> {
  /**
   * @generated from field: repeated ethereum.v1.leaderboard.StarHunterSlim star_hunters = 1;
   */
  starHunters: StarHunterSlim[];

  /**
   * @generated from field: ethereum.v1.leaderboard.StarHunterSlim me = 2;
   */
  me?: StarHunterSlim;

  constructor(data?: PartialMessage<RenderStarHuntersLeaderboardImageRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.leaderboard.RenderStarHuntersLeaderboardImageRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RenderStarHuntersLeaderboardImageRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RenderStarHuntersLeaderboardImageRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RenderStarHuntersLeaderboardImageRequest;

  static equals(a: RenderStarHuntersLeaderboardImageRequest | PlainMessage<RenderStarHuntersLeaderboardImageRequest> | undefined, b: RenderStarHuntersLeaderboardImageRequest | PlainMessage<RenderStarHuntersLeaderboardImageRequest> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.leaderboard.RenderTopRankerLeaderboardImageRequest
 */
export declare class RenderTopRankerLeaderboardImageRequest extends Message<RenderTopRankerLeaderboardImageRequest> {
  /**
   * @generated from field: repeated ethereum.v1.leaderboard.TopRankerSlim top_rankers = 1;
   */
  topRankers: TopRankerSlim[];

  /**
   * @generated from field: ethereum.v1.leaderboard.TopRankerSlim me = 2;
   */
  me?: TopRankerSlim;

  constructor(data?: PartialMessage<RenderTopRankerLeaderboardImageRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.leaderboard.RenderTopRankerLeaderboardImageRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RenderTopRankerLeaderboardImageRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RenderTopRankerLeaderboardImageRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RenderTopRankerLeaderboardImageRequest;

  static equals(a: RenderTopRankerLeaderboardImageRequest | PlainMessage<RenderTopRankerLeaderboardImageRequest> | undefined, b: RenderTopRankerLeaderboardImageRequest | PlainMessage<RenderTopRankerLeaderboardImageRequest> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.leaderboard.StarHunterSlim
 */
export declare class StarHunterSlim extends Message<StarHunterSlim> {
  /**
   * @generated from field: uint32 rank = 1;
   */
  rank: number;

  /**
   * @generated from field: string profile = 2;
   */
  profile: string;

  /**
   * @generated from field: uint32 total_stars = 3;
   */
  totalStars: number;

  constructor(data?: PartialMessage<StarHunterSlim>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.leaderboard.StarHunterSlim";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StarHunterSlim;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StarHunterSlim;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StarHunterSlim;

  static equals(a: StarHunterSlim | PlainMessage<StarHunterSlim> | undefined, b: StarHunterSlim | PlainMessage<StarHunterSlim> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.leaderboard.TopRankerSlim
 */
export declare class TopRankerSlim extends Message<TopRankerSlim> {
  /**
   * @generated from field: uint32 rank = 1;
   */
  rank: number;

  /**
   * @generated from field: string profile = 2;
   */
  profile: string;

  /**
   * @generated from field: uint32 score_point = 3;
   */
  scorePoint: number;

  constructor(data?: PartialMessage<TopRankerSlim>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.leaderboard.TopRankerSlim";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TopRankerSlim;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TopRankerSlim;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TopRankerSlim;

  static equals(a: TopRankerSlim | PlainMessage<TopRankerSlim> | undefined, b: TopRankerSlim | PlainMessage<TopRankerSlim> | undefined): boolean;
}


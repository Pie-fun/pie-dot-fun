// @generated by protoc-gen-es v1.6.0
// @generated from file ethereum/v1/auth/auth.proto (package ethereum.v1.auth, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum ethereum.v1.auth.AccessLogType
 */
export declare enum AccessLogType {
  /**
   * default value. this value is unused.
   *
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  TYPE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: SIGNIN = 1;
   */
  SIGNIN = 1,

  /**
   * @generated from enum value: REFRESH = 2;
   */
  REFRESH = 2,

  /**
   * @generated from enum value: SIGNOUT = 3;
   */
  SIGNOUT = 3,
}

/**
 * @generated from message ethereum.v1.auth.SignInRequest
 */
export declare class SignInRequest extends Message<SignInRequest> {
  /**
   * @generated from field: string eoa_address = 1;
   */
  eoaAddress: string;

  /**
   * @generated from field: uint64 timestamp = 2;
   */
  timestamp: bigint;

  /**
   * @generated from field: string signature = 3;
   */
  signature: string;

  constructor(data?: PartialMessage<SignInRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.auth.SignInRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignInRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignInRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignInRequest;

  static equals(a: SignInRequest | PlainMessage<SignInRequest> | undefined, b: SignInRequest | PlainMessage<SignInRequest> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.auth.SignInResponse
 */
export declare class SignInResponse extends Message<SignInResponse> {
  /**
   * @generated from field: repeated string access_tokens = 1;
   */
  accessTokens: string[];

  /**
   * @generated from field: repeated string refresh_tokens = 2;
   */
  refreshTokens: string[];

  /**
   * @generated from field: string eoa_address = 3;
   */
  eoaAddress: string;

  /**
   * @generated from field: repeated ethereum.v1.auth.Profile profiles = 4;
   */
  profiles: Profile[];

  /**
   * @generated from field: bool has_accepted_terms = 5;
   */
  hasAcceptedTerms: boolean;

  constructor(data?: PartialMessage<SignInResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.auth.SignInResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignInResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignInResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignInResponse;

  static equals(a: SignInResponse | PlainMessage<SignInResponse> | undefined, b: SignInResponse | PlainMessage<SignInResponse> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.auth.Profile
 */
export declare class Profile extends Message<Profile> {
  /**
   * @generated from field: string address = 1;
   */
  address: string;

  /**
   * @generated from field: repeated string spaceship_addresses = 2;
   */
  spaceshipAddresses: string[];

  constructor(data?: PartialMessage<Profile>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.auth.Profile";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Profile;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Profile;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Profile;

  static equals(a: Profile | PlainMessage<Profile> | undefined, b: Profile | PlainMessage<Profile> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.auth.RefreshTokenRequest
 */
export declare class RefreshTokenRequest extends Message<RefreshTokenRequest> {
  constructor(data?: PartialMessage<RefreshTokenRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.auth.RefreshTokenRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RefreshTokenRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RefreshTokenRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RefreshTokenRequest;

  static equals(a: RefreshTokenRequest | PlainMessage<RefreshTokenRequest> | undefined, b: RefreshTokenRequest | PlainMessage<RefreshTokenRequest> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.auth.RefreshTokenResponse
 */
export declare class RefreshTokenResponse extends Message<RefreshTokenResponse> {
  /**
   * @generated from field: optional string access_token = 1;
   */
  accessToken?: string;

  /**
   * @generated from field: optional string refresh_token = 2;
   */
  refreshToken?: string;

  constructor(data?: PartialMessage<RefreshTokenResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.auth.RefreshTokenResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RefreshTokenResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RefreshTokenResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RefreshTokenResponse;

  static equals(a: RefreshTokenResponse | PlainMessage<RefreshTokenResponse> | undefined, b: RefreshTokenResponse | PlainMessage<RefreshTokenResponse> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.auth.SignoutRequest
 */
export declare class SignoutRequest extends Message<SignoutRequest> {
  constructor(data?: PartialMessage<SignoutRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.auth.SignoutRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignoutRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignoutRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignoutRequest;

  static equals(a: SignoutRequest | PlainMessage<SignoutRequest> | undefined, b: SignoutRequest | PlainMessage<SignoutRequest> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.auth.SignoutResponse
 */
export declare class SignoutResponse extends Message<SignoutResponse> {
  constructor(data?: PartialMessage<SignoutResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.auth.SignoutResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignoutResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignoutResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignoutResponse;

  static equals(a: SignoutResponse | PlainMessage<SignoutResponse> | undefined, b: SignoutResponse | PlainMessage<SignoutResponse> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.auth.SelectAccountRequest
 */
export declare class SelectAccountRequest extends Message<SelectAccountRequest> {
  /**
   * @generated from field: string spaceship_address = 1;
   */
  spaceshipAddress: string;

  constructor(data?: PartialMessage<SelectAccountRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.auth.SelectAccountRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SelectAccountRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SelectAccountRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SelectAccountRequest;

  static equals(a: SelectAccountRequest | PlainMessage<SelectAccountRequest> | undefined, b: SelectAccountRequest | PlainMessage<SelectAccountRequest> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.auth.SelectAccountResponse
 */
export declare class SelectAccountResponse extends Message<SelectAccountResponse> {
  /**
   * @generated from field: optional string access_token = 1;
   */
  accessToken?: string;

  /**
   * @generated from field: optional string refresh_token = 2;
   */
  refreshToken?: string;

  constructor(data?: PartialMessage<SelectAccountResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.auth.SelectAccountResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SelectAccountResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SelectAccountResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SelectAccountResponse;

  static equals(a: SelectAccountResponse | PlainMessage<SelectAccountResponse> | undefined, b: SelectAccountResponse | PlainMessage<SelectAccountResponse> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.auth.AcceptTermsOfServiceRequest
 */
export declare class AcceptTermsOfServiceRequest extends Message<AcceptTermsOfServiceRequest> {
  constructor(data?: PartialMessage<AcceptTermsOfServiceRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.auth.AcceptTermsOfServiceRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AcceptTermsOfServiceRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AcceptTermsOfServiceRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AcceptTermsOfServiceRequest;

  static equals(a: AcceptTermsOfServiceRequest | PlainMessage<AcceptTermsOfServiceRequest> | undefined, b: AcceptTermsOfServiceRequest | PlainMessage<AcceptTermsOfServiceRequest> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.auth.AuthenticateRequest
 */
export declare class AuthenticateRequest extends Message<AuthenticateRequest> {
  /**
   * @generated from field: string access_token = 1;
   */
  accessToken: string;

  constructor(data?: PartialMessage<AuthenticateRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.auth.AuthenticateRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuthenticateRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuthenticateRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuthenticateRequest;

  static equals(a: AuthenticateRequest | PlainMessage<AuthenticateRequest> | undefined, b: AuthenticateRequest | PlainMessage<AuthenticateRequest> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.auth.AuthenticateResponse
 */
export declare class AuthenticateResponse extends Message<AuthenticateResponse> {
  /**
   * @generated from field: string eoa_address = 1;
   */
  eoaAddress: string;

  /**
   * @generated from field: string profile_address = 2;
   */
  profileAddress: string;

  /**
   * @generated from field: string spaceship_address = 3;
   */
  spaceshipAddress: string;

  /**
   * @generated from field: bool has_accepted_terms = 4;
   */
  hasAcceptedTerms: boolean;

  constructor(data?: PartialMessage<AuthenticateResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.auth.AuthenticateResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AuthenticateResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AuthenticateResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AuthenticateResponse;

  static equals(a: AuthenticateResponse | PlainMessage<AuthenticateResponse> | undefined, b: AuthenticateResponse | PlainMessage<AuthenticateResponse> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.auth.GetTempTokenRequest
 */
export declare class GetTempTokenRequest extends Message<GetTempTokenRequest> {
  constructor(data?: PartialMessage<GetTempTokenRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.auth.GetTempTokenRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetTempTokenRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetTempTokenRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetTempTokenRequest;

  static equals(a: GetTempTokenRequest | PlainMessage<GetTempTokenRequest> | undefined, b: GetTempTokenRequest | PlainMessage<GetTempTokenRequest> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.auth.GetTempTokenResponse
 */
export declare class GetTempTokenResponse extends Message<GetTempTokenResponse> {
  /**
   * @generated from field: string access_token = 1;
   */
  accessToken: string;

  constructor(data?: PartialMessage<GetTempTokenResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.auth.GetTempTokenResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetTempTokenResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetTempTokenResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetTempTokenResponse;

  static equals(a: GetTempTokenResponse | PlainMessage<GetTempTokenResponse> | undefined, b: GetTempTokenResponse | PlainMessage<GetTempTokenResponse> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.auth.DownloadRequest
 */
export declare class DownloadRequest extends Message<DownloadRequest> {
  /**
   * @generated from field: string url = 1;
   */
  url: string;

  constructor(data?: PartialMessage<DownloadRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.auth.DownloadRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DownloadRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DownloadRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DownloadRequest;

  static equals(a: DownloadRequest | PlainMessage<DownloadRequest> | undefined, b: DownloadRequest | PlainMessage<DownloadRequest> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.auth.DownloadResponse
 */
export declare class DownloadResponse extends Message<DownloadResponse> {
  /**
   * @generated from field: string header = 1;
   */
  header: string;

  /**
   * @generated from field: string body = 2;
   */
  body: string;

  constructor(data?: PartialMessage<DownloadResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.auth.DownloadResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DownloadResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DownloadResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DownloadResponse;

  static equals(a: DownloadResponse | PlainMessage<DownloadResponse> | undefined, b: DownloadResponse | PlainMessage<DownloadResponse> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.auth.AccessTokenClaim
 */
export declare class AccessTokenClaim extends Message<AccessTokenClaim> {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * @generated from field: string eoa_address = 2;
   */
  eoaAddress: string;

  /**
   * @generated from field: string profile_address = 3;
   */
  profileAddress: string;

  /**
   * @generated from field: string spaceship_address = 4;
   */
  spaceshipAddress: string;

  /**
   * @generated from field: bool has_accepted_terms = 5;
   */
  hasAcceptedTerms: boolean;

  constructor(data?: PartialMessage<AccessTokenClaim>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.auth.AccessTokenClaim";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AccessTokenClaim;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AccessTokenClaim;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AccessTokenClaim;

  static equals(a: AccessTokenClaim | PlainMessage<AccessTokenClaim> | undefined, b: AccessTokenClaim | PlainMessage<AccessTokenClaim> | undefined): boolean;
}


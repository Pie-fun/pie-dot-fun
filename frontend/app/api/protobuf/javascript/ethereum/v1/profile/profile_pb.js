// @generated by protoc-gen-es v1.6.0
// @generated from file ethereum/v1/profile/profile.proto (package ethereum.v1.profile, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { FieldMask, proto3, Timestamp } from "@bufbuild/protobuf";
import { MySpace } from "./my_space_pb.js";
import { SNSType } from "./sns_connection_pb.js";
import { ChainType } from "../outpost/nft_pb.js";

/**
 * The state of profile
 *
 * @generated from enum ethereum.v1.profile.ProfileState
 */
export const ProfileState = proto3.makeEnum(
  "ethereum.v1.profile.ProfileState",
  [
    {no: 0, name: "STATE_UNSPECIFIED"},
    {no: 1, name: "CREATED"},
    {no: 2, name: "PROTOSHIP_MINTED"},
    {no: 3, name: "PROTOSHIP_BURNED"},
    {no: 4, name: "OWNERSHIP_ACQUIRED"},
  ],
);

/**
 * ProfileView enumeration represents the view of a profile.
 * The view controls the amount of information returned.
 * The BASIC view omits the following fields:
 * star_balance, sns_connections, gm_stats
 *
 * Reference
 * https://cloud.google.com/apis/design/design_patterns#list_flattening and
 * https://google.aip.dev/157
 *
 * @generated from enum ethereum.v1.profile.ProfileView
 */
export const ProfileView = proto3.makeEnum(
  "ethereum.v1.profile.ProfileView",
  [
    {no: 0, name: "Profile_VIEW_UNSPECIFIED"},
    {no: 1, name: "BASIC"},
    {no: 2, name: "FULL"},
  ],
);

/**
 * ListProfilesRequest payload
 * (-- api-linter: core::0158::request-page-token-field=disabled
 *     aip.dev/not-precedent: We need to do this because reasons. --)
 * (-- api-linter: core::0132::request-unknown-fields=disabled
 *     aip.dev/not-precedent: We really need this field because reasons. --)
 *
 * @generated from message ethereum.v1.profile.ListProfilesRequest
 */
export const ListProfilesRequest = proto3.makeMessageType(
  "ethereum.v1.profile.ListProfilesRequest",
  () => [
    { no: 1, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "filter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "view", kind: "enum", T: proto3.getEnumType(ProfileView) },
  ],
);

/**
 * ListProfilesResponse
 * (-- api-linter: core::0158::response-next-page-token-field=disabled
 *     aip.dev/not-precedent: We need to do this because reasons. --)
 *
 * @generated from message ethereum.v1.profile.ListProfilesResponse
 */
export const ListProfilesResponse = proto3.makeMessageType(
  "ethereum.v1.profile.ListProfilesResponse",
  () => [
    { no: 1, name: "profiles", kind: "message", T: Profile, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * GetProfileRequest.
 *
 * @generated from message ethereum.v1.profile.GetProfileRequest
 */
export const GetProfileRequest = proto3.makeMessageType(
  "ethereum.v1.profile.GetProfileRequest",
  () => [
    { no: 1, name: "profile", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "view", kind: "enum", T: proto3.getEnumType(ProfileView) },
  ],
);

/**
 * UpdateProfileRequest.
 *
 * @generated from message ethereum.v1.profile.UpdateProfileRequest
 */
export const UpdateProfileRequest = proto3.makeMessageType(
  "ethereum.v1.profile.UpdateProfileRequest",
  () => [
    { no: 1, name: "profile", kind: "message", T: Profile },
    { no: 2, name: "update_mask", kind: "message", T: FieldMask },
  ],
);

/**
 * CompleteTutorialRequest message represents a request to complete a tutorial.
 *
 * @generated from message ethereum.v1.profile.CompleteTutorialRequest
 */
export const CompleteTutorialRequest = proto3.makeMessageType(
  "ethereum.v1.profile.CompleteTutorialRequest",
  () => [
    { no: 1, name: "profile", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * CompleteTutorialResponse message represents a response from completing a tutorial.
 *
 * @generated from message ethereum.v1.profile.CompleteTutorialResponse
 */
export const CompleteTutorialResponse = proto3.makeMessageType(
  "ethereum.v1.profile.CompleteTutorialResponse",
  () => [
    { no: 1, name: "tutorial_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "completed_timestamp", kind: "message", T: Timestamp },
  ],
);

/**
 * GetMySpaceRequest message represents the request to list my space assets.
 *
 * @generated from message ethereum.v1.profile.GetMySpaceRequest
 */
export const GetMySpaceRequest = proto3.makeMessageType(
  "ethereum.v1.profile.GetMySpaceRequest",
  () => [
    { no: 1, name: "profile", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * UpdateMySpaceRequest message represents the request to update my space assets.
 * There is no update_mask for this request because always upate all my space assets.
 *
 * @generated from message ethereum.v1.profile.UpdateMySpaceRequest
 */
export const UpdateMySpaceRequest = proto3.makeMessageType(
  "ethereum.v1.profile.UpdateMySpaceRequest",
  () => [
    { no: 1, name: "profile", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "my_space", kind: "message", T: MySpace },
  ],
);

/**
 * @generated from message ethereum.v1.profile.GetProfileDailyPlayCountRequest
 */
export const GetProfileDailyPlayCountRequest = proto3.makeMessageType(
  "ethereum.v1.profile.GetProfileDailyPlayCountRequest",
  () => [
    { no: 1, name: "profile", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message ethereum.v1.profile.GetProfileDailyPlayCountResponse
 */
export const GetProfileDailyPlayCountResponse = proto3.makeMessageType(
  "ethereum.v1.profile.GetProfileDailyPlayCountResponse",
  () => [
    { no: 1, name: "daily_play_count", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ],
);

/**
 * @generated from message ethereum.v1.profile.IncrementProfileDailyPlayCountRequest
 */
export const IncrementProfileDailyPlayCountRequest = proto3.makeMessageType(
  "ethereum.v1.profile.IncrementProfileDailyPlayCountRequest",
  () => [
    { no: 1, name: "profile", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message ethereum.v1.profile.IncrementProfileDailyPlayCountResponse
 */
export const IncrementProfileDailyPlayCountResponse = proto3.makeMessageType(
  "ethereum.v1.profile.IncrementProfileDailyPlayCountResponse",
  () => [
    { no: 1, name: "daily_play_count", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ],
);

/**
 * @generated from message ethereum.v1.profile.ConnectSNSRequest
 */
export const ConnectSNSRequest = proto3.makeMessageType(
  "ethereum.v1.profile.ConnectSNSRequest",
  () => [
    { no: 1, name: "profile", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "sns_type", kind: "enum", T: proto3.getEnumType(SNSType) },
    { no: 3, name: "access_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "access_token_secret", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message ethereum.v1.profile.Profile
 */
export const Profile = proto3.makeMessageType(
  "ethereum.v1.profile.Profile",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "create_time", kind: "message", T: Timestamp },
    { no: 4, name: "update_time", kind: "message", T: Timestamp },
    { no: 5, name: "number", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 6, name: "state", kind: "enum", T: proto3.getEnumType(ProfileState) },
    { no: 7, name: "nft", kind: "message", T: ProfileNFT },
    { no: 8, name: "star_account", kind: "message", T: StarAccount },
    { no: 9, name: "ens", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 10, name: "nickname", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 11, name: "is_tutorial_done", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 12, name: "is_identified", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * 다양한 tutorial 이 생길 예정
 *
 * @generated from message ethereum.v1.profile.Tutorial
 */
export const Tutorial = proto3.makeMessageType(
  "ethereum.v1.profile.Tutorial",
  () => [
    { no: 1, name: "is_done", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "complete_time", kind: "message", T: Timestamp },
  ],
);

/**
 * StarAccount message represents a balance of stars for a profile.
 *
 * @generated from message ethereum.v1.profile.StarAccount
 */
export const StarAccount = proto3.makeMessageType(
  "ethereum.v1.profile.StarAccount",
  () => [
    { no: 1, name: "balance", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "cumulative_total", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ],
);

/**
 * GMStatsSlim message represents the statistics for a gm count.
 *
 * @generated from message ethereum.v1.profile.GMStatsSlim
 */
export const GMStatsSlim = proto3.makeMessageType(
  "ethereum.v1.profile.GMStatsSlim",
  () => [
    { no: 1, name: "sent_count", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "received_count", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ],
);

/**
 * ProfileNFT message represents an Profile's NFT.
 *
 * @generated from message ethereum.v1.profile.ProfileNFT
 */
export const ProfileNFT = proto3.makeMessageType(
  "ethereum.v1.profile.ProfileNFT",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "token_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "token_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "image_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "contract", kind: "message", T: ProfileNFTContract },
  ],
);

/**
 * NFTContract message represents an NFT contract.
 *
 * @generated from message ethereum.v1.profile.ProfileNFTContract
 */
export const ProfileNFTContract = proto3.makeMessageType(
  "ethereum.v1.profile.ProfileNFTContract",
  () => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "symbol", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "chain", kind: "enum", T: proto3.getEnumType(ChainType) },
    { no: 5, name: "image_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);


// @generated by protoc-gen-es v1.6.0
// @generated from file ethereum/v1/profile/profile.proto (package ethereum.v1.profile, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, FieldMask, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { MySpace } from "./my_space_pb.js";
import type { SNSType } from "./sns_connection_pb.js";
import type { ChainType } from "../outpost/nft_pb.js";

/**
 * The state of profile
 *
 * @generated from enum ethereum.v1.profile.ProfileState
 */
export declare enum ProfileState {
  /**
   * default value. this value is unused.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * Profile was firstly created but not started to rent base spaceship.
   * This state is very transitory state because next transaction will change it to PROTOSHIP_MINTED or OWNERSHIP_ACQUIRED state immediately.
   *
   * @generated from enum value: CREATED = 1;
   */
  CREATED = 1,

  /**
   * Profile was firstly created with base spaceship rental.
   *
   * @generated from enum value: PROTOSHIP_MINTED = 2;
   */
  PROTOSHIP_MINTED = 2,

  /**
   * Profile was created with base spaceship rental but failed to acquire
   *
   * @generated from enum value: PROTOSHIP_BURNED = 3;
   */
  PROTOSHIP_BURNED = 3,

  /**
   * Profile has acquired ownership.
   *
   * @generated from enum value: OWNERSHIP_ACQUIRED = 4;
   */
  OWNERSHIP_ACQUIRED = 4,
}

/**
 * ProfileView enumeration represents the view of a profile.
 * The view controls the amount of information returned.
 * The BASIC view omits the following fields:
 * star_balance, sns_connections, gm_stats
 *
 * Reference
 * https://cloud.google.com/apis/design/design_patterns#list_flattening and
 * https://google.aip.dev/157
 *
 * @generated from enum ethereum.v1.profile.ProfileView
 */
export declare enum ProfileView {
  /**
   * The default / unset value.
   * The API will default to the FULL view.
   *
   * @generated from enum value: Profile_VIEW_UNSPECIFIED = 0;
   */
  Profile_VIEW_UNSPECIFIED = 0,

  /**
   * Include only basic info.
   * Do not include `nft`, `star_balance`, `sns_connections`, `gm_stats`
   *
   * @generated from enum value: BASIC = 1;
   */
  BASIC = 1,

  /**
   * Include everything.
   * This is the default value for both ListProfiles and GetProfile.
   *
   * @generated from enum value: FULL = 2;
   */
  FULL = 2,
}

/**
 * ListProfilesRequest payload
 * (-- api-linter: core::0158::request-page-token-field=disabled
 *     aip.dev/not-precedent: We need to do this because reasons. --)
 * (-- api-linter: core::0132::request-unknown-fields=disabled
 *     aip.dev/not-precedent: We really need this field because reasons. --)
 *
 * @generated from message ethereum.v1.profile.ListProfilesRequest
 */
export declare class ListProfilesRequest extends Message<ListProfilesRequest> {
  /**
   * The maximum number of profiles to return. The service may return fewer than
   * this value.
   * If unspecified, at most 50 rows will be returned.
   * The maximum value is 1024; values above 1024 will be coerced to 1024.
   *
   * @generated from field: int32 page_size = 1;
   */
  pageSize: number;

  /**
   * Token of the page to retrieve. If not specified, the first
   * page of results will be returned. Use the value obtained from
   * `next_page_token` in the previous response in order to request
   * the next page of results.
   *
   * When paginating, all other parameters provided to `ListProfiles` must match
   * the call that provided the page token.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;

  /**
   * Available Sequence and Operator
   * * name
   *   * `Equal`
   * * create_time
   *   * `>`
   * * identified
   *   * Equal`
   *
   * Examples
   * * name="profiles/0x6F11EF2c07f2E381CbE514198DdE87A0c0a19442"
   * * create_time>"2020-04-21T11:30:00Z"
   * * identifed
   *
   * @generated from field: string filter = 3;
   */
  filter: string;

  /**
   * Optional. The view to return.
   * Defaults to FULL if not set.
   *
   * ProfileView enumeration represents the view of a profile.
   * The view controls the amount of information returned.
   * The BASIC view omits the following fields:
   * star_balance, sns_connections, gm_stats
   *
   * Reference
   * https://cloud.google.com/apis/design/design_patterns#list_flattening and
   * https://google.aip.dev/157
   *
   * @generated from field: ethereum.v1.profile.ProfileView view = 4;
   */
  view: ProfileView;

  constructor(data?: PartialMessage<ListProfilesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.profile.ListProfilesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListProfilesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListProfilesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListProfilesRequest;

  static equals(a: ListProfilesRequest | PlainMessage<ListProfilesRequest> | undefined, b: ListProfilesRequest | PlainMessage<ListProfilesRequest> | undefined): boolean;
}

/**
 * ListProfilesResponse
 * (-- api-linter: core::0158::response-next-page-token-field=disabled
 *     aip.dev/not-precedent: We need to do this because reasons. --)
 *
 * @generated from message ethereum.v1.profile.ListProfilesResponse
 */
export declare class ListProfilesResponse extends Message<ListProfilesResponse> {
  /**
   * The list of rows that matched the query.
   *
   * @generated from field: repeated ethereum.v1.profile.Profile profiles = 1;
   */
  profiles: Profile[];

  /**
   * Pagination token used to retrieve the next page of results.
   * Pass the content of this string as the `page_token` attribute of
   * the next request. `next_page_token` is not returned for the last
   * page.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  constructor(data?: PartialMessage<ListProfilesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.profile.ListProfilesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListProfilesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListProfilesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListProfilesResponse;

  static equals(a: ListProfilesResponse | PlainMessage<ListProfilesResponse> | undefined, b: ListProfilesResponse | PlainMessage<ListProfilesResponse> | undefined): boolean;
}

/**
 * GetProfileRequest.
 *
 * @generated from message ethereum.v1.profile.GetProfileRequest
 */
export declare class GetProfileRequest extends Message<GetProfileRequest> {
  /**
   * The name of the profile to retrieve.
   * Format: profiles/{address}
   * Alias "profiles/me" is supported.
   *
   * @generated from field: string profile = 1;
   */
  profile: string;

  /**
   * Optional. The view to return.
   * Defaults to FULL if not set.
   *
   * ProfileView enumeration represents the view of a profile.
   * The view controls the amount of information returned.
   * The BASIC view omits the following fields:
   * star_balance, sns_connections, gm_stats
   *
   * Reference
   * https://cloud.google.com/apis/design/design_patterns#list_flattening and
   * https://google.aip.dev/157
   *
   * @generated from field: ethereum.v1.profile.ProfileView view = 2;
   */
  view: ProfileView;

  constructor(data?: PartialMessage<GetProfileRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.profile.GetProfileRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetProfileRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetProfileRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetProfileRequest;

  static equals(a: GetProfileRequest | PlainMessage<GetProfileRequest> | undefined, b: GetProfileRequest | PlainMessage<GetProfileRequest> | undefined): boolean;
}

/**
 * UpdateProfileRequest.
 *
 * @generated from message ethereum.v1.profile.UpdateProfileRequest
 */
export declare class UpdateProfileRequest extends Message<UpdateProfileRequest> {
  /**
   * Profile to update
   * Format: profiles/{address}
   *
   * @generated from field: ethereum.v1.profile.Profile profile = 1;
   */
  profile?: Profile;

  /**
   * Field mask that specifies the fields to update.
   * If no field mask is set, all fields will be updated.
   * Wildcards are supported.
   * Examples
   * ["*"]
   * ["nickname"]
   * ["nickname", "nft"]
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  constructor(data?: PartialMessage<UpdateProfileRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.profile.UpdateProfileRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateProfileRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateProfileRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateProfileRequest;

  static equals(a: UpdateProfileRequest | PlainMessage<UpdateProfileRequest> | undefined, b: UpdateProfileRequest | PlainMessage<UpdateProfileRequest> | undefined): boolean;
}

/**
 * CompleteTutorialRequest message represents a request to complete a tutorial.
 *
 * @generated from message ethereum.v1.profile.CompleteTutorialRequest
 */
export declare class CompleteTutorialRequest extends Message<CompleteTutorialRequest> {
  /**
   * The profile to complete the tutorial for.
   * Format: profiles/{address}
   * Resource name alias "profiles/me" is supported.
   *
   * @generated from field: string profile = 1;
   */
  profile: string;

  constructor(data?: PartialMessage<CompleteTutorialRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.profile.CompleteTutorialRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CompleteTutorialRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CompleteTutorialRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CompleteTutorialRequest;

  static equals(a: CompleteTutorialRequest | PlainMessage<CompleteTutorialRequest> | undefined, b: CompleteTutorialRequest | PlainMessage<CompleteTutorialRequest> | undefined): boolean;
}

/**
 * CompleteTutorialResponse message represents a response from completing a tutorial.
 *
 * @generated from message ethereum.v1.profile.CompleteTutorialResponse
 */
export declare class CompleteTutorialResponse extends Message<CompleteTutorialResponse> {
  /**
   * The ID of the completed tutorial.
   *
   * @generated from field: string tutorial_id = 1;
   */
  tutorialId: string;

  /**
   * The timestamp of when the tutorial was completed.
   *
   * @generated from field: google.protobuf.Timestamp completed_timestamp = 2;
   */
  completedTimestamp?: Timestamp;

  constructor(data?: PartialMessage<CompleteTutorialResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.profile.CompleteTutorialResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CompleteTutorialResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CompleteTutorialResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CompleteTutorialResponse;

  static equals(a: CompleteTutorialResponse | PlainMessage<CompleteTutorialResponse> | undefined, b: CompleteTutorialResponse | PlainMessage<CompleteTutorialResponse> | undefined): boolean;
}

/**
 * GetMySpaceRequest message represents the request to list my space assets.
 *
 * @generated from message ethereum.v1.profile.GetMySpaceRequest
 */
export declare class GetMySpaceRequest extends Message<GetMySpaceRequest> {
  /**
   * The profile whose my space assets should be listed.
   * Format: profiles/{address}
   *
   * @generated from field: string profile = 1;
   */
  profile: string;

  constructor(data?: PartialMessage<GetMySpaceRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.profile.GetMySpaceRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetMySpaceRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetMySpaceRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetMySpaceRequest;

  static equals(a: GetMySpaceRequest | PlainMessage<GetMySpaceRequest> | undefined, b: GetMySpaceRequest | PlainMessage<GetMySpaceRequest> | undefined): boolean;
}

/**
 * UpdateMySpaceRequest message represents the request to update my space assets.
 * There is no update_mask for this request because always upate all my space assets.
 *
 * @generated from message ethereum.v1.profile.UpdateMySpaceRequest
 */
export declare class UpdateMySpaceRequest extends Message<UpdateMySpaceRequest> {
  /**
   * The profile whose my space assets should be updated.
   * Format: profiles/{address}
   *
   * @generated from field: string profile = 1;
   */
  profile: string;

  /**
   * @generated from field: ethereum.v1.profile.MySpace my_space = 2;
   */
  mySpace?: MySpace;

  constructor(data?: PartialMessage<UpdateMySpaceRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.profile.UpdateMySpaceRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateMySpaceRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateMySpaceRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateMySpaceRequest;

  static equals(a: UpdateMySpaceRequest | PlainMessage<UpdateMySpaceRequest> | undefined, b: UpdateMySpaceRequest | PlainMessage<UpdateMySpaceRequest> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.profile.GetProfileDailyPlayCountRequest
 */
export declare class GetProfileDailyPlayCountRequest extends Message<GetProfileDailyPlayCountRequest> {
  /**
   * Format: profiles/{address}
   *
   * @generated from field: string profile = 1;
   */
  profile: string;

  constructor(data?: PartialMessage<GetProfileDailyPlayCountRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.profile.GetProfileDailyPlayCountRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetProfileDailyPlayCountRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetProfileDailyPlayCountRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetProfileDailyPlayCountRequest;

  static equals(a: GetProfileDailyPlayCountRequest | PlainMessage<GetProfileDailyPlayCountRequest> | undefined, b: GetProfileDailyPlayCountRequest | PlainMessage<GetProfileDailyPlayCountRequest> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.profile.GetProfileDailyPlayCountResponse
 */
export declare class GetProfileDailyPlayCountResponse extends Message<GetProfileDailyPlayCountResponse> {
  /**
   * The daily play count of the profile.
   *
   * @generated from field: uint32 daily_play_count = 1;
   */
  dailyPlayCount: number;

  constructor(data?: PartialMessage<GetProfileDailyPlayCountResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.profile.GetProfileDailyPlayCountResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetProfileDailyPlayCountResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetProfileDailyPlayCountResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetProfileDailyPlayCountResponse;

  static equals(a: GetProfileDailyPlayCountResponse | PlainMessage<GetProfileDailyPlayCountResponse> | undefined, b: GetProfileDailyPlayCountResponse | PlainMessage<GetProfileDailyPlayCountResponse> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.profile.IncrementProfileDailyPlayCountRequest
 */
export declare class IncrementProfileDailyPlayCountRequest extends Message<IncrementProfileDailyPlayCountRequest> {
  /**
   * Format: profiles/{address}
   *
   * @generated from field: string profile = 1;
   */
  profile: string;

  constructor(data?: PartialMessage<IncrementProfileDailyPlayCountRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.profile.IncrementProfileDailyPlayCountRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IncrementProfileDailyPlayCountRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IncrementProfileDailyPlayCountRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IncrementProfileDailyPlayCountRequest;

  static equals(a: IncrementProfileDailyPlayCountRequest | PlainMessage<IncrementProfileDailyPlayCountRequest> | undefined, b: IncrementProfileDailyPlayCountRequest | PlainMessage<IncrementProfileDailyPlayCountRequest> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.profile.IncrementProfileDailyPlayCountResponse
 */
export declare class IncrementProfileDailyPlayCountResponse extends Message<IncrementProfileDailyPlayCountResponse> {
  /**
   * The daily play count of the profile.
   *
   * @generated from field: uint32 daily_play_count = 1;
   */
  dailyPlayCount: number;

  constructor(data?: PartialMessage<IncrementProfileDailyPlayCountResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.profile.IncrementProfileDailyPlayCountResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IncrementProfileDailyPlayCountResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IncrementProfileDailyPlayCountResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IncrementProfileDailyPlayCountResponse;

  static equals(a: IncrementProfileDailyPlayCountResponse | PlainMessage<IncrementProfileDailyPlayCountResponse> | undefined, b: IncrementProfileDailyPlayCountResponse | PlainMessage<IncrementProfileDailyPlayCountResponse> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.profile.ConnectSNSRequest
 */
export declare class ConnectSNSRequest extends Message<ConnectSNSRequest> {
  /**
   * The profile to connect the SNS.
   * Format: profiles/{address}
   * Resource name alias "profiles/me" is supported.
   *
   * @generated from field: string profile = 1;
   */
  profile: string;

  /**
   * The SNS type to connect.
   *
   * @generated from field: ethereum.v1.profile.SNSType sns_type = 2;
   */
  snsType: SNSType;

  /**
   * The access token for the SNS API.
   * NOTE: This field can be changed depending on the implementation or SNS type.
   *
   * @generated from field: string access_token = 3;
   */
  accessToken: string;

  /**
   * The access token secret for the SNS API.
   *
   * @generated from field: string access_token_secret = 4;
   */
  accessTokenSecret: string;

  constructor(data?: PartialMessage<ConnectSNSRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.profile.ConnectSNSRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConnectSNSRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConnectSNSRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConnectSNSRequest;

  static equals(a: ConnectSNSRequest | PlainMessage<ConnectSNSRequest> | undefined, b: ConnectSNSRequest | PlainMessage<ConnectSNSRequest> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.profile.Profile
 */
export declare class Profile extends Message<Profile> {
  /**
   * The resource name of the Profile.
   * Format: profiles/{address}
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * EIP-6551 TBA Address of the Profile NFT.
   *
   * @generated from field: string address = 2;
   */
  address: string;

  /**
   * The created time of Profile.
   * RFC3339 format e.g. "2006-01-02T15:04:05Z07:00"
   *
   * @generated from field: google.protobuf.Timestamp create_time = 3;
   */
  createTime?: Timestamp;

  /**
   * The last updated time of Profile.
   * RFC3339 format e.g. "2006-01-02T15:04:05Z07:00"
   *
   * @generated from field: google.protobuf.Timestamp update_time = 4;
   */
  updateTime?: Timestamp;

  /**
   * The number of Profile.
   *
   * @generated from field: uint64 number = 5;
   */
  number: bigint;

  /**
   * The state of Profile
   *
   * @generated from field: ethereum.v1.profile.ProfileState state = 6;
   */
  state: ProfileState;

  /**
   * The current pfp nft of Profile.
   *
   * @generated from field: ethereum.v1.profile.ProfileNFT nft = 7;
   */
  nft?: ProfileNFT;

  /**
   * The star account of Profile
   *
   * @generated from field: ethereum.v1.profile.StarAccount star_account = 8;
   */
  starAccount?: StarAccount;

  /**
   * The ens of profile
   * This field is optional
   *
   * @generated from field: optional string ens = 9;
   */
  ens?: string;

  /**
   * The nickname of Profile.
   * This field is optional.
   *
   * @generated from field: optional string nickname = 10;
   */
  nickname?: string;

  /**
   * Whether Profile finished tutorial or not
   *
   * @generated from field: bool is_tutorial_done = 11;
   */
  isTutorialDone: boolean;

  /**
   * Whether Profile is identified or not
   *
   * @generated from field: bool is_identified = 12;
   */
  isIdentified: boolean;

  constructor(data?: PartialMessage<Profile>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.profile.Profile";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Profile;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Profile;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Profile;

  static equals(a: Profile | PlainMessage<Profile> | undefined, b: Profile | PlainMessage<Profile> | undefined): boolean;
}

/**
 * 다양한 tutorial 이 생길 예정
 *
 * @generated from message ethereum.v1.profile.Tutorial
 */
export declare class Tutorial extends Message<Tutorial> {
  /**
   * whether tutorial is done or not
   *
   * @generated from field: bool is_done = 1;
   */
  isDone: boolean;

  /**
   * The completed time of tutorial.
   *
   * @generated from field: google.protobuf.Timestamp complete_time = 2;
   */
  completeTime?: Timestamp;

  constructor(data?: PartialMessage<Tutorial>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.profile.Tutorial";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Tutorial;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Tutorial;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Tutorial;

  static equals(a: Tutorial | PlainMessage<Tutorial> | undefined, b: Tutorial | PlainMessage<Tutorial> | undefined): boolean;
}

/**
 * StarAccount message represents a balance of stars for a profile.
 *
 * @generated from message ethereum.v1.profile.StarAccount
 */
export declare class StarAccount extends Message<StarAccount> {
  /**
   * The current balance of stars.
   *
   * @generated from field: uint32 balance = 1;
   */
  balance: number;

  /**
   * The cumulative total of stars.
   *
   * @generated from field: uint32 cumulative_total = 2;
   */
  cumulativeTotal: number;

  constructor(data?: PartialMessage<StarAccount>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.profile.StarAccount";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StarAccount;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StarAccount;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StarAccount;

  static equals(a: StarAccount | PlainMessage<StarAccount> | undefined, b: StarAccount | PlainMessage<StarAccount> | undefined): boolean;
}

/**
 * GMStatsSlim message represents the statistics for a gm count.
 *
 * @generated from message ethereum.v1.profile.GMStatsSlim
 */
export declare class GMStatsSlim extends Message<GMStatsSlim> {
  /**
   * The number of messages sent.
   *
   * @generated from field: uint32 sent_count = 1;
   */
  sentCount: number;

  /**
   * The number of messages received.
   *
   * @generated from field: uint32 received_count = 2;
   */
  receivedCount: number;

  constructor(data?: PartialMessage<GMStatsSlim>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.profile.GMStatsSlim";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GMStatsSlim;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GMStatsSlim;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GMStatsSlim;

  static equals(a: GMStatsSlim | PlainMessage<GMStatsSlim> | undefined, b: GMStatsSlim | PlainMessage<GMStatsSlim> | undefined): boolean;
}

/**
 * ProfileNFT message represents an Profile's NFT.
 *
 * @generated from message ethereum.v1.profile.ProfileNFT
 */
export declare class ProfileNFT extends Message<ProfileNFT> {
  /**
   * The resource name of the NFT asset.
   * Format: nfts/{chain_type}/{contract_address}/{token_id}
   * Examples: nfts/ETHEREUM/0x1f9090aaE28b8a3dCeaDf281B0F12828e676c326/1
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Token ID of the NFT asset.
   *
   * @generated from field: string token_id = 2;
   */
  tokenId: string;

  /**
   * Token Name of the NFT asset.
   *
   * @generated from field: string token_name = 3;
   */
  tokenName: string;

  /**
   * The URI of the NFT asset's image.
   * This URI is cached version of image original URI
   * e.g. "https://cdn.spacebar.xyz/nfts/ethereum/0x79fcdef22feed20eddacbb2587640e45491b757f/609"
   *
   * @generated from field: string image_uri = 4;
   */
  imageUri: string;

  /**
   * The contract that owns the NFT asset.
   * Output only.
   *
   * @generated from field: ethereum.v1.profile.ProfileNFTContract contract = 5;
   */
  contract?: ProfileNFTContract;

  constructor(data?: PartialMessage<ProfileNFT>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.profile.ProfileNFT";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProfileNFT;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProfileNFT;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProfileNFT;

  static equals(a: ProfileNFT | PlainMessage<ProfileNFT> | undefined, b: ProfileNFT | PlainMessage<ProfileNFT> | undefined): boolean;
}

/**
 * NFTContract message represents an NFT contract.
 *
 * @generated from message ethereum.v1.profile.ProfileNFTContract
 */
export declare class ProfileNFTContract extends Message<ProfileNFTContract> {
  /**
   * The address of the NFT contract.
   *
   * @generated from field: string address = 1;
   */
  address: string;

  /**
   * The name of the NFT contract schema.
   *
   * @generated from field: string display_name = 2;
   */
  displayName: string;

  /**
   * The symbol of the NFT contract.
   *
   * @generated from field: string symbol = 3;
   */
  symbol: string;

  /**
   * The blockchain on which the NFT contract resides.
   *
   * @generated from field: ethereum.v1.outpost.ChainType chain = 4;
   */
  chain: ChainType;

  /**
   * The URI of the contract image
   *
   * @generated from field: string image_uri = 5;
   */
  imageUri: string;

  constructor(data?: PartialMessage<ProfileNFTContract>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.profile.ProfileNFTContract";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProfileNFTContract;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProfileNFTContract;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProfileNFTContract;

  static equals(a: ProfileNFTContract | PlainMessage<ProfileNFTContract> | undefined, b: ProfileNFTContract | PlainMessage<ProfileNFTContract> | undefined): boolean;
}


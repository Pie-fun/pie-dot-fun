// @generated by protoc-gen-es v1.6.0
// @generated from file ethereum/v1/chain/sign.proto (package ethereum.v1.chain, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message ethereum.v1.chain.SignWKeyMintRequest
 */
export declare class SignWKeyMintRequest extends Message<SignWKeyMintRequest> {
  /**
   * @generated from field: string eoa_address = 1;
   */
  eoaAddress: string;

  constructor(data?: PartialMessage<SignWKeyMintRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.chain.SignWKeyMintRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignWKeyMintRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignWKeyMintRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignWKeyMintRequest;

  static equals(a: SignWKeyMintRequest | PlainMessage<SignWKeyMintRequest> | undefined, b: SignWKeyMintRequest | PlainMessage<SignWKeyMintRequest> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.chain.SignKeyMintRequest
 */
export declare class SignKeyMintRequest extends Message<SignKeyMintRequest> {
  /**
   * This field will be injected from the auth token by Gateway, which means web client do not need to pass this field.
   *
   * @generated from field: optional string profile_contract_address = 1;
   */
  profileContractAddress?: string;

  /**
   * This field will be injected from the auth token by Gateway, which means web client do not need to pass this field.
   *
   * @generated from field: optional string profile_token_id = 2;
   */
  profileTokenId?: string;

  /**
   * This field will be injected from the auth token by Gateway, which means web client do not need to pass this field.
   *
   * @generated from field: optional string spaceship_token_id = 3;
   */
  spaceshipTokenId?: string;

  /**
   * @generated from field: string key_token_id = 4;
   */
  keyTokenId: string;

  /**
   * @generated from field: string eth_contribution = 5;
   */
  ethContribution: string;

  constructor(data?: PartialMessage<SignKeyMintRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.chain.SignKeyMintRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignKeyMintRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignKeyMintRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignKeyMintRequest;

  static equals(a: SignKeyMintRequest | PlainMessage<SignKeyMintRequest> | undefined, b: SignKeyMintRequest | PlainMessage<SignKeyMintRequest> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.chain.SignScoreMintRequest
 */
export declare class SignScoreMintRequest extends Message<SignScoreMintRequest> {
  /**
   * @generated from field: string profile_address = 1;
   */
  profileAddress: string;

  /**
   * @generated from field: string score_id = 2;
   */
  scoreId: string;

  constructor(data?: PartialMessage<SignScoreMintRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.chain.SignScoreMintRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignScoreMintRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignScoreMintRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignScoreMintRequest;

  static equals(a: SignScoreMintRequest | PlainMessage<SignScoreMintRequest> | undefined, b: SignScoreMintRequest | PlainMessage<SignScoreMintRequest> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.chain.SignMessageRequest
 */
export declare class SignMessageRequest extends Message<SignMessageRequest> {
  /**
   * @generated from field: string message = 1;
   */
  message: string;

  constructor(data?: PartialMessage<SignMessageRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.chain.SignMessageRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignMessageRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignMessageRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignMessageRequest;

  static equals(a: SignMessageRequest | PlainMessage<SignMessageRequest> | undefined, b: SignMessageRequest | PlainMessage<SignMessageRequest> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.chain.SignatureResponse
 */
export declare class SignatureResponse extends Message<SignatureResponse> {
  /**
   * @generated from field: string signature = 1;
   */
  signature: string;

  /**
   * @generated from field: string message = 2;
   */
  message: string;

  constructor(data?: PartialMessage<SignatureResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.chain.SignatureResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignatureResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignatureResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignatureResponse;

  static equals(a: SignatureResponse | PlainMessage<SignatureResponse> | undefined, b: SignatureResponse | PlainMessage<SignatureResponse> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.chain.SignatureTypedResponse
 */
export declare class SignatureTypedResponse extends Message<SignatureTypedResponse> {
  /**
   * @generated from field: string signature = 1;
   */
  signature: string;

  /**
   * @generated from field: map<string, string> message = 2;
   */
  message: { [key: string]: string };

  constructor(data?: PartialMessage<SignatureTypedResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.chain.SignatureTypedResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignatureTypedResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignatureTypedResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignatureTypedResponse;

  static equals(a: SignatureTypedResponse | PlainMessage<SignatureTypedResponse> | undefined, b: SignatureTypedResponse | PlainMessage<SignatureTypedResponse> | undefined): boolean;
}


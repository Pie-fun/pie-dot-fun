// @generated by protoc-gen-es v1.6.0
// @generated from file ethereum/v1/chain/command.proto (package ethereum.v1.chain, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum ethereum.v1.chain.EventType
 */
export declare enum EventType {
  /**
   * default value. this value is unused.
   *
   * @generated from enum value: EVENT_TYPE_UNSPECIFIED = 0;
   */
  EVENT_TYPE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: MINT_SPACESHIP = 1;
   */
  MINT_SPACESHIP = 1,

  /**
   * @generated from enum value: BURN_SPACESHIP = 2;
   */
  BURN_SPACESHIP = 2,
}

/**
 * @generated from message ethereum.v1.chain.MintProtoShipUniverse1Request
 */
export declare class MintProtoShipUniverse1Request extends Message<MintProtoShipUniverse1Request> {
  /**
   * @generated from field: string token_contract = 1;
   */
  tokenContract: string;

  /**
   * @generated from field: string token_id = 2;
   */
  tokenId: string;

  constructor(data?: PartialMessage<MintProtoShipUniverse1Request>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.chain.MintProtoShipUniverse1Request";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MintProtoShipUniverse1Request;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MintProtoShipUniverse1Request;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MintProtoShipUniverse1Request;

  static equals(a: MintProtoShipUniverse1Request | PlainMessage<MintProtoShipUniverse1Request> | undefined, b: MintProtoShipUniverse1Request | PlainMessage<MintProtoShipUniverse1Request> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.chain.MintProtoShipUniverse1Response
 */
export declare class MintProtoShipUniverse1Response extends Message<MintProtoShipUniverse1Response> {
  /**
   * @generated from field: ethereum.v1.chain.Transaction transaction = 1;
   */
  transaction?: Transaction;

  /**
   * @generated from field: string address = 2;
   */
  address: string;

  constructor(data?: PartialMessage<MintProtoShipUniverse1Response>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.chain.MintProtoShipUniverse1Response";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MintProtoShipUniverse1Response;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MintProtoShipUniverse1Response;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MintProtoShipUniverse1Response;

  static equals(a: MintProtoShipUniverse1Response | PlainMessage<MintProtoShipUniverse1Response> | undefined, b: MintProtoShipUniverse1Response | PlainMessage<MintProtoShipUniverse1Response> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.chain.BurnProtoShipUniverse1Request
 */
export declare class BurnProtoShipUniverse1Request extends Message<BurnProtoShipUniverse1Request> {
  /**
   * @generated from field: string token_id = 1;
   */
  tokenId: string;

  constructor(data?: PartialMessage<BurnProtoShipUniverse1Request>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.chain.BurnProtoShipUniverse1Request";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BurnProtoShipUniverse1Request;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BurnProtoShipUniverse1Request;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BurnProtoShipUniverse1Request;

  static equals(a: BurnProtoShipUniverse1Request | PlainMessage<BurnProtoShipUniverse1Request> | undefined, b: BurnProtoShipUniverse1Request | PlainMessage<BurnProtoShipUniverse1Request> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.chain.UpgradeToOwnerShipUniverse1Request
 */
export declare class UpgradeToOwnerShipUniverse1Request extends Message<UpgradeToOwnerShipUniverse1Request> {
  /**
   * @generated from field: string token_id = 1;
   */
  tokenId: string;

  constructor(data?: PartialMessage<UpgradeToOwnerShipUniverse1Request>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.chain.UpgradeToOwnerShipUniverse1Request";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpgradeToOwnerShipUniverse1Request;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpgradeToOwnerShipUniverse1Request;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpgradeToOwnerShipUniverse1Request;

  static equals(a: UpgradeToOwnerShipUniverse1Request | PlainMessage<UpgradeToOwnerShipUniverse1Request> | undefined, b: UpgradeToOwnerShipUniverse1Request | PlainMessage<UpgradeToOwnerShipUniverse1Request> | undefined): boolean;
}

/**
 * @generated from message ethereum.v1.chain.Transaction
 */
export declare class Transaction extends Message<Transaction> {
  /**
   * @generated from field: string hash = 1;
   */
  hash: string;

  /**
   * @generated from field: string chain_id = 2;
   */
  chainId: string;

  /**
   * @generated from field: uint64 nonce = 3;
   */
  nonce: bigint;

  /**
   * @generated from field: string gas_price = 4;
   */
  gasPrice: string;

  /**
   * @generated from field: bytes data = 5;
   */
  data: Uint8Array;

  constructor(data?: PartialMessage<Transaction>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "ethereum.v1.chain.Transaction";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Transaction;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Transaction;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Transaction;

  static equals(a: Transaction | PlainMessage<Transaction> | undefined, b: Transaction | PlainMessage<Transaction> | undefined): boolean;
}


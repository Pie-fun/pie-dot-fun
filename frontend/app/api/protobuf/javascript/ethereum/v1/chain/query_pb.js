// @generated by protoc-gen-es v1.6.0
// @generated from file ethereum/v1/chain/query.proto (package ethereum.v1.chain, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { ChainType } from "../outpost/nft_pb.js";

/**
 * @generated from enum ethereum.v1.chain.DelegationType
 */
export const DelegationType = proto3.makeEnum(
  "ethereum.v1.chain.DelegationType",
  [
    {no: 0, name: "DELEGATION_TYPE_UNSPECIFIED", localName: "UNSPECIFIED"},
    {no: 1, name: "DELEGATION_TYPE_ALL", localName: "ALL"},
    {no: 2, name: "DELEGATION_TYPE_CONTRACT", localName: "CONTRACT"},
    {no: 3, name: "DELEGATION_TYPE_ERC721", localName: "ERC721"},
  ],
);

/**
 * The state of the transaction receipt.
 *
 * @generated from enum ethereum.v1.chain.ReceiptStatus
 */
export const ReceiptStatus = proto3.makeEnum(
  "ethereum.v1.chain.ReceiptStatus",
  [
    {no: 0, name: "RECEIPT_STATUS_FAILED", localName: "FAILED"},
    {no: 1, name: "RECEIPT_STATUS_SUCCESSFUL", localName: "SUCCESSFUL"},
  ],
);

/**
 * @generated from message ethereum.v1.chain.QueryReceiptRequest
 */
export const QueryReceiptRequest = proto3.makeMessageType(
  "ethereum.v1.chain.QueryReceiptRequest",
  () => [
    { no: 1, name: "tx_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "timeout", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message ethereum.v1.chain.QueryQueryTransactionCountRequest
 */
export const QueryQueryTransactionCountRequest = proto3.makeMessageType(
  "ethereum.v1.chain.QueryQueryTransactionCountRequest",
  () => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "block_number", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ],
);

/**
 * @generated from message ethereum.v1.chain.QueryQueryTransactionCountResponse
 */
export const QueryQueryTransactionCountResponse = proto3.makeMessageType(
  "ethereum.v1.chain.QueryQueryTransactionCountResponse",
  () => [
    { no: 1, name: "count", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
  ],
);

/**
 * @generated from message ethereum.v1.chain.QueryDelegateCashRequest
 */
export const QueryDelegateCashRequest = proto3.makeMessageType(
  "ethereum.v1.chain.QueryDelegateCashRequest",
  () => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "chains", kind: "enum", T: proto3.getEnumType(ChainType), repeated: true },
  ],
);

/**
 * @generated from message ethereum.v1.chain.QueryDelegateCashResponse
 */
export const QueryDelegateCashResponse = proto3.makeMessageType(
  "ethereum.v1.chain.QueryDelegateCashResponse",
  () => [
    { no: 1, name: "delegates", kind: "message", T: Delegate, repeated: true },
  ],
);

/**
 * @generated from message ethereum.v1.chain.Delegate
 */
export const Delegate = proto3.makeMessageType(
  "ethereum.v1.chain.Delegate",
  () => [
    { no: 1, name: "type", kind: "enum", T: proto3.getEnumType(DelegationType) },
    { no: 2, name: "from", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "to", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "contract", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "token_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message ethereum.v1.chain.Receipt
 */
export const Receipt = proto3.makeMessageType(
  "ethereum.v1.chain.Receipt",
  () => [
    { no: 1, name: "status", kind: "enum", T: proto3.getEnumType(ReceiptStatus) },
    { no: 2, name: "transaction_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "block_hash", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "block_number", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "cumulative_gas_used", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 6, name: "gas_used", kind: "scalar", T: 4 /* ScalarType.UINT64 */ },
    { no: 7, name: "contract_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message ethereum.v1.chain.MintScoreEvent
 */
export const MintScoreEvent = proto3.makeMessageType(
  "ethereum.v1.chain.MintScoreEvent",
  () => [
    { no: 1, name: "category", kind: "enum", T: proto3.getEnumType(MintScoreEvent_ScoreCategory), opt: true },
    { no: 2, name: "score", kind: "scalar", T: 4 /* ScalarType.UINT64 */, opt: true },
    { no: 3, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "token_id", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ],
);

/**
 * @generated from enum ethereum.v1.chain.MintScoreEvent.ScoreCategory
 */
export const MintScoreEvent_ScoreCategory = proto3.makeEnum(
  "ethereum.v1.chain.MintScoreEvent.ScoreCategory",
  [
    {no: 0, name: "SCORE_CATEGORY_UNSPECIFIED"},
    {no: 1, name: "SINGLE_PLAYER"},
    {no: 2, name: "MULTI_PLAYER"},
  ],
);

/**
 * @generated from message ethereum.v1.chain.DeployTBAAndMintProtoShipEvent
 */
export const DeployTBAAndMintProtoShipEvent = proto3.makeMessageType(
  "ethereum.v1.chain.DeployTBAAndMintProtoShipEvent",
  () => [
    { no: 1, name: "profile_tba", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "token_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);


// @generated by protoc-gen-es v1.6.0
// @generated from file blast/v1/user/backspace.proto (package blast.v1.user, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message blast.v1.user.GetBackspaceRequest
 */
export declare class GetBackspaceRequest extends Message<GetBackspaceRequest> {
  /**
   * The name of the user to retrieve.
   * Format: users/{address}
   * Wildcard (*) is not allowed.
   *
   * @generated from field: string user = 1;
   */
  user: string;

  constructor(data?: PartialMessage<GetBackspaceRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.user.GetBackspaceRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetBackspaceRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetBackspaceRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetBackspaceRequest;

  static equals(a: GetBackspaceRequest | PlainMessage<GetBackspaceRequest> | undefined, b: GetBackspaceRequest | PlainMessage<GetBackspaceRequest> | undefined): boolean;
}

/**
 * @generated from message blast.v1.user.UpdateBackspaceRequest
 */
export declare class UpdateBackspaceRequest extends Message<UpdateBackspaceRequest> {
  /**
   * Backspace to update
   *
   * @generated from field: blast.v1.user.Backspace backspace = 1;
   */
  backspace?: Backspace;

  constructor(data?: PartialMessage<UpdateBackspaceRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.user.UpdateBackspaceRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateBackspaceRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateBackspaceRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateBackspaceRequest;

  static equals(a: UpdateBackspaceRequest | PlainMessage<UpdateBackspaceRequest> | undefined, b: UpdateBackspaceRequest | PlainMessage<UpdateBackspaceRequest> | undefined): boolean;
}

/**
 * @generated from message blast.v1.user.Backspace
 */
export declare class Backspace extends Message<Backspace> {
  /**
   * The resource name of the Backspace.
   * Format: users/{address}/backspace
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * Introduction chat message of the Backspace.
   *
   * @generated from field: string introduction_chat = 2;
   */
  introductionChat: string;

  constructor(data?: PartialMessage<Backspace>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.user.Backspace";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Backspace;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Backspace;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Backspace;

  static equals(a: Backspace | PlainMessage<Backspace> | undefined, b: Backspace | PlainMessage<Backspace> | undefined): boolean;
}


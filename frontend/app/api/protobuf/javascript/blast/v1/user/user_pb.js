// @generated by protoc-gen-es v1.6.0
// @generated from file blast/v1/user/user.proto (package blast.v1.user, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { FieldMask, proto3, Timestamp } from "@bufbuild/protobuf";
import { ChainType } from "../nft/nft_pb.js";

/**
 * The state of user
 *
 * @generated from enum blast.v1.user.UserState
 */
export const UserState = proto3.makeEnum(
  "blast.v1.user.UserState",
  [
    {no: 0, name: "STATE_UNSPECIFIED"},
    {no: 1, name: "CREATED_PENDING"},
    {no: 2, name: "CREATED"},
    {no: 3, name: "SQUARE_OWNED"},
    {no: 4, name: "SQUARE_JOINED"},
  ],
);

/**
 * The state of user
 *
 * @generated from enum blast.v1.user.UserType
 */
export const UserType = proto3.makeEnum(
  "blast.v1.user.UserType",
  [
    {no: 0, name: "TYPE_UNSPECIFIED"},
    {no: 1, name: "INDEPENDENT"},
    {no: 2, name: "SQUARE_OWNER"},
    {no: 3, name: "SQUARE_MEMBER"},
  ],
);

/**
 * UserView enumeration represents the view of a user.
 * The view controls the amount of information returned.
 * The BASIC view omits the following fields:
 * star_balance, sns_connections, gm_stats
 *
 * Reference
 * https://cloud.google.com/apis/design/design_patterns#list_flattening and
 * https://google.aip.dev/157
 *
 * @generated from enum blast.v1.user.UserView
 */
export const UserView = proto3.makeEnum(
  "blast.v1.user.UserView",
  [
    {no: 0, name: "User_VIEW_UNSPECIFIED"},
    {no: 1, name: "BASIC"},
    {no: 2, name: "FULL"},
  ],
);

/**
 * @generated from message blast.v1.user.GetUserRequest
 */
export const GetUserRequest = proto3.makeMessageType(
  "blast.v1.user.GetUserRequest",
  () => [
    { no: 1, name: "user", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * ListUsersRequest payload
 * (-- api-linter: core::0158::request-page-token-field=disabled
 *     aip.dev/not-precedent: We need to do this because reasons. --)
 * (-- api-linter: core::0132::request-unknown-fields=disabled
 *     aip.dev/not-precedent: We really need this field because reasons. --)
 *
 * @generated from message blast.v1.user.ListUsersRequest
 */
export const ListUsersRequest = proto3.makeMessageType(
  "blast.v1.user.ListUsersRequest",
  () => [
    { no: 1, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "filter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * ListUsersResponse
 * (-- api-linter: core::0158::response-next-page-token-field=disabled
 *     aip.dev/not-precedent: We need to do this because reasons. --)
 *
 * @generated from message blast.v1.user.ListUsersResponse
 */
export const ListUsersResponse = proto3.makeMessageType(
  "blast.v1.user.ListUsersResponse",
  () => [
    { no: 1, name: "users", kind: "message", T: User, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message blast.v1.user.UpdateUserRequest
 */
export const UpdateUserRequest = proto3.makeMessageType(
  "blast.v1.user.UpdateUserRequest",
  () => [
    { no: 1, name: "user", kind: "message", T: User },
    { no: 2, name: "update_mask", kind: "message", T: FieldMask },
  ],
);

/**
 * @generated from message blast.v1.user.IdentifyUserRequest
 */
export const IdentifyUserRequest = proto3.makeMessageType(
  "blast.v1.user.IdentifyUserRequest",
  () => [
    { no: 1, name: "user", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "nickname", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "nft", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "referral_code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message blast.v1.user.ValidateNicknameAvailabilityRequest
 */
export const ValidateNicknameAvailabilityRequest = proto3.makeMessageType(
  "blast.v1.user.ValidateNicknameAvailabilityRequest",
  () => [
    { no: 1, name: "nickname", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message blast.v1.user.ValidateNicknameAvailabilityResponse
 */
export const ValidateNicknameAvailabilityResponse = proto3.makeMessageType(
  "blast.v1.user.ValidateNicknameAvailabilityResponse",
  () => [
    { no: 1, name: "nickname", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "available", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "reason", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ],
);

/**
 * @generated from message blast.v1.user.User
 */
export const User = proto3.makeMessageType(
  "blast.v1.user.User",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "create_time", kind: "message", T: Timestamp },
    { no: 4, name: "update_time", kind: "message", T: Timestamp },
    { no: 5, name: "last_nft_update_time", kind: "message", T: Timestamp },
    { no: 6, name: "type", kind: "enum", T: proto3.getEnumType(UserType) },
    { no: 7, name: "state", kind: "enum", T: proto3.getEnumType(UserState) },
    { no: 8, name: "nft", kind: "message", T: UserNFT },
    { no: 9, name: "ens", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 10, name: "nickname", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * UserNFT message represents an User's NFT.
 *
 * @generated from message blast.v1.user.UserNFT
 */
export const UserNFT = proto3.makeMessageType(
  "blast.v1.user.UserNFT",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "token_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "token_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "image_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "contract", kind: "message", T: UserNFTContract },
  ],
);

/**
 * NFTContract message represents an NFT contract.
 *
 * @generated from message blast.v1.user.UserNFTContract
 */
export const UserNFTContract = proto3.makeMessageType(
  "blast.v1.user.UserNFTContract",
  () => [
    { no: 1, name: "address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "symbol", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "chain", kind: "enum", T: proto3.getEnumType(ChainType) },
    { no: 5, name: "image_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);


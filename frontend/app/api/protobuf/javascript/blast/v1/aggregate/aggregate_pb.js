// @generated by protoc-gen-es v1.6.0
// @generated from file blast/v1/aggregate/aggregate.proto (package blast.v1.aggregate, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3, Timestamp } from "@bufbuild/protobuf";
import { User } from "../user/user_pb.js";
import { Activity, Bonus, Multiplier, Referral, Staking } from "../points/points_pb.js";
import { PFPBoost, Private, Public, SquareJoinType, SquareMemberRankType, SquareMemberType, SquareNFT, SquareState, SquareView, TokenGated } from "../square/square_pb.js";

/**
 * @generated from message blast.v1.aggregate.ListPointsAggregateRequest
 */
export const ListPointsAggregateRequest = proto3.makeMessageType(
  "blast.v1.aggregate.ListPointsAggregateRequest",
  () => [
    { no: 1, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "filter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "order_by", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * ListPointsResponse
 *
 * @generated from message blast.v1.aggregate.ListPointsAggregateResponse
 */
export const ListPointsAggregateResponse = proto3.makeMessageType(
  "blast.v1.aggregate.ListPointsAggregateResponse",
  () => [
    { no: 1, name: "points_aggregate", kind: "message", T: PointsAggregate, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message blast.v1.aggregate.PointsAggregate
 */
export const PointsAggregate = proto3.makeMessageType(
  "blast.v1.aggregate.PointsAggregate",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user", kind: "message", T: User },
    { no: 3, name: "total_points", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 5, name: "referral", kind: "message", T: Referral },
    { no: 6, name: "staking", kind: "message", T: Staking },
    { no: 7, name: "activity", kind: "message", T: Activity },
    { no: 8, name: "bonus", kind: "message", T: Bonus },
    { no: 9, name: "multipliers", kind: "message", T: Multiplier, repeated: true },
  ],
);

/**
 * @generated from message blast.v1.aggregate.ListSquareMemberRankingsAggregateRequest
 */
export const ListSquareMemberRankingsAggregateRequest = proto3.makeMessageType(
  "blast.v1.aggregate.ListSquareMemberRankingsAggregateRequest",
  () => [
    { no: 1, name: "square", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "rank_type", kind: "enum", T: proto3.getEnumType(SquareMemberRankType) },
    { no: 3, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message blast.v1.aggregate.ListSquareMemberRankingsAggregateResponse
 */
export const ListSquareMemberRankingsAggregateResponse = proto3.makeMessageType(
  "blast.v1.aggregate.ListSquareMemberRankingsAggregateResponse",
  () => [
    { no: 1, name: "rankings_aggregate", kind: "message", T: SquareMemberRankingAggregate, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message blast.v1.aggregate.SquareMemberRankingAggregate
 */
export const SquareMemberRankingAggregate = proto3.makeMessageType(
  "blast.v1.aggregate.SquareMemberRankingAggregate",
  () => [
    { no: 1, name: "rank", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "points", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "member", kind: "message", T: SquareMemberAggregate },
  ],
);

/**
 * @generated from message blast.v1.aggregate.SquareMemberAggregate
 */
export const SquareMemberAggregate = proto3.makeMessageType(
  "blast.v1.aggregate.SquareMemberAggregate",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "square_token_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "user", kind: "message", T: User },
    { no: 4, name: "type", kind: "enum", T: proto3.getEnumType(SquareMemberType) },
    { no: 5, name: "total_points", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 8, name: "join_time", kind: "message", T: Timestamp },
  ],
);

/**
 * @generated from message blast.v1.aggregate.GetSquareAggregateRequest
 */
export const GetSquareAggregateRequest = proto3.makeMessageType(
  "blast.v1.aggregate.GetSquareAggregateRequest",
  () => [
    { no: 1, name: "square", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "view", kind: "enum", T: proto3.getEnumType(SquareView) },
  ],
);

/**
 * @generated from message blast.v1.aggregate.SquareAggregate
 */
export const SquareAggregate = proto3.makeMessageType(
  "blast.v1.aggregate.SquareAggregate",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "token_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "owner", kind: "message", T: User },
    { no: 4, name: "create_time", kind: "message", T: Timestamp },
    { no: 5, name: "state", kind: "enum", T: proto3.getEnumType(SquareState) },
    { no: 6, name: "signature_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "join_type", kind: "enum", T: proto3.getEnumType(SquareJoinType) },
    { no: 8, name: "public", kind: "message", T: Public, oneof: "join" },
    { no: 9, name: "private", kind: "message", T: Private, oneof: "join" },
    { no: 10, name: "token_gated", kind: "message", T: TokenGated, oneof: "join" },
    { no: 11, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "introduction", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "minimum_staking_amount_to_join_in_eth", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 14, name: "total_members_staking_amount_in_eth", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 15, name: "multiplier", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 16, name: "total_points", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 17, name: "capacity", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 18, name: "occupancy", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 19, name: "occupancy_including_pending", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 20, name: "pfp_boost", kind: "message", T: PFPBoost },
    { no: 21, name: "nft", kind: "message", T: SquareNFT },
    { no: 22, name: "spirits", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 23, name: "stars", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 24, name: "total_spirits", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 25, name: "weekly_spirits", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ],
);

/**
 * @generated from message blast.v1.aggregate.ListSquaresAggregateRequest
 */
export const ListSquaresAggregateRequest = proto3.makeMessageType(
  "blast.v1.aggregate.ListSquaresAggregateRequest",
  () => [
    { no: 1, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "filter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "order_by", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * ListSquaresAggregateResponse
 *
 * @generated from message blast.v1.aggregate.ListSquaresAggregateResponse
 */
export const ListSquaresAggregateResponse = proto3.makeMessageType(
  "blast.v1.aggregate.ListSquaresAggregateResponse",
  () => [
    { no: 1, name: "squares_aggregate", kind: "message", T: SquareAggregate, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);


// @generated by protoc-gen-es v1.6.0
// @generated from file blast/v1/notification/notification.proto (package blast.v1.notification, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * Type of the notification.
 *
 * @generated from enum blast.v1.notification.NotificationType
 */
export declare enum NotificationType {
  /**
   * default value. this value is unused.
   *
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  TYPE_UNSPECIFIED = 0,

  /**
   * Plain text info message.
   *
   * @generated from enum value: INFO = 100;
   */
  INFO = 100,

  /**
   * DEPRECATED: Use INFO_SPACEBAR_POINTS_GIVEN instead.
   *
   * @generated from enum value: INFO_POINTS_GIVEN = 101;
   */
  INFO_POINTS_GIVEN = 101,

  /**
   * @generated from enum value: INFO_SPACEBAR_POINTS_GIVEN = 110;
   */
  INFO_SPACEBAR_POINTS_GIVEN = 110,

  /**
   * @generated from enum value: INFO_BLAST_GOLD_GIVEN = 111;
   */
  INFO_BLAST_GOLD_GIVEN = 111,

  /**
   * @generated from enum value: INFO_BLAST_TOKEN_GIVEN = 112;
   */
  INFO_BLAST_TOKEN_GIVEN = 112,
}

/**
 * Action type that can be performed on the notification.
 *
 * @generated from enum blast.v1.notification.NotificationAction
 */
export declare enum NotificationAction {
  /**
   * default value. this value is unused.
   *
   * @generated from enum value: ACTION_UNSPECIFIED = 0;
   */
  ACTION_UNSPECIFIED = 0,

  /**
   * No operation.
   *
   * @generated from enum value: NO_OP = 1;
   */
  NO_OP = 1,

  /**
   * Navigate to the points page.
   *
   * @generated from enum value: NAVIGATE_POINTS_PAGE = 100;
   */
  NAVIGATE_POINTS_PAGE = 100,
}

/**
 * State of the notification.
 *
 * @generated from enum blast.v1.notification.NotificationState
 */
export declare enum NotificationState {
  /**
   * default value. this value is unused.
   *
   * @generated from enum value: STATE_UNSPECIFIED = 0;
   */
  STATE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: CREATED = 1;
   */
  CREATED = 1,

  /**
   * @generated from enum value: ACKNOWLEDGED = 2;
   */
  ACKNOWLEDGED = 2,

  /**
   * @generated from enum value: EXPIRED = 3;
   */
  EXPIRED = 3,
}

/**
 * @generated from enum blast.v1.notification.NotificationContentIcon
 */
export declare enum NotificationContentIcon {
  /**
   * default value. this value is unused.
   *
   * @generated from enum value: ICON_UNSPECIFIED = 0;
   */
  ICON_UNSPECIFIED = 0,

  /**
   * @generated from enum value: ICON_SPACEBAR_POINTS = 1;
   */
  ICON_SPACEBAR_POINTS = 1,

  /**
   * @generated from enum value: ICON_BLAST_GOLD = 2;
   */
  ICON_BLAST_GOLD = 2,

  /**
   * @generated from enum value: ICON_BLAST_TOKEN = 3;
   */
  ICON_BLAST_TOKEN = 3,
}

/**
 * @generated from message blast.v1.notification.ListNotificationsRequest
 */
export declare class ListNotificationsRequest extends Message<ListNotificationsRequest> {
  /**
   * The resource name of User.
   * User is required.
   * Format: users/{address}
   *
   * @generated from field: string parent = 1;
   */
  parent: string;

  /**
   * The maximum number of items to return. The service may return fewer than this value.
   * If unspecified, at most 50 rows will be returned.
   * The maximum value is 1024; values above 1024 will be coerced to 1024.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Token of the page to retrieve. If not specified, the first
   * page of results will be returned. Use the value obtained from
   * `next_page_token` in the previous response in order to request
   * the next page of results.
   *
   * When paginating, all other parameters provided to `ListNotifications` must match
   * the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Available Sequence and Operator
   * * state
   *   * `Equal`
   * * type
   *   * `Equal`
   *
   * Examples
   * * state=CREATED
   * * type=INFO_POINTS_GIVEN
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  constructor(data?: PartialMessage<ListNotificationsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.notification.ListNotificationsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListNotificationsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListNotificationsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListNotificationsRequest;

  static equals(a: ListNotificationsRequest | PlainMessage<ListNotificationsRequest> | undefined, b: ListNotificationsRequest | PlainMessage<ListNotificationsRequest> | undefined): boolean;
}

/**
 * @generated from message blast.v1.notification.ListNotificationsResponse
 */
export declare class ListNotificationsResponse extends Message<ListNotificationsResponse> {
  /**
   * @generated from field: repeated blast.v1.notification.Notification notifications = 1;
   */
  notifications: Notification[];

  /**
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  constructor(data?: PartialMessage<ListNotificationsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.notification.ListNotificationsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListNotificationsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListNotificationsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListNotificationsResponse;

  static equals(a: ListNotificationsResponse | PlainMessage<ListNotificationsResponse> | undefined, b: ListNotificationsResponse | PlainMessage<ListNotificationsResponse> | undefined): boolean;
}

/**
 * @generated from message blast.v1.notification.AcknowledgeNotificationRequest
 */
export declare class AcknowledgeNotificationRequest extends Message<AcknowledgeNotificationRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  constructor(data?: PartialMessage<AcknowledgeNotificationRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.notification.AcknowledgeNotificationRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AcknowledgeNotificationRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AcknowledgeNotificationRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AcknowledgeNotificationRequest;

  static equals(a: AcknowledgeNotificationRequest | PlainMessage<AcknowledgeNotificationRequest> | undefined, b: AcknowledgeNotificationRequest | PlainMessage<AcknowledgeNotificationRequest> | undefined): boolean;
}

/**
 * @generated from message blast.v1.notification.Notification
 */
export declare class Notification extends Message<Notification> {
  /**
   * The resource name of the Notification.
   * Format: users/{user_address}/notifications/{id}
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * The resource name of User.
   * Format: users/{address}
   *
   * @generated from field: string user = 2;
   */
  user: string;

  /**
   * The id of Notification.
   *
   * @generated from field: uint64 id = 3;
   */
  id: bigint;

  /**
   * @generated from field: blast.v1.notification.NotificationType type = 4;
   */
  type: NotificationType;

  /**
   * @generated from field: blast.v1.notification.NotificationAction action = 5;
   */
  action: NotificationAction;

  /**
   * @generated from field: blast.v1.notification.NotificationState state = 6;
   */
  state: NotificationState;

  /**
   * @generated from field: blast.v1.notification.NotificationContentIcon icon = 7;
   */
  icon: NotificationContentIcon;

  /**
   * @generated from field: string title = 8;
   */
  title: string;

  /**
   * @generated from field: string body = 9;
   */
  body: string;

  /**
   * @generated from field: map<string, string> metadata = 10;
   */
  metadata: { [key: string]: string };

  /**
   * The created time of Notification.
   * RFC3339 format e.g. "2006-01-02T15:04:05Z07:00"
   *
   * @generated from field: google.protobuf.Timestamp create_time = 13;
   */
  createTime?: Timestamp;

  /**
   * The expire time of Notification if exists.
   * RFC3339 format e.g. "2006-01-02T15:04:05Z07:00"
   *
   * @generated from field: optional google.protobuf.Timestamp expire_time = 14;
   */
  expireTime?: Timestamp;

  /**
   * The acknowledged time of Notification.
   *
   * @generated from field: optional google.protobuf.Timestamp acknowledge_time = 15;
   */
  acknowledgeTime?: Timestamp;

  constructor(data?: PartialMessage<Notification>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.notification.Notification";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Notification;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Notification;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Notification;

  static equals(a: Notification | PlainMessage<Notification> | undefined, b: Notification | PlainMessage<Notification> | undefined): boolean;
}


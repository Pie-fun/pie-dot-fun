// @generated by protoc-gen-es v1.6.0
// @generated from file blast/v1/staking/staking.proto (package blast.v1.staking, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum blast.v1.staking.StakingCurrency
 */
export const StakingCurrency = proto3.makeEnum(
  "blast.v1.staking.StakingCurrency",
  [
    {no: 0, name: "CURRENCY_UNSPECIFIED"},
    {no: 1, name: "ETH"},
  ],
);

/**
 * The state of staking
 *
 * @generated from enum blast.v1.staking.StakingState
 */
export const StakingState = proto3.makeEnum(
  "blast.v1.staking.StakingState",
  [
    {no: 0, name: "STATE_UNSPECIFIED"},
    {no: 1, name: "ACTIVE"},
    {no: 2, name: "INACTIVE"},
  ],
);

/**
 * @generated from message blast.v1.staking.GetStakingRequest
 */
export const GetStakingRequest = proto3.makeMessageType(
  "blast.v1.staking.GetStakingRequest",
  () => [
    { no: 1, name: "staking", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * ListStakingsRequest payload
 * (-- api-linter: core::0158::request-page-token-field=disabled
 *     aip.dev/not-precedent: We need to do this because reasons. --)
 * (-- api-linter: core::0132::request-unknown-fields=disabled
 *     aip.dev/not-precedent: We really need this field because reasons. --)
 *
 * @generated from message blast.v1.staking.ListStakingsRequest
 */
export const ListStakingsRequest = proto3.makeMessageType(
  "blast.v1.staking.ListStakingsRequest",
  () => [
    { no: 1, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "filter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * ListStakingsResponse
 * (-- api-linter: core::0158::response-next-page-token-field=disabled
 *     aip.dev/not-precedent: We need to do this because reasons. --)
 *
 * @generated from message blast.v1.staking.ListStakingsResponse
 */
export const ListStakingsResponse = proto3.makeMessageType(
  "blast.v1.staking.ListStakingsResponse",
  () => [
    { no: 1, name: "stakings", kind: "message", T: Staking, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message blast.v1.staking.GetStakingTotalAmountRequest
 */
export const GetStakingTotalAmountRequest = proto3.makeMessageType(
  "blast.v1.staking.GetStakingTotalAmountRequest",
  [],
);

/**
 * @generated from message blast.v1.staking.GetStakingTotalAmountResponse
 */
export const GetStakingTotalAmountResponse = proto3.makeMessageType(
  "blast.v1.staking.GetStakingTotalAmountResponse",
  () => [
    { no: 1, name: "total_amount", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
  ],
);

/**
 * @generated from message blast.v1.staking.Staking
 */
export const Staking = proto3.makeMessageType(
  "blast.v1.staking.Staking",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "currency", kind: "enum", T: proto3.getEnumType(StakingCurrency) },
    { no: 5, name: "amount", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 6, name: "state", kind: "enum", T: proto3.getEnumType(StakingState) },
  ],
);


// @generated by protoc-gen-es v1.6.0
// @generated from file blast/v1/game/game.proto (package blast.v1.game, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum blast.v1.game.ClientMessageType
 */
export declare enum ClientMessageType {
  /**
   * @generated from enum value: CLIENT_MESSAGE_TYPE_UNSPECIFIED = 0;
   */
  CLIENT_MESSAGE_TYPE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: CLIENT_CONNECT = 1;
   */
  CLIENT_CONNECT = 1,

  /**
   * DEPRECATED - Use CLIENT_TERMINATE instead for permanent disconnection
   *
   * @generated from enum value: CLIENT_DISCONNECT = 2;
   */
  CLIENT_DISCONNECT = 2,

  /**
   * Terminate the connection which means delete session permanently
   * The client should send this message when the client wants to terminate the connection
   * Disconnected connections other than this message will be considered as a temporary disconnection (soft delete) and can be reonnectable
   * If want to reconnect, the client should connect with the same auth token that was used to create the session (CLIENT_CONNECT)
   *
   * @generated from enum value: CLIENT_TERMINATE = 3;
   */
  CLIENT_TERMINATE = 3,

  /**
   * @generated from enum value: CLIENT_START_GAME = 20;
   */
  CLIENT_START_GAME = 20,

  /**
   * @generated from enum value: CLIENT_END_GAME = 21;
   */
  CLIENT_END_GAME = 21,

  /**
   * @generated from enum value: CLIENT_TAKE_STAR = 22;
   */
  CLIENT_TAKE_STAR = 22,

  /**
   * @generated from enum value: CLIENT_TAKE_BLAST_GOLD = 23;
   */
  CLIENT_TAKE_BLAST_GOLD = 23,

  /**
   * @generated from enum value: CLIENT_DESTROY_CAPSULE = 24;
   */
  CLIENT_DESTROY_CAPSULE = 24,

  /**
   * @generated from enum value: CLIENT_DESTROY_METEOR = 25;
   */
  CLIENT_DESTROY_METEOR = 25,

  /**
   * @generated from enum value: CLIENT_SHOOT_BULLET = 26;
   */
  CLIENT_SHOOT_BULLET = 26,

  /**
   * @generated from enum value: CLIENT_EMPLOY_BOOST = 27;
   */
  CLIENT_EMPLOY_BOOST = 27,

  /**
   * @generated from enum value: CLIENT_SPACESHIP_POSITION = 40;
   */
  CLIENT_SPACESHIP_POSITION = 40,

  /**
   * @generated from enum value: CLIENT_SPACESHIP_EVENT = 41;
   */
  CLIENT_SPACESHIP_EVENT = 41,

  /**
   * @generated from enum value: CLIENT_KEYBOARD_EVENT = 42;
   */
  CLIENT_KEYBOARD_EVENT = 42,

  /**
   * @generated from enum value: CLIENT_ALERT_SUSPICIOUS_USER = 60;
   */
  CLIENT_ALERT_SUSPICIOUS_USER = 60,
}

/**
 * @generated from enum blast.v1.game.ServerMessageType
 */
export declare enum ServerMessageType {
  /**
   * @generated from enum value: SERVER_MESSAGE_TYPE_UNSPECIFIED = 0;
   */
  SERVER_MESSAGE_TYPE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: SERVER_CONNECT = 1;
   */
  SERVER_CONNECT = 1,

  /**
   * @generated from enum value: SERVER_TERMINATE = 2;
   */
  SERVER_TERMINATE = 2,

  /**
   * @generated from enum value: SERVER_RECONNECT = 3;
   */
  SERVER_RECONNECT = 3,

  /**
   * @generated from enum value: SERVER_START_GAME = 20;
   */
  SERVER_START_GAME = 20,

  /**
   * @generated from enum value: SERVER_END_GAME = 21;
   */
  SERVER_END_GAME = 21,

  /**
   * @generated from enum value: SERVER_TAKE_STAR = 22;
   */
  SERVER_TAKE_STAR = 22,

  /**
   * @generated from enum value: SERVER_TAKE_BLAST_GOLD = 23;
   */
  SERVER_TAKE_BLAST_GOLD = 23,

  /**
   * @generated from enum value: SERVER_DESTROY_CAPSULE = 24;
   */
  SERVER_DESTROY_CAPSULE = 24,

  /**
   * @generated from enum value: SERVER_DESTROY_METEOR = 25;
   */
  SERVER_DESTROY_METEOR = 25,

  /**
   * @generated from enum value: SERVER_SHOOT_BULLET = 26;
   */
  SERVER_SHOOT_BULLET = 26,

  /**
   * @generated from enum value: SERVER_EMPLOY_BOOST = 27;
   */
  SERVER_EMPLOY_BOOST = 27,

  /**
   * @generated from enum value: SERVER_SPACESHIP_POSITION = 40;
   */
  SERVER_SPACESHIP_POSITION = 40,

  /**
   * @generated from enum value: SERVER_SPACESHIP_EVENT = 41;
   */
  SERVER_SPACESHIP_EVENT = 41,

  /**
   * @generated from enum value: SERVER_KEYBOARD_EVENT = 42;
   */
  SERVER_KEYBOARD_EVENT = 42,

  /**
   * @generated from enum value: SERVER_ALERT_SUSPICIOUS_USER = 60;
   */
  SERVER_ALERT_SUSPICIOUS_USER = 60,
}

/**
 * @generated from enum blast.v1.game.ServerAckType
 */
export declare enum ServerAckType {
  /**
   * @generated from enum value: SERVER_RESPONSE_TYPE_UNSPECIFIED = 0;
   */
  SERVER_RESPONSE_TYPE_UNSPECIFIED = 0,

  /**
   * Message sent to client when message from client is accepted
   *
   * @generated from enum value: ACK = 100;
   */
  ACK = 100,

  /**
   * Message sent to client when message from client is rejected
   *
   * @generated from enum value: NACK = 200;
   */
  NACK = 200,

  /**
   * @generated from enum value: NACK_UNAUTHENTICATED = 201;
   */
  NACK_UNAUTHENTICATED = 201,

  /**
   * @generated from enum value: NACK_UNAUTORIZAED = 202;
   */
  NACK_UNAUTORIZAED = 202,

  /**
   * @generated from enum value: NACK_SESSION_ALREADY_EXISTS = 203;
   */
  NACK_SESSION_ALREADY_EXISTS = 203,

  /**
   * @generated from enum value: NACK_DAILY_ROUND_EXCEEDED = 204;
   */
  NACK_DAILY_ROUND_EXCEEDED = 204,

  /**
   * @generated from enum value: NACK_BLAST_GOLD_NOT_ACQUIRABLE = 205;
   */
  NACK_BLAST_GOLD_NOT_ACQUIRABLE = 205,

  /**
   * @generated from enum value: NACK_PLAYTIME_OUT = 206;
   */
  NACK_PLAYTIME_OUT = 206,

  /**
   * @generated from enum value: NACK_SYBIL_USER = 207;
   */
  NACK_SYBIL_USER = 207,

  /**
   * @generated from enum value: NACK_SESSION_NOT_FOUND = 208;
   */
  NACK_SESSION_NOT_FOUND = 208,

  /**
   * Message sent to client when internal server error occurs
   *
   * @generated from enum value: ERR = 300;
   */
  ERR = 300,
}

/**
 * @generated from enum blast.v1.game.CapsuleRewardType
 */
export declare enum CapsuleRewardType {
  /**
   * @generated from enum value: CAPSULE_REWARD_TYPE_UNSPECIFIED = 0;
   */
  CAPSULE_REWARD_TYPE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: CAPSULE_REWARD_STAR = 1;
   */
  CAPSULE_REWARD_STAR = 1,

  /**
   * @generated from enum value: CAPSULE_REWARD_BLAST_GOLD = 2;
   */
  CAPSULE_REWARD_BLAST_GOLD = 2,
}

/**
 * @generated from enum blast.v1.game.SuspiciousReason
 */
export declare enum SuspiciousReason {
  /**
   * @generated from enum value: SUSPICIOUS_REASON_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: SUSPICIOUS_REASON_DEBUG_CONSOLE_OPENED = 1;
   */
  DEBUG_CONSOLE_OPENED = 1,
}

/**
 * @generated from message blast.v1.game.GetDailyPlayCountRequest
 */
export declare class GetDailyPlayCountRequest extends Message<GetDailyPlayCountRequest> {
  /**
   * Format: users/{address}
   *
   * @generated from field: string user = 1;
   */
  user: string;

  constructor(data?: PartialMessage<GetDailyPlayCountRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.game.GetDailyPlayCountRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDailyPlayCountRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDailyPlayCountRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDailyPlayCountRequest;

  static equals(a: GetDailyPlayCountRequest | PlainMessage<GetDailyPlayCountRequest> | undefined, b: GetDailyPlayCountRequest | PlainMessage<GetDailyPlayCountRequest> | undefined): boolean;
}

/**
 * @generated from message blast.v1.game.GetDailyPlayCountResponse
 */
export declare class GetDailyPlayCountResponse extends Message<GetDailyPlayCountResponse> {
  /**
   * The daily play count of the user.
   *
   * @generated from field: uint32 daily_play_count = 1;
   */
  dailyPlayCount: number;

  /**
   * The daily play count of the user.
   *
   * @generated from field: uint32 daily_play_count_quota = 2;
   */
  dailyPlayCountQuota: number;

  constructor(data?: PartialMessage<GetDailyPlayCountResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.game.GetDailyPlayCountResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetDailyPlayCountResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetDailyPlayCountResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetDailyPlayCountResponse;

  static equals(a: GetDailyPlayCountResponse | PlainMessage<GetDailyPlayCountResponse> | undefined, b: GetDailyPlayCountResponse | PlainMessage<GetDailyPlayCountResponse> | undefined): boolean;
}

/**
 * @generated from message blast.v1.game.ClientMessage
 */
export declare class ClientMessage extends Message<ClientMessage> {
  /**
   * @generated from field: blast.v1.game.ClientMessageType msg_type = 1;
   */
  msgType: ClientMessageType;

  /**
   * @generated from field: string payload = 2;
   */
  payload: string;

  constructor(data?: PartialMessage<ClientMessage>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.game.ClientMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ClientMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ClientMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ClientMessage;

  static equals(a: ClientMessage | PlainMessage<ClientMessage> | undefined, b: ClientMessage | PlainMessage<ClientMessage> | undefined): boolean;
}

/**
 * @generated from message blast.v1.game.ServerMessage
 */
export declare class ServerMessage extends Message<ServerMessage> {
  /**
   * @generated from field: blast.v1.game.ServerMessageType msg_type = 1;
   */
  msgType: ServerMessageType;

  /**
   * @generated from field: blast.v1.game.ServerAckType ack_type = 2;
   */
  ackType: ServerAckType;

  /**
   * @generated from field: string payload = 3;
   */
  payload: string;

  constructor(data?: PartialMessage<ServerMessage>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.game.ServerMessage";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ServerMessage;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ServerMessage;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ServerMessage;

  static equals(a: ServerMessage | PlainMessage<ServerMessage> | undefined, b: ServerMessage | PlainMessage<ServerMessage> | undefined): boolean;
}

/**
 * @generated from message blast.v1.game.ConnectServerPayload
 */
export declare class ConnectServerPayload extends Message<ConnectServerPayload> {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * @generated from field: blast.v1.game.Game game = 2;
   */
  game?: Game;

  constructor(data?: PartialMessage<ConnectServerPayload>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.game.ConnectServerPayload";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ConnectServerPayload;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ConnectServerPayload;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ConnectServerPayload;

  static equals(a: ConnectServerPayload | PlainMessage<ConnectServerPayload> | undefined, b: ConnectServerPayload | PlainMessage<ConnectServerPayload> | undefined): boolean;
}

/**
 * @generated from message blast.v1.game.ReconnectServerPayload
 */
export declare class ReconnectServerPayload extends Message<ReconnectServerPayload> {
  /**
   * @generated from field: string session_id = 1;
   */
  sessionId: string;

  /**
   * @generated from field: blast.v1.game.Game game = 2;
   */
  game?: Game;

  constructor(data?: PartialMessage<ReconnectServerPayload>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.game.ReconnectServerPayload";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ReconnectServerPayload;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ReconnectServerPayload;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ReconnectServerPayload;

  static equals(a: ReconnectServerPayload | PlainMessage<ReconnectServerPayload> | undefined, b: ReconnectServerPayload | PlainMessage<ReconnectServerPayload> | undefined): boolean;
}

/**
 * @generated from message blast.v1.game.EndGameServerPayload
 */
export declare class EndGameServerPayload extends Message<EndGameServerPayload> {
  /**
   * @generated from field: string game_id = 1;
   */
  gameId: string;

  /**
   * @generated from field: int32 score = 2;
   */
  score: number;

  /**
   * @generated from field: float blast_gold = 3;
   */
  blastGold: number;

  constructor(data?: PartialMessage<EndGameServerPayload>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.game.EndGameServerPayload";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EndGameServerPayload;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EndGameServerPayload;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EndGameServerPayload;

  static equals(a: EndGameServerPayload | PlainMessage<EndGameServerPayload> | undefined, b: EndGameServerPayload | PlainMessage<EndGameServerPayload> | undefined): boolean;
}

/**
 * @generated from message blast.v1.game.TakeStarClientPayload
 */
export declare class TakeStarClientPayload extends Message<TakeStarClientPayload> {
  /**
   * @generated from field: string star_id = 1;
   */
  starId: string;

  constructor(data?: PartialMessage<TakeStarClientPayload>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.game.TakeStarClientPayload";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TakeStarClientPayload;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TakeStarClientPayload;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TakeStarClientPayload;

  static equals(a: TakeStarClientPayload | PlainMessage<TakeStarClientPayload> | undefined, b: TakeStarClientPayload | PlainMessage<TakeStarClientPayload> | undefined): boolean;
}

/**
 * @generated from message blast.v1.game.TakeStarServerPayload
 */
export declare class TakeStarServerPayload extends Message<TakeStarServerPayload> {
  /**
   * @generated from field: string star_id = 1;
   */
  starId: string;

  /**
   * @generated from field: int32 total_score = 2;
   */
  totalScore: number;

  constructor(data?: PartialMessage<TakeStarServerPayload>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.game.TakeStarServerPayload";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TakeStarServerPayload;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TakeStarServerPayload;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TakeStarServerPayload;

  static equals(a: TakeStarServerPayload | PlainMessage<TakeStarServerPayload> | undefined, b: TakeStarServerPayload | PlainMessage<TakeStarServerPayload> | undefined): boolean;
}

/**
 * @generated from message blast.v1.game.TakeBlastGoldClientPayload
 */
export declare class TakeBlastGoldClientPayload extends Message<TakeBlastGoldClientPayload> {
  /**
   * @generated from field: string blast_gold_id = 1;
   */
  blastGoldId: string;

  constructor(data?: PartialMessage<TakeBlastGoldClientPayload>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.game.TakeBlastGoldClientPayload";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TakeBlastGoldClientPayload;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TakeBlastGoldClientPayload;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TakeBlastGoldClientPayload;

  static equals(a: TakeBlastGoldClientPayload | PlainMessage<TakeBlastGoldClientPayload> | undefined, b: TakeBlastGoldClientPayload | PlainMessage<TakeBlastGoldClientPayload> | undefined): boolean;
}

/**
 * @generated from message blast.v1.game.DestroyCapsuleClientPayload
 */
export declare class DestroyCapsuleClientPayload extends Message<DestroyCapsuleClientPayload> {
  /**
   * @generated from field: string capsule_id = 1;
   */
  capsuleId: string;

  constructor(data?: PartialMessage<DestroyCapsuleClientPayload>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.game.DestroyCapsuleClientPayload";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DestroyCapsuleClientPayload;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DestroyCapsuleClientPayload;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DestroyCapsuleClientPayload;

  static equals(a: DestroyCapsuleClientPayload | PlainMessage<DestroyCapsuleClientPayload> | undefined, b: DestroyCapsuleClientPayload | PlainMessage<DestroyCapsuleClientPayload> | undefined): boolean;
}

/**
 * @generated from message blast.v1.game.DestroyMeteorClientPayload
 */
export declare class DestroyMeteorClientPayload extends Message<DestroyMeteorClientPayload> {
  /**
   * @generated from field: blast.v1.game.Position position = 1;
   */
  position?: Position;

  constructor(data?: PartialMessage<DestroyMeteorClientPayload>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.game.DestroyMeteorClientPayload";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DestroyMeteorClientPayload;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DestroyMeteorClientPayload;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DestroyMeteorClientPayload;

  static equals(a: DestroyMeteorClientPayload | PlainMessage<DestroyMeteorClientPayload> | undefined, b: DestroyMeteorClientPayload | PlainMessage<DestroyMeteorClientPayload> | undefined): boolean;
}

/**
 * @generated from message blast.v1.game.SpceshipPosiitionClientPayload
 */
export declare class SpceshipPosiitionClientPayload extends Message<SpceshipPosiitionClientPayload> {
  /**
   * @generated from field: blast.v1.game.Position position = 1;
   */
  position?: Position;

  constructor(data?: PartialMessage<SpceshipPosiitionClientPayload>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.game.SpceshipPosiitionClientPayload";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SpceshipPosiitionClientPayload;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SpceshipPosiitionClientPayload;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SpceshipPosiitionClientPayload;

  static equals(a: SpceshipPosiitionClientPayload | PlainMessage<SpceshipPosiitionClientPayload> | undefined, b: SpceshipPosiitionClientPayload | PlainMessage<SpceshipPosiitionClientPayload> | undefined): boolean;
}

/**
 * @generated from message blast.v1.game.SpaceshipEventClientPayload
 */
export declare class SpaceshipEventClientPayload extends Message<SpaceshipEventClientPayload> {
  /**
   * @generated from field: string event = 1;
   */
  event: string;

  constructor(data?: PartialMessage<SpaceshipEventClientPayload>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.game.SpaceshipEventClientPayload";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SpaceshipEventClientPayload;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SpaceshipEventClientPayload;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SpaceshipEventClientPayload;

  static equals(a: SpaceshipEventClientPayload | PlainMessage<SpaceshipEventClientPayload> | undefined, b: SpaceshipEventClientPayload | PlainMessage<SpaceshipEventClientPayload> | undefined): boolean;
}

/**
 * @generated from message blast.v1.game.KeyboardEventClientPayload
 */
export declare class KeyboardEventClientPayload extends Message<KeyboardEventClientPayload> {
  /**
   * @generated from field: string event = 1;
   */
  event: string;

  constructor(data?: PartialMessage<KeyboardEventClientPayload>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.game.KeyboardEventClientPayload";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): KeyboardEventClientPayload;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): KeyboardEventClientPayload;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): KeyboardEventClientPayload;

  static equals(a: KeyboardEventClientPayload | PlainMessage<KeyboardEventClientPayload> | undefined, b: KeyboardEventClientPayload | PlainMessage<KeyboardEventClientPayload> | undefined): boolean;
}

/**
 * @generated from message blast.v1.game.ShootBulletClientPayload
 */
export declare class ShootBulletClientPayload extends Message<ShootBulletClientPayload> {
  /**
   * @generated from field: int32 remaining_bullets = 1;
   */
  remainingBullets: number;

  constructor(data?: PartialMessage<ShootBulletClientPayload>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.game.ShootBulletClientPayload";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ShootBulletClientPayload;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ShootBulletClientPayload;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ShootBulletClientPayload;

  static equals(a: ShootBulletClientPayload | PlainMessage<ShootBulletClientPayload> | undefined, b: ShootBulletClientPayload | PlainMessage<ShootBulletClientPayload> | undefined): boolean;
}

/**
 * @generated from message blast.v1.game.EmployBoostClientPayload
 */
export declare class EmployBoostClientPayload extends Message<EmployBoostClientPayload> {
  /**
   * @generated from field: int32 remaining_boosts = 1;
   */
  remainingBoosts: number;

  constructor(data?: PartialMessage<EmployBoostClientPayload>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.game.EmployBoostClientPayload";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EmployBoostClientPayload;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EmployBoostClientPayload;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EmployBoostClientPayload;

  static equals(a: EmployBoostClientPayload | PlainMessage<EmployBoostClientPayload> | undefined, b: EmployBoostClientPayload | PlainMessage<EmployBoostClientPayload> | undefined): boolean;
}

/**
 * @generated from message blast.v1.game.LifeStatusClientPayload
 */
export declare class LifeStatusClientPayload extends Message<LifeStatusClientPayload> {
  /**
   * @generated from field: int32 remaining_lives = 1;
   */
  remainingLives: number;

  constructor(data?: PartialMessage<LifeStatusClientPayload>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.game.LifeStatusClientPayload";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LifeStatusClientPayload;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LifeStatusClientPayload;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LifeStatusClientPayload;

  static equals(a: LifeStatusClientPayload | PlainMessage<LifeStatusClientPayload> | undefined, b: LifeStatusClientPayload | PlainMessage<LifeStatusClientPayload> | undefined): boolean;
}

/**
 * @generated from message blast.v1.game.AlertSuspiciousUserClientPayload
 */
export declare class AlertSuspiciousUserClientPayload extends Message<AlertSuspiciousUserClientPayload> {
  /**
   * @generated from field: blast.v1.game.SuspiciousReason reason = 1;
   */
  reason: SuspiciousReason;

  constructor(data?: PartialMessage<AlertSuspiciousUserClientPayload>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.game.AlertSuspiciousUserClientPayload";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AlertSuspiciousUserClientPayload;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AlertSuspiciousUserClientPayload;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AlertSuspiciousUserClientPayload;

  static equals(a: AlertSuspiciousUserClientPayload | PlainMessage<AlertSuspiciousUserClientPayload> | undefined, b: AlertSuspiciousUserClientPayload | PlainMessage<AlertSuspiciousUserClientPayload> | undefined): boolean;
}

/**
 * @generated from message blast.v1.game.Star
 */
export declare class Star extends Message<Star> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: optional string capsule_id = 2;
   */
  capsuleId?: string;

  /**
   * @generated from field: blast.v1.game.Position position = 3;
   */
  position?: Position;

  /**
   * @generated from field: int32 score = 4;
   */
  score: number;

  constructor(data?: PartialMessage<Star>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.game.Star";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Star;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Star;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Star;

  static equals(a: Star | PlainMessage<Star> | undefined, b: Star | PlainMessage<Star> | undefined): boolean;
}

/**
 * @generated from message blast.v1.game.Capsule
 */
export declare class Capsule extends Message<Capsule> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: blast.v1.game.Position position = 2;
   */
  position?: Position;

  /**
   * @generated from field: blast.v1.game.CapsuleRewardType reward_type = 3;
   */
  rewardType: CapsuleRewardType;

  constructor(data?: PartialMessage<Capsule>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.game.Capsule";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Capsule;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Capsule;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Capsule;

  static equals(a: Capsule | PlainMessage<Capsule> | undefined, b: Capsule | PlainMessage<Capsule> | undefined): boolean;
}

/**
 * @generated from message blast.v1.game.BlastGold
 */
export declare class BlastGold extends Message<BlastGold> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: string capsule_id = 2;
   */
  capsuleId: string;

  /**
   * @generated from field: float amount = 3;
   */
  amount: number;

  constructor(data?: PartialMessage<BlastGold>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.game.BlastGold";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BlastGold;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BlastGold;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BlastGold;

  static equals(a: BlastGold | PlainMessage<BlastGold> | undefined, b: BlastGold | PlainMessage<BlastGold> | undefined): boolean;
}

/**
 * @generated from message blast.v1.game.Meteor
 */
export declare class Meteor extends Message<Meteor> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: blast.v1.game.Position position = 2;
   */
  position?: Position;

  constructor(data?: PartialMessage<Meteor>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.game.Meteor";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Meteor;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Meteor;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Meteor;

  static equals(a: Meteor | PlainMessage<Meteor> | undefined, b: Meteor | PlainMessage<Meteor> | undefined): boolean;
}

/**
 * @generated from message blast.v1.game.Position
 */
export declare class Position extends Message<Position> {
  /**
   * @generated from field: float x = 1;
   */
  x: number;

  /**
   * @generated from field: float y = 2;
   */
  y: number;

  constructor(data?: PartialMessage<Position>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.game.Position";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Position;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Position;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Position;

  static equals(a: Position | PlainMessage<Position> | undefined, b: Position | PlainMessage<Position> | undefined): boolean;
}

/**
 * @generated from message blast.v1.game.Map
 */
export declare class Map extends Message<Map> {
  /**
   * @generated from field: repeated blast.v1.game.Star stars = 1;
   */
  stars: Star[];

  /**
   * @generated from field: repeated blast.v1.game.Capsule capsules = 2;
   */
  capsules: Capsule[];

  /**
   * @generated from field: repeated blast.v1.game.BlastGold blast_golds = 3;
   */
  blastGolds: BlastGold[];

  /**
   * @generated from field: repeated blast.v1.game.Meteor meteors = 4;
   */
  meteors: Meteor[];

  constructor(data?: PartialMessage<Map>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.game.Map";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Map;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Map;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Map;

  static equals(a: Map | PlainMessage<Map> | undefined, b: Map | PlainMessage<Map> | undefined): boolean;
}

/**
 * @generated from message blast.v1.game.Spaceship
 */
export declare class Spaceship extends Message<Spaceship> {
  /**
   * @generated from field: blast.v1.game.Position position = 1;
   */
  position?: Position;

  /**
   * @generated from field: int32 booster = 2;
   */
  booster: number;

  /**
   * @generated from field: int32 bullet = 3;
   */
  bullet: number;

  constructor(data?: PartialMessage<Spaceship>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.game.Spaceship";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Spaceship;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Spaceship;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Spaceship;

  static equals(a: Spaceship | PlainMessage<Spaceship> | undefined, b: Spaceship | PlainMessage<Spaceship> | undefined): boolean;
}

/**
 * @generated from message blast.v1.game.Game
 */
export declare class Game extends Message<Game> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: blast.v1.game.Map map = 2;
   */
  map?: Map;

  /**
   * @generated from field: blast.v1.game.Spaceship spaceship = 3;
   */
  spaceship?: Spaceship;

  /**
   * @generated from field: int32 score = 4;
   */
  score: number;

  /**
   * @generated from field: google.protobuf.Timestamp create_time = 5;
   */
  createTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp start_time = 6;
   */
  startTime?: Timestamp;

  constructor(data?: PartialMessage<Game>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.game.Game";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Game;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Game;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Game;

  static equals(a: Game | PlainMessage<Game> | undefined, b: Game | PlainMessage<Game> | undefined): boolean;
}


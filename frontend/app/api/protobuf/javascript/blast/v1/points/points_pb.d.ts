// @generated by protoc-gen-es v1.6.0
// @generated from file blast/v1/points/points.proto (package blast.v1.points, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { User } from "../user/user_pb.js";

/**
 * PointsType 을 유저의 행동군에 따라 2차 그룹핑함.
 *
 * @generated from enum blast.v1.points.PointsTypeBehaviorGroup
 */
export declare enum PointsTypeBehaviorGroup {
  /**
   * default value. this value is unused.
   *
   * @generated from enum value: GROUP_UNSPECIFIED = 0;
   */
  GROUP_UNSPECIFIED = 0,

  /**
   * @generated from enum value: REFERRAL = 1;
   */
  REFERRAL = 1,

  /**
   * @generated from enum value: STAKING = 2;
   */
  STAKING = 2,

  /**
   * @generated from enum value: ACTIVITY = 3;
   */
  ACTIVITY = 3,

  /**
   * @generated from enum value: BONUS = 4;
   */
  BONUS = 4,
}

/**
 * @generated from enum blast.v1.points.PointsType
 */
export declare enum PointsType {
  /**
   * default value. this value is unused.
   *
   * @generated from enum value: TYPE_UNKNOWN = 0;
   */
  TYPE_UNKNOWN = 0,

  /**
   * @generated from enum value: WELCOME = 1;
   */
  WELCOME = 1,

  /**
   * @generated from enum value: REFERRAL_REFFERED_BY = 100;
   */
  REFERRAL_REFFERED_BY = 100,

  /**
   * @generated from enum value: REFERRAL_REFERRER_BONUS = 101;
   */
  REFERRAL_REFERRER_BONUS = 101,

  /**
   * @generated from enum value: STAKING_INTEREST = 200;
   */
  STAKING_INTEREST = 200,

  /**
   * @generated from enum value: ACTIVITY_DAILY_CHECKIN = 300;
   */
  ACTIVITY_DAILY_CHECKIN = 300,

  /**
   * @generated from enum value: ACTIVITY_COMMUNITY_EVENT_WINNER = 301;
   */
  ACTIVITY_COMMUNITY_EVENT_WINNER = 301,

  /**
   * @generated from enum value: ACTIVITY_COMMUNITY_CONTRIBUTION = 302;
   */
  ACTIVITY_COMMUNITY_CONTRIBUTION = 302,

  /**
   * @generated from enum value: ACTIVITY_GM = 303;
   */
  ACTIVITY_GM = 303,

  /**
   * @generated from enum value: ACTIVITY_SQUARE_BEBOB_SUMMON = 304;
   */
  ACTIVITY_SQUARE_BEBOB_SUMMON = 304,

  /**
   * @generated from enum value: ACTIVITY_SQUARE_BEBOB_ATTACK = 305;
   */
  ACTIVITY_SQUARE_BEBOB_ATTACK = 305,

  /**
   * @generated from enum value: ACTIVITY_SCORE_UPLOAD = 306;
   */
  ACTIVITY_SCORE_UPLOAD = 306,

  /**
   * @generated from enum value: ACTIVITY_SCORE_LEADERBOARD_WINNER = 307;
   */
  ACTIVITY_SCORE_LEADERBOARD_WINNER = 307,

  /**
   * @generated from enum value: ACTIVITY_SCORE_LEADERBOARD_RAFFLE = 308;
   */
  ACTIVITY_SCORE_LEADERBOARD_RAFFLE = 308,

  /**
   * @generated from enum value: BONUS_SQUARE_OWNER = 400;
   */
  BONUS_SQUARE_OWNER = 400,

  /**
   * @generated from enum value: BONUS_SQUARE_MEMBER = 401;
   */
  BONUS_SQUARE_MEMBER = 401,
}

/**
 * @generated from enum blast.v1.points.MultiplierType
 */
export declare enum MultiplierType {
  /**
   * default value. this value is unused.
   *
   * @generated from enum value: MULTIPLIER_TYPE_UNSPECIFIED = 0;
   */
  MULTIPLIER_TYPE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: SQUARE_OWNER_BONUS = 1;
   */
  SQUARE_OWNER_BONUS = 1,

  /**
   * @generated from enum value: SQUARE_MULTIPLIER = 2;
   */
  SQUARE_MULTIPLIER = 2,

  /**
   * @generated from enum value: SQUARE_PFP_COLLECTION_BOOST = 3;
   */
  SQUARE_PFP_COLLECTION_BOOST = 3,
}

/**
 * @generated from message blast.v1.points.GetPointsRequest
 */
export declare class GetPointsRequest extends Message<GetPointsRequest> {
  /**
   * The name of the points to retrieve.
   * Format: users/{address}/points
   *
   * @generated from field: string points = 1;
   */
  points: string;

  constructor(data?: PartialMessage<GetPointsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.points.GetPointsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPointsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPointsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPointsRequest;

  static equals(a: GetPointsRequest | PlainMessage<GetPointsRequest> | undefined, b: GetPointsRequest | PlainMessage<GetPointsRequest> | undefined): boolean;
}

/**
 * @generated from message blast.v1.points.ListPointsRequest
 */
export declare class ListPointsRequest extends Message<ListPointsRequest> {
  /**
   * The maximum number of points to return. The service may return fewer than
   * this value.
   * If unspecified, at most 50 rows will be returned.
   * The maximum value is 1024; values above 1024 will be coerced to 1024.
   *
   * @generated from field: int32 page_size = 1;
   */
  pageSize: number;

  /**
   * Token of the page to retrieve. If not specified, the first
   * page of results will be returned. Use the value obtained from
   * `next_page_token` in the previous response in order to request
   * the next page of results.
   *
   * When paginating, all other parameters provided to `ListPoints` must match
   * the call that provided the page token.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;

  /**
   * Available Sequence and Operator
   * * name
   *   * `=`
   * * user_address
   *   * `=`
   *
   * Examples
   * * name="points/0x6F11EF2c07f2E381CbE514198DdE87A0c0a19442"
   * * user_address="0x6F11EF2c07f2E381CbE514198DdE87A0c0a19442"
   *
   * @generated from field: string filter = 3;
   */
  filter: string;

  /**
   * One or more fields to compare and use to sort the output. (optional)
   * Default order for a field is descending by id
   * To specify ascending or descending order, append " asc" or " desc" to the field name. If not specified, the order is ascending.
   *
   * Reference
   * * https://google.aip.dev/132#ordering.
   *
   * Supported Fields
   * * "id", "user_address", "points"
   *
   * Examples
   * * order_by=points desc
   *
   * @generated from field: string order_by = 4;
   */
  orderBy: string;

  constructor(data?: PartialMessage<ListPointsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.points.ListPointsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPointsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPointsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPointsRequest;

  static equals(a: ListPointsRequest | PlainMessage<ListPointsRequest> | undefined, b: ListPointsRequest | PlainMessage<ListPointsRequest> | undefined): boolean;
}

/**
 * ListPointsResponse
 * (-- api-linter: core::0158::response-next-page-token-field=disabled
 *     aip.dev/not-precedent: We need to do this because reasons. --)
 *
 * @generated from message blast.v1.points.ListPointsResponse
 */
export declare class ListPointsResponse extends Message<ListPointsResponse> {
  /**
   * The list of rows that matched the query.
   *
   * @generated from field: repeated blast.v1.points.Points points = 1;
   */
  points: Points[];

  /**
   * Pagination token used to retrieve the next page of results.
   * Pass the content of this string as the `page_token` attribute of
   * the next request. `next_page_token` is not returned for the last
   * page.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  constructor(data?: PartialMessage<ListPointsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.points.ListPointsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPointsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPointsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPointsResponse;

  static equals(a: ListPointsResponse | PlainMessage<ListPointsResponse> | undefined, b: ListPointsResponse | PlainMessage<ListPointsResponse> | undefined): boolean;
}

/**
 * @generated from message blast.v1.points.EarnStakingInterestRequest
 */
export declare class EarnStakingInterestRequest extends Message<EarnStakingInterestRequest> {
  /**
   * The name of the points to retrieve.
   * Format: users/{address}/points
   *
   * @generated from field: string points = 1;
   */
  points: string;

  constructor(data?: PartialMessage<EarnStakingInterestRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.points.EarnStakingInterestRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EarnStakingInterestRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EarnStakingInterestRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EarnStakingInterestRequest;

  static equals(a: EarnStakingInterestRequest | PlainMessage<EarnStakingInterestRequest> | undefined, b: EarnStakingInterestRequest | PlainMessage<EarnStakingInterestRequest> | undefined): boolean;
}

/**
 * @generated from message blast.v1.points.ListPointsReferralBonusesRequest
 */
export declare class ListPointsReferralBonusesRequest extends Message<ListPointsReferralBonusesRequest> {
  /**
   * The maximum number of points to return. The service may return fewer than
   * this value.
   * If unspecified, at most 10 rows will be returned.
   * The maximum value is 1024; values above 1024 will be coerced to 1024.
   *
   * @generated from field: int32 page_size = 1;
   */
  pageSize: number;

  /**
   * Token of the page to retrieve. If not specified, the first
   * page of results will be returned. Use the value obtained from
   * `next_page_token` in the previous response in order to request
   * the next page of results.
   *
   * When paginating, all other parameters provided to `ListPointsReferralBonuses` must match
   * the call that provided the page token.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;

  constructor(data?: PartialMessage<ListPointsReferralBonusesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.points.ListPointsReferralBonusesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPointsReferralBonusesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPointsReferralBonusesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPointsReferralBonusesRequest;

  static equals(a: ListPointsReferralBonusesRequest | PlainMessage<ListPointsReferralBonusesRequest> | undefined, b: ListPointsReferralBonusesRequest | PlainMessage<ListPointsReferralBonusesRequest> | undefined): boolean;
}

/**
 * ListPointsReferralBonusResponse
 * (-- api-linter: core::0158::response-next-page-token-field=disabled
 *     aip.dev/not-precedent: We need to do this because reasons. --)
 *
 * @generated from message blast.v1.points.ListPointsReferralBonusesResponse
 */
export declare class ListPointsReferralBonusesResponse extends Message<ListPointsReferralBonusesResponse> {
  /**
   * The list of rows that matched the query.
   *
   * @generated from field: repeated blast.v1.points.PointsReferralBonus referral_bonuses = 1;
   */
  referralBonuses: PointsReferralBonus[];

  /**
   * Pagination token used to retrieve the next page of results.
   * Pass the content of this string as the `page_token` attribute of
   * the next request. `next_page_token` is not returned for the last
   * page.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  constructor(data?: PartialMessage<ListPointsReferralBonusesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.points.ListPointsReferralBonusesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPointsReferralBonusesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPointsReferralBonusesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPointsReferralBonusesResponse;

  static equals(a: ListPointsReferralBonusesResponse | PlainMessage<ListPointsReferralBonusesResponse> | undefined, b: ListPointsReferralBonusesResponse | PlainMessage<ListPointsReferralBonusesResponse> | undefined): boolean;
}

/**
 * @generated from message blast.v1.points.Points
 */
export declare class Points extends Message<Points> {
  /**
   * The resource name of the Points.
   * Format: users/{address}/points
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: string user_address = 2;
   */
  userAddress: string;

  /**
   * @generated from field: uint32 total_points = 3;
   */
  totalPoints: number;

  /**
   * @generated from field: blast.v1.points.Referral referral = 5;
   */
  referral?: Referral;

  /**
   * @generated from field: blast.v1.points.Staking staking = 6;
   */
  staking?: Staking;

  /**
   * @generated from field: blast.v1.points.Activity activity = 7;
   */
  activity?: Activity;

  /**
   * @generated from field: blast.v1.points.Bonus bonus = 8;
   */
  bonus?: Bonus;

  /**
   * @generated from field: repeated blast.v1.points.Multiplier multipliers = 9;
   */
  multipliers: Multiplier[];

  constructor(data?: PartialMessage<Points>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.points.Points";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Points;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Points;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Points;

  static equals(a: Points | PlainMessage<Points> | undefined, b: Points | PlainMessage<Points> | undefined): boolean;
}

/**
 * @generated from message blast.v1.points.Referral
 */
export declare class Referral extends Message<Referral> {
  /**
   * @generated from field: uint32 referred_by_points = 1;
   */
  referredByPoints: number;

  /**
   * @generated from field: uint32 referred_points = 2;
   */
  referredPoints: number;

  /**
   * @generated from field: uint32 points = 3;
   */
  points: number;

  constructor(data?: PartialMessage<Referral>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.points.Referral";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Referral;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Referral;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Referral;

  static equals(a: Referral | PlainMessage<Referral> | undefined, b: Referral | PlainMessage<Referral> | undefined): boolean;
}

/**
 * @generated from message blast.v1.points.Staking
 */
export declare class Staking extends Message<Staking> {
  /**
   * @generated from field: uint32 points = 1;
   */
  points: number;

  constructor(data?: PartialMessage<Staking>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.points.Staking";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Staking;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Staking;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Staking;

  static equals(a: Staking | PlainMessage<Staking> | undefined, b: Staking | PlainMessage<Staking> | undefined): boolean;
}

/**
 * @generated from message blast.v1.points.Activity
 */
export declare class Activity extends Message<Activity> {
  /**
   * @generated from field: uint32 points = 1;
   */
  points: number;

  /**
   * @generated from field: uint32 daily_checkin = 2;
   */
  dailyCheckin: number;

  /**
   * @generated from field: uint32 gm = 3;
   */
  gm: number;

  constructor(data?: PartialMessage<Activity>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.points.Activity";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Activity;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Activity;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Activity;

  static equals(a: Activity | PlainMessage<Activity> | undefined, b: Activity | PlainMessage<Activity> | undefined): boolean;
}

/**
 * @generated from message blast.v1.points.Bonus
 */
export declare class Bonus extends Message<Bonus> {
  /**
   * Owner bonus
   *
   * @generated from field: uint32 square_owner = 1;
   */
  squareOwner: number;

  constructor(data?: PartialMessage<Bonus>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.points.Bonus";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Bonus;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Bonus;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Bonus;

  static equals(a: Bonus | PlainMessage<Bonus> | undefined, b: Bonus | PlainMessage<Bonus> | undefined): boolean;
}

/**
 * @generated from message blast.v1.points.Multiplier
 */
export declare class Multiplier extends Message<Multiplier> {
  /**
   * @generated from field: blast.v1.points.MultiplierType type = 1;
   */
  type: MultiplierType;

  /**
   * @generated from field: float percentage = 2;
   */
  percentage: number;

  constructor(data?: PartialMessage<Multiplier>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.points.Multiplier";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Multiplier;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Multiplier;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Multiplier;

  static equals(a: Multiplier | PlainMessage<Multiplier> | undefined, b: Multiplier | PlainMessage<Multiplier> | undefined): boolean;
}

/**
 * @generated from message blast.v1.points.PointsHistory
 */
export declare class PointsHistory extends Message<PointsHistory> {
  /**
   * @generated from field: string user_address = 1;
   */
  userAddress: string;

  /**
   * @generated from field: float amount = 2;
   */
  amount: number;

  /**
   * @generated from field: blast.v1.points.PointsType points_type = 3;
   */
  pointsType: PointsType;

  /**
   * @generated from field: blast.v1.points.PointsTypeBehaviorGroup points_type_behavior_group = 4;
   */
  pointsTypeBehaviorGroup: PointsTypeBehaviorGroup;

  constructor(data?: PartialMessage<PointsHistory>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.points.PointsHistory";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PointsHistory;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PointsHistory;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PointsHistory;

  static equals(a: PointsHistory | PlainMessage<PointsHistory> | undefined, b: PointsHistory | PlainMessage<PointsHistory> | undefined): boolean;
}

/**
 * @generated from message blast.v1.points.PointsReferralBonus
 */
export declare class PointsReferralBonus extends Message<PointsReferralBonus> {
  /**
   * @generated from field: blast.v1.user.User referred = 1;
   */
  referred?: User;

  /**
   * @generated from field: bool same_collection = 2;
   */
  sameCollection: boolean;

  /**
   * @generated from field: uint32 amount = 3;
   */
  amount: number;

  constructor(data?: PartialMessage<PointsReferralBonus>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.points.PointsReferralBonus";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): PointsReferralBonus;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): PointsReferralBonus;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): PointsReferralBonus;

  static equals(a: PointsReferralBonus | PlainMessage<PointsReferralBonus> | undefined, b: PointsReferralBonus | PlainMessage<PointsReferralBonus> | undefined): boolean;
}


// @generated by protoc-gen-es v1.6.0
// @generated from file blast/v1/square/square.proto (package blast.v1.square, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { FieldMask, proto3, Timestamp } from "@bufbuild/protobuf";
import { JoinSquareParams, MintAndCreateSquareParams, TransferSquareParams } from "../chain/sign_pb.js";

/**
 * SquareView enumeration represents the view of a square.
 * The view controls the amount of information returned.
 *
 * Reference
 * https://cloud.google.com/apis/design/design_patterns#list_flattening and
 * https://google.aip.dev/157
 *
 * @generated from enum blast.v1.square.SquareView
 */
export const SquareView = proto3.makeEnum(
  "blast.v1.square.SquareView",
  [
    {no: 0, name: "SQUARE_VIEW_UNSPECIFIED", localName: "UNSPECIFIED"},
    {no: 1, name: "SQUARE_VIEW_OWNER", localName: "OWNER"},
    {no: 2, name: "SQUARE_VIEW_MEMBER", localName: "MEMBER"},
    {no: 3, name: "SQUARE_VIEW_NOT_MEMBER", localName: "NOT_MEMBER"},
  ],
);

/**
 * The state of square
 *
 * @generated from enum blast.v1.square.SquareState
 */
export const SquareState = proto3.makeEnum(
  "blast.v1.square.SquareState",
  [
    {no: 0, name: "STATE_UNSPECIFIED"},
    {no: 1, name: "CREATED_PENDING"},
    {no: 2, name: "OWNED"},
    {no: 3, name: "UNOWNED"},
  ],
);

/**
 * The join type of square
 *
 * @generated from enum blast.v1.square.SquareJoinType
 */
export const SquareJoinType = proto3.makeEnum(
  "blast.v1.square.SquareJoinType",
  [
    {no: 0, name: "TYPE_UNSPECIFIED"},
    {no: 1, name: "PUBLIC"},
    {no: 2, name: "PRIVATE"},
    {no: 3, name: "TOKEN_GATED"},
  ],
);

/**
 * The member type of square
 *
 * @generated from enum blast.v1.square.SquareMemberType
 */
export const SquareMemberType = proto3.makeEnum(
  "blast.v1.square.SquareMemberType",
  [
    {no: 0, name: "SQUARE_MEMBER_TYPE_UNSPECIFIED"},
    {no: 1, name: "OWNER"},
    {no: 2, name: "MEMBER"},
  ],
);

/**
 * @generated from enum blast.v1.square.SquareMemberRankType
 */
export const SquareMemberRankType = proto3.makeEnum(
  "blast.v1.square.SquareMemberRankType",
  [
    {no: 0, name: "SQUARE_MEMBER_RANK_TYPE_UNSPECIFIED"},
    {no: 1, name: "ALL_TIME"},
    {no: 2, name: "WEEKLY"},
  ],
);

/**
 * @generated from enum blast.v1.square.RejectMintCode
 */
export const RejectMintCode = proto3.makeEnum(
  "blast.v1.square.RejectMintCode",
  [
    {no: 0, name: "REJECT_MINT_CODE_UNSPECIFIED"},
    {no: 1, name: "NO_ELIGIBILITY"},
    {no: 2, name: "ROUND_TIME_NOT_MATCH"},
    {no: 3, name: "ALREADY_MINTED"},
  ],
);

/**
 * @generated from enum blast.v1.square.RejectJoinSquareCode
 */
export const RejectJoinSquareCode = proto3.makeEnum(
  "blast.v1.square.RejectJoinSquareCode",
  [
    {no: 0, name: "REJECT_JOIN_CODE_UNSPECIFIED"},
    {no: 1, name: "REJECT_JOIN_FULLY_OCCUPIED"},
    {no: 2, name: "REJECT_JOIN_NOT_ENOUGH_STAKING_AMOUNT"},
    {no: 3, name: "REJECT_JOIN_INCORRECT_PRIVATE_CODE"},
    {no: 4, name: "REJECT_JOIN_NOT_TOKEN_HOLDER"},
    {no: 5, name: "REJECT_JOIN_ALREADY_JOINED"},
  ],
);

/**
 * @generated from enum blast.v1.square.RejectTransferSquareCode
 */
export const RejectTransferSquareCode = proto3.makeEnum(
  "blast.v1.square.RejectTransferSquareCode",
  [
    {no: 0, name: "REJECT_TRANSFER_CODE_UNSPECIFIED"},
    {no: 1, name: "REJECT_TRANSFER_FULLY_OCCUPIED"},
    {no: 2, name: "REJECT_TRANSFER_NOT_ENOUGH_STAKING_AMOUNT"},
    {no: 3, name: "REJECT_TRANSFER_INCORRECT_PRIVATE_CODE"},
    {no: 4, name: "REJECT_TRANSFER_NOT_TOKEN_HOLDER"},
    {no: 5, name: "REJECT_TRANSFER_NOT_SQUARE_MEMBER"},
    {no: 6, name: "REJECT_TRANSFER_NOT_AFTER_COOLDOWN_TIME"},
  ],
);

/**
 * @generated from enum blast.v1.square.MintEligibility
 */
export const MintEligibility = proto3.makeEnum(
  "blast.v1.square.MintEligibility",
  [
    {no: 0, name: "MINT_ELIGIBILITY_UNSPECIFIED"},
    {no: 1, name: "NOT_ELIGIBLE"},
    {no: 2, name: "ELIGIBLE_ROUND1"},
    {no: 3, name: "ELIGIBLE_ROUND2"},
    {no: 4, name: "ELIGIBLE_ROUND1_AND_ROUND2"},
  ],
);

/**
 * @generated from enum blast.v1.square.TransferMemberType
 */
export const TransferMemberType = proto3.makeEnum(
  "blast.v1.square.TransferMemberType",
  [
    {no: 0, name: "TRANSFER_MEMBER_TYPE_UNSPECIFIED"},
    {no: 1, name: "DEFAULT"},
    {no: 2, name: "KICKED_OUT"},
    {no: 3, name: "TO_OWNER"},
  ],
);

/**
 * @generated from enum blast.v1.square.SpiritType
 */
export const SpiritType = proto3.makeEnum(
  "blast.v1.square.SpiritType",
  [
    {no: 0, name: "SQUARE_SPIRIT_TYPE_UNSPECIFIED"},
    {no: 1, name: "VOTING"},
    {no: 2, name: "SUMMON_BEBOB_SUCCESS"},
    {no: 3, name: "ATTACK_BEBOB_SUCCESS"},
    {no: 4, name: "COLLECT_STARS"},
    {no: 5, name: "COMMUNITY_EVENT"},
  ],
);

/**
 * @generated from message blast.v1.square.GetSquareRequest
 */
export const GetSquareRequest = proto3.makeMessageType(
  "blast.v1.square.GetSquareRequest",
  () => [
    { no: 1, name: "square", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "view", kind: "enum", T: proto3.getEnumType(SquareView) },
  ],
);

/**
 * @generated from message blast.v1.square.ListSquaresRequest
 */
export const ListSquaresRequest = proto3.makeMessageType(
  "blast.v1.square.ListSquaresRequest",
  () => [
    { no: 1, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 2, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "filter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "order_by", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * ListSquaresResponse
 * (-- api-linter: core::0158::response-next-page-token-field=disabled
 *     aip.dev/not-precedent: We need to do this because reasons. --)
 *
 * @generated from message blast.v1.square.ListSquaresResponse
 */
export const ListSquaresResponse = proto3.makeMessageType(
  "blast.v1.square.ListSquaresResponse",
  () => [
    { no: 1, name: "squares", kind: "message", T: Square, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message blast.v1.square.ValidateDisplayNameAvailabilityRequest
 */
export const ValidateDisplayNameAvailabilityRequest = proto3.makeMessageType(
  "blast.v1.square.ValidateDisplayNameAvailabilityRequest",
  () => [
    { no: 1, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message blast.v1.square.ValidateDisplayNameAvailabilityResponse
 */
export const ValidateDisplayNameAvailabilityResponse = proto3.makeMessageType(
  "blast.v1.square.ValidateDisplayNameAvailabilityResponse",
  () => [
    { no: 1, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "available", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "reason", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
  ],
);

/**
 * @generated from message blast.v1.square.CreateSquareAndSignRequest
 */
export const CreateSquareAndSignRequest = proto3.makeMessageType(
  "blast.v1.square.CreateSquareAndSignRequest",
  () => [
    { no: 1, name: "nonce", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "square", kind: "message", T: Square },
  ],
);

/**
 * @generated from message blast.v1.square.CreateSquareAndSignResponse
 */
export const CreateSquareAndSignResponse = proto3.makeMessageType(
  "blast.v1.square.CreateSquareAndSignResponse",
  () => [
    { no: 1, name: "square", kind: "message", T: Square },
    { no: 2, name: "signature", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "params", kind: "message", T: MintAndCreateSquareParams },
  ],
);

/**
 * @generated from message blast.v1.square.ListUsersSquaresRequest
 */
export const ListUsersSquaresRequest = proto3.makeMessageType(
  "blast.v1.square.ListUsersSquaresRequest",
  () => [
    { no: 1, name: "user", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message blast.v1.square.ListUsersSquaresResponse
 */
export const ListUsersSquaresResponse = proto3.makeMessageType(
  "blast.v1.square.ListUsersSquaresResponse",
  () => [
    { no: 1, name: "squares", kind: "message", T: Square, repeated: true },
  ],
);

/**
 * @generated from message blast.v1.square.UpdateSquareRequest
 */
export const UpdateSquareRequest = proto3.makeMessageType(
  "blast.v1.square.UpdateSquareRequest",
  () => [
    { no: 1, name: "square", kind: "message", T: Square },
    { no: 2, name: "update_mask", kind: "message", T: FieldMask },
  ],
);

/**
 * @generated from message blast.v1.square.GetSquareWeeklySpiritsRequest
 */
export const GetSquareWeeklySpiritsRequest = proto3.makeMessageType(
  "blast.v1.square.GetSquareWeeklySpiritsRequest",
  () => [
    { no: 1, name: "square", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "week", kind: "scalar", T: 13 /* ScalarType.UINT32 */, opt: true },
  ],
);

/**
 * @generated from message blast.v1.square.GetSquareWeeklySpiritsResponse
 */
export const GetSquareWeeklySpiritsResponse = proto3.makeMessageType(
  "blast.v1.square.GetSquareWeeklySpiritsResponse",
  () => [
    { no: 1, name: "weekly_spirits", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ],
);

/**
 * @generated from message blast.v1.square.CheckMintEligibilityRequest
 */
export const CheckMintEligibilityRequest = proto3.makeMessageType(
  "blast.v1.square.CheckMintEligibilityRequest",
  () => [
    { no: 1, name: "user", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message blast.v1.square.CheckMintEligibilityResponse
 */
export const CheckMintEligibilityResponse = proto3.makeMessageType(
  "blast.v1.square.CheckMintEligibilityResponse",
  () => [
    { no: 1, name: "user", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "eligibility", kind: "enum", T: proto3.getEnumType(MintEligibility) },
    { no: 3, name: "available", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "reject_code", kind: "enum", T: proto3.getEnumType(RejectMintCode), opt: true },
  ],
);

/**
 * @generated from message blast.v1.square.ApproveJoinSquareAndSignRequest
 */
export const ApproveJoinSquareAndSignRequest = proto3.makeMessageType(
  "blast.v1.square.ApproveJoinSquareAndSignRequest",
  () => [
    { no: 1, name: "square", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "private_code", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "nonce", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message blast.v1.square.ApproveJoinSquareAndSignResponse
 */
export const ApproveJoinSquareAndSignResponse = proto3.makeMessageType(
  "blast.v1.square.ApproveJoinSquareAndSignResponse",
  () => [
    { no: 1, name: "approved", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "signature", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "reject_code", kind: "enum", T: proto3.getEnumType(RejectJoinSquareCode), opt: true },
    { no: 4, name: "params", kind: "message", T: JoinSquareParams },
  ],
);

/**
 * @generated from message blast.v1.square.ApproveTransferSquareAndSignRequest
 */
export const ApproveTransferSquareAndSignRequest = proto3.makeMessageType(
  "blast.v1.square.ApproveTransferSquareAndSignRequest",
  () => [
    { no: 1, name: "square", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "user", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "private_code", kind: "scalar", T: 9 /* ScalarType.STRING */, opt: true },
    { no: 4, name: "nonce", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message blast.v1.square.ApproveTransferSquareAndSignResponse
 */
export const ApproveTransferSquareAndSignResponse = proto3.makeMessageType(
  "blast.v1.square.ApproveTransferSquareAndSignResponse",
  () => [
    { no: 1, name: "approved", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "signature", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "reject_code", kind: "enum", T: proto3.getEnumType(RejectTransferSquareCode), opt: true },
    { no: 4, name: "params", kind: "message", T: TransferSquareParams },
  ],
);

/**
 * @generated from message blast.v1.square.GetSquareWeeklyPointsRequest
 */
export const GetSquareWeeklyPointsRequest = proto3.makeMessageType(
  "blast.v1.square.GetSquareWeeklyPointsRequest",
  () => [
    { no: 1, name: "square", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "week", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ],
);

/**
 * @generated from message blast.v1.square.GetSquareWeeklyPointsResponse
 */
export const GetSquareWeeklyPointsResponse = proto3.makeMessageType(
  "blast.v1.square.GetSquareWeeklyPointsResponse",
  () => [
    { no: 1, name: "weekly_points", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "week", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ],
);

/**
 * @generated from message blast.v1.square.ListSquareSpiritHistoriesRequest
 */
export const ListSquareSpiritHistoriesRequest = proto3.makeMessageType(
  "blast.v1.square.ListSquareSpiritHistoriesRequest",
  () => [
    { no: 1, name: "square", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message blast.v1.square.ListSquareSpiritHistoriesResposne
 */
export const ListSquareSpiritHistoriesResposne = proto3.makeMessageType(
  "blast.v1.square.ListSquareSpiritHistoriesResposne",
  () => [
    { no: 1, name: "histories", kind: "message", T: SquareSpiritHistory, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message blast.v1.square.ListSquareMembersRequest
 */
export const ListSquareMembersRequest = proto3.makeMessageType(
  "blast.v1.square.ListSquareMembersRequest",
  () => [
    { no: 1, name: "square", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 3, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "filter", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "order_by", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * ListSquareMembersResponse
 * (-- api-linter: core::0158::response-next-page-token-field=disabled
 *     aip.dev/not-precedent: We need to do this because reasons. --)
 *
 * @generated from message blast.v1.square.ListSquareMembersResponse
 */
export const ListSquareMembersResponse = proto3.makeMessageType(
  "blast.v1.square.ListSquareMembersResponse",
  () => [
    { no: 1, name: "members", kind: "message", T: SquareMember, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message blast.v1.square.ListSquareMemberRankingsRequest
 */
export const ListSquareMemberRankingsRequest = proto3.makeMessageType(
  "blast.v1.square.ListSquareMemberRankingsRequest",
  () => [
    { no: 1, name: "square", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "rank_type", kind: "enum", T: proto3.getEnumType(SquareMemberRankType) },
    { no: 3, name: "page_size", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
    { no: 4, name: "page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message blast.v1.square.ListSquareMemberRankingsResponse
 */
export const ListSquareMemberRankingsResponse = proto3.makeMessageType(
  "blast.v1.square.ListSquareMemberRankingsResponse",
  () => [
    { no: 1, name: "rankings", kind: "message", T: SquareMemberRanking, repeated: true },
    { no: 2, name: "next_page_token", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message blast.v1.square.Square
 */
export const Square = proto3.makeMessageType(
  "blast.v1.square.Square",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "token_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "owner_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "create_time", kind: "message", T: Timestamp },
    { no: 5, name: "state", kind: "enum", T: proto3.getEnumType(SquareState) },
    { no: 6, name: "signature_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "join_type", kind: "enum", T: proto3.getEnumType(SquareJoinType) },
    { no: 8, name: "public", kind: "message", T: Public, oneof: "join" },
    { no: 9, name: "private", kind: "message", T: Private, oneof: "join" },
    { no: 10, name: "token_gated", kind: "message", T: TokenGated, oneof: "join" },
    { no: 11, name: "display_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "introduction", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "minimum_staking_amount_to_join_in_eth", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 14, name: "total_members_staking_amount_in_eth", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 15, name: "multiplier", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 16, name: "total_points", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 17, name: "capacity", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 18, name: "occupancy", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 19, name: "occupancy_including_pending", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 20, name: "pfp_boost", kind: "message", T: PFPBoost },
    { no: 21, name: "nft", kind: "message", T: SquareNFT },
    { no: 22, name: "spirits", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 23, name: "stars", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 24, name: "total_spirits", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 25, name: "weekly_spirits", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
  ],
);

/**
 * @generated from message blast.v1.square.PFPBoost
 */
export const PFPBoost = proto3.makeMessageType(
  "blast.v1.square.PFPBoost",
  () => [
    { no: 1, name: "percentage", kind: "scalar", T: 2 /* ScalarType.FLOAT */ },
    { no: 2, name: "member_count", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "nft_contract", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message blast.v1.square.Public
 */
export const Public = proto3.makeMessageType(
  "blast.v1.square.Public",
  [],
);

/**
 * @generated from message blast.v1.square.Private
 */
export const Private = proto3.makeMessageType(
  "blast.v1.square.Private",
  () => [
    { no: 1, name: "code", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message blast.v1.square.TokenGated
 */
export const TokenGated = proto3.makeMessageType(
  "blast.v1.square.TokenGated",
  () => [
    { no: 1, name: "nft_contract", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message blast.v1.square.SquareNFT
 */
export const SquareNFT = proto3.makeMessageType(
  "blast.v1.square.SquareNFT",
  () => [
    { no: 1, name: "token_id", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "image_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "metadata_uri", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message blast.v1.square.SquareMember
 */
export const SquareMember = proto3.makeMessageType(
  "blast.v1.square.SquareMember",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "square_token_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "user_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "type", kind: "enum", T: proto3.getEnumType(SquareMemberType) },
    { no: 5, name: "total_points", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 8, name: "join_time", kind: "message", T: Timestamp },
  ],
);

/**
 * @generated from message blast.v1.square.SquareMemberRanking
 */
export const SquareMemberRanking = proto3.makeMessageType(
  "blast.v1.square.SquareMemberRanking",
  () => [
    { no: 1, name: "rank", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 2, name: "points", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "member", kind: "message", T: SquareMember },
  ],
);

/**
 * @generated from message blast.v1.square.SquareSpiritHistory
 */
export const SquareSpiritHistory = proto3.makeMessageType(
  "blast.v1.square.SquareSpiritHistory",
  () => [
    { no: 2, name: "square", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "type", kind: "enum", T: proto3.getEnumType(SpiritType) },
    { no: 4, name: "amount", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 5, name: "create_time", kind: "message", T: Timestamp },
  ],
);


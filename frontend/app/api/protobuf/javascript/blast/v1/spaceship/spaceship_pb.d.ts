// @generated by protoc-gen-es v1.6.0
// @generated from file blast/v1/spaceship/spaceship.proto (package blast.v1.spaceship, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, FieldMask, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * The state of spaceship
 *
 * @generated from enum blast.v1.spaceship.SpaceshipType
 */
export declare enum SpaceshipType {
  /**
   * default value. this value is unused.
   *
   * @generated from enum value: TYPE_UNSPECIFIED = 0;
   */
  TYPE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: PROTOSHIP = 1;
   */
  PROTOSHIP = 1,

  /**
   * @generated from enum value: OWNERSHIP = 2;
   */
  OWNERSHIP = 2,
}

/**
 * @generated from message blast.v1.spaceship.ListSpaceshipsRequest
 */
export declare class ListSpaceshipsRequest extends Message<ListSpaceshipsRequest> {
  /**
   * The maximum number of spaceships to return. The service may return fewer than
   * this value.
   * If unspecified, at most 50 rows will be returned.
   * The maximum value is 1024; values above 1024 will be coerced to 1024.
   *
   * @generated from field: int32 page_size = 1;
   */
  pageSize: number;

  /**
   * Token of the page to retrieve. If not specified, the first
   * page of results will be returned. Use the value obtained from
   * `next_page_token` in the previous response in order to request
   * the next page of results.
   *
   * When paginating, all other parameters provided to `ListSpaceships` must match
   * the call that provided the page token.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;

  /**
   * Available Sequence and Operator
   * * name
   *   * `Equal`
   * * create_time
   *   * `>`
   * * identified
   *   * Equal`
   *
   * Examples
   * * name="spaceships/0x6F11EF2c07f2E381CbE514198DdE87A0c0a19442"
   * * create_time>"2020-04-21T11:30:00Z"
   * * identifed
   *
   * @generated from field: string filter = 3;
   */
  filter: string;

  constructor(data?: PartialMessage<ListSpaceshipsRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.spaceship.ListSpaceshipsRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListSpaceshipsRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListSpaceshipsRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListSpaceshipsRequest;

  static equals(a: ListSpaceshipsRequest | PlainMessage<ListSpaceshipsRequest> | undefined, b: ListSpaceshipsRequest | PlainMessage<ListSpaceshipsRequest> | undefined): boolean;
}

/**
 * @generated from message blast.v1.spaceship.GetSpaceshipRequest
 */
export declare class GetSpaceshipRequest extends Message<GetSpaceshipRequest> {
  /**
   * The name of the spaceship to retrieve.
   * Format: spaceships/{address}
   * Alias "spaceships/me" is supported.
   *
   * @generated from field: string spaceship = 1;
   */
  spaceship: string;

  constructor(data?: PartialMessage<GetSpaceshipRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.spaceship.GetSpaceshipRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetSpaceshipRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetSpaceshipRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetSpaceshipRequest;

  static equals(a: GetSpaceshipRequest | PlainMessage<GetSpaceshipRequest> | undefined, b: GetSpaceshipRequest | PlainMessage<GetSpaceshipRequest> | undefined): boolean;
}

/**
 * ListSpaceshipsResponse
 * (-- api-linter: core::0158::response-next-page-token-field=disabled
 *     aip.dev/not-precedent: We need to do this because reasons. --)
 *
 * @generated from message blast.v1.spaceship.ListSpaceshipsResponse
 */
export declare class ListSpaceshipsResponse extends Message<ListSpaceshipsResponse> {
  /**
   * The list of rows that matched the query.
   *
   * @generated from field: repeated blast.v1.spaceship.Spaceship spaceships = 1;
   */
  spaceships: Spaceship[];

  /**
   * Pagination token used to retrieve the next page of results.
   * Pass the content of this string as the `page_token` attribute of
   * the next request. `next_page_token` is not returned for the last
   * page.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  constructor(data?: PartialMessage<ListSpaceshipsResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.spaceship.ListSpaceshipsResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListSpaceshipsResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListSpaceshipsResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListSpaceshipsResponse;

  static equals(a: ListSpaceshipsResponse | PlainMessage<ListSpaceshipsResponse> | undefined, b: ListSpaceshipsResponse | PlainMessage<ListSpaceshipsResponse> | undefined): boolean;
}

/**
 * @generated from message blast.v1.spaceship.UpdateSpaceshipRequest
 */
export declare class UpdateSpaceshipRequest extends Message<UpdateSpaceshipRequest> {
  /**
   * Spaceship to update
   * Format: spaceships/{address}
   *
   * @generated from field: blast.v1.spaceship.Spaceship spaceship = 1;
   */
  spaceship?: Spaceship;

  /**
   * Field mask that specifies the fields to update.
   * If no field mask is set, all fields will be updated.
   * Wildcards are supported.
   * Examples
   * ["*"]
   * ["nickname"]
   *
   * @generated from field: google.protobuf.FieldMask update_mask = 2;
   */
  updateMask?: FieldMask;

  constructor(data?: PartialMessage<UpdateSpaceshipRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.spaceship.UpdateSpaceshipRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UpdateSpaceshipRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UpdateSpaceshipRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UpdateSpaceshipRequest;

  static equals(a: UpdateSpaceshipRequest | PlainMessage<UpdateSpaceshipRequest> | undefined, b: UpdateSpaceshipRequest | PlainMessage<UpdateSpaceshipRequest> | undefined): boolean;
}

/**
 * @generated from message blast.v1.spaceship.Spaceship
 */
export declare class Spaceship extends Message<Spaceship> {
  /**
   * The resource name of the Spaceship.
   * Format: spaceships/{address}
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * EIP-6551 TBA Address of the Spaceship NFT.
   *
   * @generated from field: string address = 2;
   */
  address: string;

  /**
   * @generated from field: string owner_address = 3;
   */
  ownerAddress: string;

  /**
   * @generated from field: blast.v1.spaceship.SpaceshipType type = 4;
   */
  type: SpaceshipType;

  /**
   * The created time of Spaceship.
   * RFC3339 format e.g. "2006-01-02T15:04:05Z07:00"
   *
   * @generated from field: google.protobuf.Timestamp create_time = 5;
   */
  createTime?: Timestamp;

  /**
   * The updated time of Spaceship.
   *
   * @generated from field: blast.v1.spaceship.SpaceshipNFT nft = 6;
   */
  nft?: SpaceshipNFT;

  constructor(data?: PartialMessage<Spaceship>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.spaceship.Spaceship";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Spaceship;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Spaceship;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Spaceship;

  static equals(a: Spaceship | PlainMessage<Spaceship> | undefined, b: Spaceship | PlainMessage<Spaceship> | undefined): boolean;
}

/**
 * @generated from message blast.v1.spaceship.SpaceshipNFT
 */
export declare class SpaceshipNFT extends Message<SpaceshipNFT> {
  /**
   * Token ID of the NFT asset.
   *
   * @generated from field: string token_id = 1;
   */
  tokenId: string;

  /**
   * The URI of the NFT asset's image.
   * This URI is cached version of image original URI
   * e.g. "https://cdn.spacebar.xyz/nfts/ethereum/0x79fcdef22feed20eddacbb2587640e45491b757f/609"
   *
   * @generated from field: string image_uri = 2;
   */
  imageUri: string;

  /**
   * The URI of the NFT asset's metadata.
   *
   * @generated from field: string metadata_uri = 3;
   */
  metadataUri: string;

  constructor(data?: PartialMessage<SpaceshipNFT>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.spaceship.SpaceshipNFT";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SpaceshipNFT;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SpaceshipNFT;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SpaceshipNFT;

  static equals(a: SpaceshipNFT | PlainMessage<SpaceshipNFT> | undefined, b: SpaceshipNFT | PlainMessage<SpaceshipNFT> | undefined): boolean;
}


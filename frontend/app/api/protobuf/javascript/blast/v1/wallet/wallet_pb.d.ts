// @generated by protoc-gen-es v1.6.0
// @generated from file blast/v1/wallet/wallet.proto (package blast.v1.wallet, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message blast.v1.wallet.GetWalletRequest
 */
export declare class GetWalletRequest extends Message<GetWalletRequest> {
  /**
   * The name of the wallet to retrieve.
   * Format: wallets/{address}
   * Alias "wallets/me" is supported.
   *
   * @generated from field: string wallet = 1;
   */
  wallet: string;

  constructor(data?: PartialMessage<GetWalletRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.wallet.GetWalletRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetWalletRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetWalletRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetWalletRequest;

  static equals(a: GetWalletRequest | PlainMessage<GetWalletRequest> | undefined, b: GetWalletRequest | PlainMessage<GetWalletRequest> | undefined): boolean;
}

/**
 * @generated from message blast.v1.wallet.Wallet
 */
export declare class Wallet extends Message<Wallet> {
  /**
   * @generated from field: string address = 1;
   */
  address: string;

  /**
   * @generated from field: uint32 total_points = 2;
   */
  totalPoints: number;

  /**
   * @generated from field: blast.v1.wallet.EarlyAccess early_access = 3;
   */
  earlyAccess?: EarlyAccess;

  /**
   * @generated from field: blast.v1.wallet.BlastBridge blast_bridge = 4;
   */
  blastBridge?: BlastBridge;

  /**
   * @generated from field: blast.v1.wallet.NFTAssets nft_assets = 5;
   */
  nftAssets?: NFTAssets;

  /**
   * @generated from field: blast.v1.wallet.CryptoOG crypto_og = 6;
   */
  cryptoOg?: CryptoOG;

  constructor(data?: PartialMessage<Wallet>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.wallet.Wallet";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Wallet;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Wallet;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Wallet;

  static equals(a: Wallet | PlainMessage<Wallet> | undefined, b: Wallet | PlainMessage<Wallet> | undefined): boolean;
}

/**
 * @generated from message blast.v1.wallet.EarlyAccess
 */
export declare class EarlyAccess extends Message<EarlyAccess> {
  /**
   * @generated from field: uint32 galxe_points = 1;
   */
  galxePoints: number;

  constructor(data?: PartialMessage<EarlyAccess>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.wallet.EarlyAccess";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): EarlyAccess;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): EarlyAccess;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): EarlyAccess;

  static equals(a: EarlyAccess | PlainMessage<EarlyAccess> | undefined, b: EarlyAccess | PlainMessage<EarlyAccess> | undefined): boolean;
}

/**
 * @generated from message blast.v1.wallet.BlastBridge
 */
export declare class BlastBridge extends Message<BlastBridge> {
  /**
   * @generated from field: float ETH = 1;
   */
  ETH: number;

  /**
   * @generated from field: float stETH = 2;
   */
  stETH: number;

  /**
   * @generated from field: float DAI = 3;
   */
  DAI: number;

  /**
   * @generated from field: float USDT = 4;
   */
  USDT: number;

  /**
   * @generated from field: float USDC = 5;
   */
  USDC: number;

  constructor(data?: PartialMessage<BlastBridge>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.wallet.BlastBridge";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BlastBridge;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BlastBridge;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BlastBridge;

  static equals(a: BlastBridge | PlainMessage<BlastBridge> | undefined, b: BlastBridge | PlainMessage<BlastBridge> | undefined): boolean;
}

/**
 * @generated from message blast.v1.wallet.NFTAssets
 */
export declare class NFTAssets extends Message<NFTAssets> {
  /**
   * @generated from field: uint32 count = 1;
   */
  count: number;

  constructor(data?: PartialMessage<NFTAssets>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.wallet.NFTAssets";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): NFTAssets;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): NFTAssets;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): NFTAssets;

  static equals(a: NFTAssets | PlainMessage<NFTAssets> | undefined, b: NFTAssets | PlainMessage<NFTAssets> | undefined): boolean;
}

/**
 * @generated from message blast.v1.wallet.CryptoOG
 */
export declare class CryptoOG extends Message<CryptoOG> {
  /**
   * @generated from field: bool og = 1;
   */
  og: boolean;

  constructor(data?: PartialMessage<CryptoOG>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.wallet.CryptoOG";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CryptoOG;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CryptoOG;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CryptoOG;

  static equals(a: CryptoOG | PlainMessage<CryptoOG> | undefined, b: CryptoOG | PlainMessage<CryptoOG> | undefined): boolean;
}


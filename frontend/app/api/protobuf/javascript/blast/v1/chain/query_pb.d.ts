// @generated by protoc-gen-es v1.6.0
// @generated from file blast/v1/chain/query.proto (package blast.v1.chain, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { ChainType } from "../nft/nft_pb.js";

/**
 * @generated from enum blast.v1.chain.DelegationType
 */
export declare enum DelegationType {
  /**
   * @generated from enum value: DELEGATION_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: DELEGATION_TYPE_ALL = 1;
   */
  ALL = 1,

  /**
   * @generated from enum value: DELEGATION_TYPE_CONTRACT = 2;
   */
  CONTRACT = 2,

  /**
   * @generated from enum value: DELEGATION_TYPE_ERC721 = 3;
   */
  ERC721 = 3,
}

/**
 * The state of the transaction receipt.
 *
 * @generated from enum blast.v1.chain.ReceiptStatus
 */
export declare enum ReceiptStatus {
  /**
   * RECEIPT_STATUS_FAILED is the status code of a transaction if execution failed.
   *
   * @generated from enum value: RECEIPT_STATUS_FAILED = 0;
   */
  FAILED = 0,

  /**
   * RECEIPT_STATUS_SUCCESSFUL is the status code of a transaction if execution succeeded.
   *
   * @generated from enum value: RECEIPT_STATUS_SUCCESSFUL = 1;
   */
  SUCCESSFUL = 1,
}

/**
 * @generated from message blast.v1.chain.QueryReceiptRequest
 */
export declare class QueryReceiptRequest extends Message<QueryReceiptRequest> {
  /**
   * @generated from field: string tx_hash = 1;
   */
  txHash: string;

  /**
   *
   * e.g. "60s", "5m", "1h30m"
   *
   * The amount of time to wait for the transaction to be mined.
   *
   * If the transaction is not mined within this time, server will return 504 Gateway Timeout(DEADLINE_EXCEEDED).
   *
   * The default is 5 minutes.
   *
   * The maximum allowed timeout is 30 minutes. If the value is greater than 30 minutes, server will automatically set it to 30 minutes.
   *
   * If longer timeout is needed, please retry after the previous request times out.
   *
   * @generated from field: string timeout = 2;
   */
  timeout: string;

  constructor(data?: PartialMessage<QueryReceiptRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.chain.QueryReceiptRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryReceiptRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryReceiptRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryReceiptRequest;

  static equals(a: QueryReceiptRequest | PlainMessage<QueryReceiptRequest> | undefined, b: QueryReceiptRequest | PlainMessage<QueryReceiptRequest> | undefined): boolean;
}

/**
 * @generated from message blast.v1.chain.QueryQueryTransactionCountRequest
 */
export declare class QueryQueryTransactionCountRequest extends Message<QueryQueryTransactionCountRequest> {
  /**
   * @generated from field: string address = 1;
   */
  address: string;

  /**
   * @generated from field: uint64 block_number = 2;
   */
  blockNumber: bigint;

  constructor(data?: PartialMessage<QueryQueryTransactionCountRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.chain.QueryQueryTransactionCountRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryQueryTransactionCountRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryQueryTransactionCountRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryQueryTransactionCountRequest;

  static equals(a: QueryQueryTransactionCountRequest | PlainMessage<QueryQueryTransactionCountRequest> | undefined, b: QueryQueryTransactionCountRequest | PlainMessage<QueryQueryTransactionCountRequest> | undefined): boolean;
}

/**
 * @generated from message blast.v1.chain.QueryQueryTransactionCountResponse
 */
export declare class QueryQueryTransactionCountResponse extends Message<QueryQueryTransactionCountResponse> {
  /**
   * @generated from field: uint64 count = 1;
   */
  count: bigint;

  constructor(data?: PartialMessage<QueryQueryTransactionCountResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.chain.QueryQueryTransactionCountResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryQueryTransactionCountResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryQueryTransactionCountResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryQueryTransactionCountResponse;

  static equals(a: QueryQueryTransactionCountResponse | PlainMessage<QueryQueryTransactionCountResponse> | undefined, b: QueryQueryTransactionCountResponse | PlainMessage<QueryQueryTransactionCountResponse> | undefined): boolean;
}

/**
 * @generated from message blast.v1.chain.QueryDelegateCashRequest
 */
export declare class QueryDelegateCashRequest extends Message<QueryDelegateCashRequest> {
  /**
   * @generated from field: string address = 1;
   */
  address: string;

  /**
   * @generated from field: repeated blast.v1.nft.ChainType chains = 2;
   */
  chains: ChainType[];

  constructor(data?: PartialMessage<QueryDelegateCashRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.chain.QueryDelegateCashRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryDelegateCashRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryDelegateCashRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryDelegateCashRequest;

  static equals(a: QueryDelegateCashRequest | PlainMessage<QueryDelegateCashRequest> | undefined, b: QueryDelegateCashRequest | PlainMessage<QueryDelegateCashRequest> | undefined): boolean;
}

/**
 * @generated from message blast.v1.chain.QueryDelegateCashResponse
 */
export declare class QueryDelegateCashResponse extends Message<QueryDelegateCashResponse> {
  /**
   * @generated from field: repeated blast.v1.chain.Delegate delegates = 1;
   */
  delegates: Delegate[];

  constructor(data?: PartialMessage<QueryDelegateCashResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.chain.QueryDelegateCashResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryDelegateCashResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryDelegateCashResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryDelegateCashResponse;

  static equals(a: QueryDelegateCashResponse | PlainMessage<QueryDelegateCashResponse> | undefined, b: QueryDelegateCashResponse | PlainMessage<QueryDelegateCashResponse> | undefined): boolean;
}

/**
 * @generated from message blast.v1.chain.QueryStakingContractAddressRequest
 */
export declare class QueryStakingContractAddressRequest extends Message<QueryStakingContractAddressRequest> {
  /**
   * @generated from field: string address = 1;
   */
  address: string;

  constructor(data?: PartialMessage<QueryStakingContractAddressRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.chain.QueryStakingContractAddressRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryStakingContractAddressRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryStakingContractAddressRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryStakingContractAddressRequest;

  static equals(a: QueryStakingContractAddressRequest | PlainMessage<QueryStakingContractAddressRequest> | undefined, b: QueryStakingContractAddressRequest | PlainMessage<QueryStakingContractAddressRequest> | undefined): boolean;
}

/**
 * @generated from message blast.v1.chain.QueryStakingContractAddressResponse
 */
export declare class QueryStakingContractAddressResponse extends Message<QueryStakingContractAddressResponse> {
  /**
   * @generated from field: string contract_address = 1;
   */
  contractAddress: string;

  constructor(data?: PartialMessage<QueryStakingContractAddressResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.chain.QueryStakingContractAddressResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryStakingContractAddressResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryStakingContractAddressResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryStakingContractAddressResponse;

  static equals(a: QueryStakingContractAddressResponse | PlainMessage<QueryStakingContractAddressResponse> | undefined, b: QueryStakingContractAddressResponse | PlainMessage<QueryStakingContractAddressResponse> | undefined): boolean;
}

/**
 * @generated from message blast.v1.chain.QueryStakingAmountRequest
 */
export declare class QueryStakingAmountRequest extends Message<QueryStakingAmountRequest> {
  /**
   * @generated from field: string address = 1;
   */
  address: string;

  constructor(data?: PartialMessage<QueryStakingAmountRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.chain.QueryStakingAmountRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryStakingAmountRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryStakingAmountRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryStakingAmountRequest;

  static equals(a: QueryStakingAmountRequest | PlainMessage<QueryStakingAmountRequest> | undefined, b: QueryStakingAmountRequest | PlainMessage<QueryStakingAmountRequest> | undefined): boolean;
}

/**
 * @generated from message blast.v1.chain.QueryStakingAmountResponse
 */
export declare class QueryStakingAmountResponse extends Message<QueryStakingAmountResponse> {
  /**
   * @generated from field: string staking_amount = 1;
   */
  stakingAmount: string;

  constructor(data?: PartialMessage<QueryStakingAmountResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.chain.QueryStakingAmountResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryStakingAmountResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryStakingAmountResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryStakingAmountResponse;

  static equals(a: QueryStakingAmountResponse | PlainMessage<QueryStakingAmountResponse> | undefined, b: QueryStakingAmountResponse | PlainMessage<QueryStakingAmountResponse> | undefined): boolean;
}

/**
 * @generated from message blast.v1.chain.QueryOwnerOfRequest
 */
export declare class QueryOwnerOfRequest extends Message<QueryOwnerOfRequest> {
  /**
   * @generated from field: string contract_address = 1;
   */
  contractAddress: string;

  /**
   * @generated from field: string token_id = 2;
   */
  tokenId: string;

  constructor(data?: PartialMessage<QueryOwnerOfRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.chain.QueryOwnerOfRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryOwnerOfRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryOwnerOfRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryOwnerOfRequest;

  static equals(a: QueryOwnerOfRequest | PlainMessage<QueryOwnerOfRequest> | undefined, b: QueryOwnerOfRequest | PlainMessage<QueryOwnerOfRequest> | undefined): boolean;
}

/**
 * @generated from message blast.v1.chain.QueryOwnerOfResponse
 */
export declare class QueryOwnerOfResponse extends Message<QueryOwnerOfResponse> {
  /**
   * @generated from field: string owner_address = 1;
   */
  ownerAddress: string;

  constructor(data?: PartialMessage<QueryOwnerOfResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.chain.QueryOwnerOfResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryOwnerOfResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryOwnerOfResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryOwnerOfResponse;

  static equals(a: QueryOwnerOfResponse | PlainMessage<QueryOwnerOfResponse> | undefined, b: QueryOwnerOfResponse | PlainMessage<QueryOwnerOfResponse> | undefined): boolean;
}

/**
 * @generated from message blast.v1.chain.QueryBalanceOfRequest
 */
export declare class QueryBalanceOfRequest extends Message<QueryBalanceOfRequest> {
  /**
   * @generated from field: string contract_address = 1;
   */
  contractAddress: string;

  /**
   * @generated from field: string owner_address = 2;
   */
  ownerAddress: string;

  constructor(data?: PartialMessage<QueryBalanceOfRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.chain.QueryBalanceOfRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryBalanceOfRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryBalanceOfRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryBalanceOfRequest;

  static equals(a: QueryBalanceOfRequest | PlainMessage<QueryBalanceOfRequest> | undefined, b: QueryBalanceOfRequest | PlainMessage<QueryBalanceOfRequest> | undefined): boolean;
}

/**
 * @generated from message blast.v1.chain.QueryBalanceOfResponse
 */
export declare class QueryBalanceOfResponse extends Message<QueryBalanceOfResponse> {
  /**
   * @generated from field: uint32 balance = 1;
   */
  balance: number;

  constructor(data?: PartialMessage<QueryBalanceOfResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.chain.QueryBalanceOfResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): QueryBalanceOfResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): QueryBalanceOfResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): QueryBalanceOfResponse;

  static equals(a: QueryBalanceOfResponse | PlainMessage<QueryBalanceOfResponse> | undefined, b: QueryBalanceOfResponse | PlainMessage<QueryBalanceOfResponse> | undefined): boolean;
}

/**
 * @generated from message blast.v1.chain.Delegate
 */
export declare class Delegate extends Message<Delegate> {
  /**
   * @generated from field: blast.v1.chain.DelegationType type = 1;
   */
  type: DelegationType;

  /**
   * @generated from field: string from = 2;
   */
  from: string;

  /**
   * @generated from field: string to = 3;
   */
  to: string;

  /**
   * @generated from field: string contract = 4;
   */
  contract: string;

  /**
   * @generated from field: string token_id = 5;
   */
  tokenId: string;

  constructor(data?: PartialMessage<Delegate>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.chain.Delegate";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Delegate;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Delegate;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Delegate;

  static equals(a: Delegate | PlainMessage<Delegate> | undefined, b: Delegate | PlainMessage<Delegate> | undefined): boolean;
}

/**
 * @generated from message blast.v1.chain.Receipt
 */
export declare class Receipt extends Message<Receipt> {
  /**
   * @generated from field: blast.v1.chain.ReceiptStatus status = 1;
   */
  status: ReceiptStatus;

  /**
   * @generated from field: string transaction_hash = 2;
   */
  transactionHash: string;

  /**
   * @generated from field: string block_hash = 3;
   */
  blockHash: string;

  /**
   * @generated from field: string block_number = 4;
   */
  blockNumber: string;

  /**
   * @generated from field: uint64 cumulative_gas_used = 5;
   */
  cumulativeGasUsed: bigint;

  /**
   * @generated from field: uint64 gas_used = 6;
   */
  gasUsed: bigint;

  /**
   * @generated from field: string contract_address = 7;
   */
  contractAddress: string;

  constructor(data?: PartialMessage<Receipt>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.chain.Receipt";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Receipt;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Receipt;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Receipt;

  static equals(a: Receipt | PlainMessage<Receipt> | undefined, b: Receipt | PlainMessage<Receipt> | undefined): boolean;
}

/**
 * @generated from message blast.v1.chain.MintScoreEvent
 */
export declare class MintScoreEvent extends Message<MintScoreEvent> {
  /**
   * @generated from field: optional blast.v1.chain.MintScoreEvent.ScoreCategory category = 1;
   */
  category?: MintScoreEvent_ScoreCategory;

  /**
   * @generated from field: optional uint64 score = 2;
   */
  score?: bigint;

  /**
   * @generated from field: optional string address = 3;
   */
  address?: string;

  /**
   * @generated from field: optional string token_id = 4;
   */
  tokenId?: string;

  constructor(data?: PartialMessage<MintScoreEvent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.chain.MintScoreEvent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MintScoreEvent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MintScoreEvent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MintScoreEvent;

  static equals(a: MintScoreEvent | PlainMessage<MintScoreEvent> | undefined, b: MintScoreEvent | PlainMessage<MintScoreEvent> | undefined): boolean;
}

/**
 * @generated from enum blast.v1.chain.MintScoreEvent.ScoreCategory
 */
export declare enum MintScoreEvent_ScoreCategory {
  /**
   * @generated from enum value: SCORE_CATEGORY_UNSPECIFIED = 0;
   */
  SCORE_CATEGORY_UNSPECIFIED = 0,

  /**
   * @generated from enum value: SINGLE_PLAYER = 1;
   */
  SINGLE_PLAYER = 1,

  /**
   * @generated from enum value: MULTI_PLAYER = 2;
   */
  MULTI_PLAYER = 2,
}

/**
 * @generated from message blast.v1.chain.DeployTBAAndMintProtoShipEvent
 */
export declare class DeployTBAAndMintProtoShipEvent extends Message<DeployTBAAndMintProtoShipEvent> {
  /**
   * @generated from field: string profile_tba = 1;
   */
  profileTba: string;

  /**
   * @generated from field: string token_id = 2;
   */
  tokenId: string;

  constructor(data?: PartialMessage<DeployTBAAndMintProtoShipEvent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "blast.v1.chain.DeployTBAAndMintProtoShipEvent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): DeployTBAAndMintProtoShipEvent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): DeployTBAAndMintProtoShipEvent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): DeployTBAAndMintProtoShipEvent;

  static equals(a: DeployTBAAndMintProtoShipEvent | PlainMessage<DeployTBAAndMintProtoShipEvent> | undefined, b: DeployTBAAndMintProtoShipEvent | PlainMessage<DeployTBAAndMintProtoShipEvent> | undefined): boolean;
}


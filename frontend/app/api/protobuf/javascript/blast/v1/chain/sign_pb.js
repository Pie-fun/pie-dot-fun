// @generated by protoc-gen-es v1.6.0
// @generated from file blast/v1/chain/sign.proto (package blast.v1.chain, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message blast.v1.chain.SignMessageRequest
 */
export const SignMessageRequest = proto3.makeMessageType(
  "blast.v1.chain.SignMessageRequest",
  () => [
    { no: 1, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message blast.v1.chain.SignatureResponse
 */
export const SignatureResponse = proto3.makeMessageType(
  "blast.v1.chain.SignatureResponse",
  () => [
    { no: 1, name: "signature", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "message", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message blast.v1.chain.SignatureTypedResponse
 */
export const SignatureTypedResponse = proto3.makeMessageType(
  "blast.v1.chain.SignatureTypedResponse",
  () => [
    { no: 1, name: "signature", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "message", kind: "map", K: 9 /* ScalarType.STRING */, V: {kind: "scalar", T: 9 /* ScalarType.STRING */} },
  ],
);

/**
 * @generated from message blast.v1.chain.MintAndCreateSquareParams
 */
export const MintAndCreateSquareParams = proto3.makeMessageType(
  "blast.v1.chain.MintAndCreateSquareParams",
  () => [
    { no: 1, name: "user", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "minStaking", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "signatureId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "timestamp", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 5, name: "nonce", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message blast.v1.chain.SignMintSquareRequest
 */
export const SignMintSquareRequest = proto3.makeMessageType(
  "blast.v1.chain.SignMintSquareRequest",
  () => [
    { no: 1, name: "params", kind: "message", T: MintAndCreateSquareParams },
  ],
);

/**
 * @generated from message blast.v1.chain.SignMintSquareResponse
 */
export const SignMintSquareResponse = proto3.makeMessageType(
  "blast.v1.chain.SignMintSquareResponse",
  () => [
    { no: 1, name: "signature", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "params", kind: "message", T: MintAndCreateSquareParams },
  ],
);

/**
 * @generated from message blast.v1.chain.JoinSquareParams
 */
export const JoinSquareParams = proto3.makeMessageType(
  "blast.v1.chain.JoinSquareParams",
  () => [
    { no: 1, name: "user", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "squareId", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "timestamp", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 4, name: "nonce", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message blast.v1.chain.SignJoinSquareRequest
 */
export const SignJoinSquareRequest = proto3.makeMessageType(
  "blast.v1.chain.SignJoinSquareRequest",
  () => [
    { no: 1, name: "params", kind: "message", T: JoinSquareParams },
  ],
);

/**
 * @generated from message blast.v1.chain.SignJoinSquareResponse
 */
export const SignJoinSquareResponse = proto3.makeMessageType(
  "blast.v1.chain.SignJoinSquareResponse",
  () => [
    { no: 1, name: "signature", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "params", kind: "message", T: JoinSquareParams },
  ],
);

/**
 * @generated from message blast.v1.chain.TransferSquareParams
 */
export const TransferSquareParams = proto3.makeMessageType(
  "blast.v1.chain.TransferSquareParams",
  () => [
    { no: 1, name: "user", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "from", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "to", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 4, name: "timestamp", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 5, name: "nonce", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message blast.v1.chain.SignTransferSquareRequest
 */
export const SignTransferSquareRequest = proto3.makeMessageType(
  "blast.v1.chain.SignTransferSquareRequest",
  () => [
    { no: 1, name: "params", kind: "message", T: TransferSquareParams },
  ],
);

/**
 * @generated from message blast.v1.chain.SignTransferSquareResponse
 */
export const SignTransferSquareResponse = proto3.makeMessageType(
  "blast.v1.chain.SignTransferSquareResponse",
  () => [
    { no: 1, name: "signature", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "params", kind: "message", T: TransferSquareParams },
  ],
);

/**
 * @generated from message blast.v1.chain.UploadScoreParams
 */
export const UploadScoreParams = proto3.makeMessageType(
  "blast.v1.chain.UploadScoreParams",
  () => [
    { no: 1, name: "player", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "gameCode", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 3, name: "squareIdOrZero", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 4, name: "score", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 5, name: "gameId", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "timestamp", kind: "scalar", T: 13 /* ScalarType.UINT32 */ },
    { no: 7, name: "nonce", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message blast.v1.chain.SignUploadScoreRequest
 */
export const SignUploadScoreRequest = proto3.makeMessageType(
  "blast.v1.chain.SignUploadScoreRequest",
  () => [
    { no: 1, name: "params", kind: "message", T: UploadScoreParams },
  ],
);

/**
 * @generated from message blast.v1.chain.SignUploadScoreResponse
 */
export const SignUploadScoreResponse = proto3.makeMessageType(
  "blast.v1.chain.SignUploadScoreResponse",
  () => [
    { no: 1, name: "signature", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "params", kind: "message", T: UploadScoreParams },
  ],
);


// @generated by protoc-gen-es v1.6.0
// @generated from file pie-dot-fun/v1/chain/watch.proto (package piedotfun.v1.chain, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum piedotfun.v1.chain.BasketEventExtraInfoKey
 */
export declare enum BasketEventExtraInfoKey {
  /**
   * @generated from enum value: BASKET_EXTRA_INFO_KEY_UNSPECIFIED = 0;
   */
  BASKET_EXTRA_INFO_KEY_UNSPECIFIED = 0,

  /**
   * @generated from enum value: BASKET_EXTRA_INFO_KEY_VALUE_USDC = 1;
   */
  BASKET_EXTRA_INFO_KEY_VALUE_USDC = 1,

  /**
   * @generated from enum value: BASKET_EXTRA_INFO_KEY_VALUE_SOL = 2;
   */
  BASKET_EXTRA_INFO_KEY_VALUE_SOL = 2,
}

/**
 * BasketComponent represents a component of a basket with its mint and ratio
 *
 * @generated from message piedotfun.v1.chain.BasketComponent
 */
export declare class BasketComponent extends Message<BasketComponent> {
  /**
   * solana.PublicKey
   *
   * @generated from field: string mint = 1;
   */
  mint: string;

  /**
   * @generated from field: string ratio = 2;
   */
  ratio: string;

  constructor(data?: PartialMessage<BasketComponent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "piedotfun.v1.chain.BasketComponent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BasketComponent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BasketComponent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BasketComponent;

  static equals(a: BasketComponent | PlainMessage<BasketComponent> | undefined, b: BasketComponent | PlainMessage<BasketComponent> | undefined): boolean;
}

/**
 * CreateBasketEvent represents the event of creating a new basket
 *
 * @generated from message piedotfun.v1.chain.CreateBasketEvent
 */
export declare class CreateBasketEvent extends Message<CreateBasketEvent> {
  /**
   * @generated from field: uint64 basket_id = 1;
   */
  basketId: bigint;

  /**
   * @generated from field: string name = 2;
   */
  name: string;

  /**
   * @generated from field: string symbol = 3;
   */
  symbol: string;

  /**
   * @generated from field: string uri = 4;
   */
  uri: string;

  /**
   * solana.PublicKey
   *
   * @generated from field: string creator = 5;
   */
  creator: string;

  /**
   * solana.PublicKey
   *
   * @generated from field: string mint = 6;
   */
  mint: string;

  /**
   * @generated from field: repeated piedotfun.v1.chain.BasketComponent components = 7;
   */
  components: BasketComponent[];

  constructor(data?: PartialMessage<CreateBasketEvent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "piedotfun.v1.chain.CreateBasketEvent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreateBasketEvent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreateBasketEvent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreateBasketEvent;

  static equals(a: CreateBasketEvent | PlainMessage<CreateBasketEvent> | undefined, b: CreateBasketEvent | PlainMessage<CreateBasketEvent> | undefined): boolean;
}

/**
 * StartRebalancingEvent represents the event of starting basket rebalancing
 *
 * @generated from message piedotfun.v1.chain.StartRebalancingEvent
 */
export declare class StartRebalancingEvent extends Message<StartRebalancingEvent> {
  /**
   * @generated from field: uint64 basket_id = 1;
   */
  basketId: bigint;

  /**
   * solana.PublicKey
   *
   * @generated from field: string mint = 2;
   */
  mint: string;

  /**
   * @generated from field: int64 timestamp = 3;
   */
  timestamp: bigint;

  constructor(data?: PartialMessage<StartRebalancingEvent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "piedotfun.v1.chain.StartRebalancingEvent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StartRebalancingEvent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StartRebalancingEvent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StartRebalancingEvent;

  static equals(a: StartRebalancingEvent | PlainMessage<StartRebalancingEvent> | undefined, b: StartRebalancingEvent | PlainMessage<StartRebalancingEvent> | undefined): boolean;
}

/**
 * StopRebalancingEvent represents the event of stopping basket rebalancing
 *
 * @generated from message piedotfun.v1.chain.StopRebalancingEvent
 */
export declare class StopRebalancingEvent extends Message<StopRebalancingEvent> {
  /**
   * @generated from field: uint64 basket_id = 1;
   */
  basketId: bigint;

  /**
   * solana.PublicKey
   *
   * @generated from field: string mint = 2;
   */
  mint: string;

  /**
   * @generated from field: repeated piedotfun.v1.chain.BasketComponent components = 3;
   */
  components: BasketComponent[];

  /**
   * @generated from field: int64 timestamp = 4;
   */
  timestamp: bigint;

  constructor(data?: PartialMessage<StopRebalancingEvent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "piedotfun.v1.chain.StopRebalancingEvent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StopRebalancingEvent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StopRebalancingEvent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StopRebalancingEvent;

  static equals(a: StopRebalancingEvent | PlainMessage<StopRebalancingEvent> | undefined, b: StopRebalancingEvent | PlainMessage<StopRebalancingEvent> | undefined): boolean;
}

/**
 * RedeemBasketTokenEvent represents the event of redeeming basket tokens
 *
 * @generated from message piedotfun.v1.chain.RedeemBasketTokenEvent
 */
export declare class RedeemBasketTokenEvent extends Message<RedeemBasketTokenEvent> {
  /**
   * @generated from field: uint64 basket_id = 1;
   */
  basketId: bigint;

  /**
   * solana.PublicKey
   *
   * @generated from field: string user = 2;
   */
  user: string;

  /**
   * solana.PublicKey
   *
   * @generated from field: string basket_mint = 3;
   */
  basketMint: string;

  /**
   * @generated from field: uint64 amount = 4;
   */
  amount: bigint;

  constructor(data?: PartialMessage<RedeemBasketTokenEvent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "piedotfun.v1.chain.RedeemBasketTokenEvent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RedeemBasketTokenEvent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RedeemBasketTokenEvent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RedeemBasketTokenEvent;

  static equals(a: RedeemBasketTokenEvent | PlainMessage<RedeemBasketTokenEvent> | undefined, b: RedeemBasketTokenEvent | PlainMessage<RedeemBasketTokenEvent> | undefined): boolean;
}

/**
 * MintBasketTokenEvent represents the event of minting basket tokens
 *
 * @generated from message piedotfun.v1.chain.MintBasketTokenEvent
 */
export declare class MintBasketTokenEvent extends Message<MintBasketTokenEvent> {
  /**
   * @generated from field: uint64 basket_id = 1;
   */
  basketId: bigint;

  /**
   * solana.PublicKey
   *
   * @generated from field: string user = 2;
   */
  user: string;

  /**
   * solana.PublicKey
   *
   * @generated from field: string basket_mint = 3;
   */
  basketMint: string;

  /**
   * @generated from field: uint64 amount = 4;
   */
  amount: bigint;

  constructor(data?: PartialMessage<MintBasketTokenEvent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "piedotfun.v1.chain.MintBasketTokenEvent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): MintBasketTokenEvent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): MintBasketTokenEvent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): MintBasketTokenEvent;

  static equals(a: MintBasketTokenEvent | PlainMessage<MintBasketTokenEvent> | undefined, b: MintBasketTokenEvent | PlainMessage<MintBasketTokenEvent> | undefined): boolean;
}

/**
 * TransferBasketEvent represents the event of transferring basket tokens
 *
 * @generated from message piedotfun.v1.chain.TransferBasketEvent
 */
export declare class TransferBasketEvent extends Message<TransferBasketEvent> {
  /**
   * solana.PublicKey
   *
   * @generated from field: string basket_mint = 1;
   */
  basketMint: string;

  /**
   * solana.PublicKey
   *
   * @generated from field: string from = 2;
   */
  from: string;

  /**
   * solana.PublicKey
   *
   * @generated from field: string to = 3;
   */
  to: string;

  /**
   * @generated from field: uint64 amount = 4;
   */
  amount: bigint;

  constructor(data?: PartialMessage<TransferBasketEvent>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "piedotfun.v1.chain.TransferBasketEvent";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): TransferBasketEvent;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): TransferBasketEvent;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): TransferBasketEvent;

  static equals(a: TransferBasketEvent | PlainMessage<TransferBasketEvent> | undefined, b: TransferBasketEvent | PlainMessage<TransferBasketEvent> | undefined): boolean;
}


// @generated by protoc-gen-es v1.6.0
// @generated from file pie-dot-fun/v1/chain/command.proto (package piedotfun.v1.chain, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message piedotfun.v1.chain.RebalanceCommand
 */
export declare class RebalanceCommand extends Message<RebalanceCommand> {
  /**
   * @generated from oneof piedotfun.v1.chain.RebalanceCommand.strategy
   */
  strategy: {
    /**
     * @generated from field: piedotfun.v1.chain.RebalanceCommand.EqualMarketCapWeight equal_weight = 1;
     */
    value: RebalanceCommand_EqualMarketCapWeight;
    case: "equalWeight";
  } | {
    /**
     * @generated from field: piedotfun.v1.chain.RebalanceCommand.ManualMarketCapWeight manual_weight = 2;
     */
    value: RebalanceCommand_ManualMarketCapWeight;
    case: "manualWeight";
  } | {
    /**
     * @generated from field: piedotfun.v1.chain.RebalanceCommand.Trade trade = 3;
     */
    value: RebalanceCommand_Trade;
    case: "trade";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<RebalanceCommand>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "piedotfun.v1.chain.RebalanceCommand";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RebalanceCommand;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RebalanceCommand;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RebalanceCommand;

  static equals(a: RebalanceCommand | PlainMessage<RebalanceCommand> | undefined, b: RebalanceCommand | PlainMessage<RebalanceCommand> | undefined): boolean;
}

/**
 * Equal Market Cap Weight Strategy
 *
 * @generated from message piedotfun.v1.chain.RebalanceCommand.EqualMarketCapWeight
 */
export declare class RebalanceCommand_EqualMarketCapWeight extends Message<RebalanceCommand_EqualMarketCapWeight> {
  constructor(data?: PartialMessage<RebalanceCommand_EqualMarketCapWeight>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "piedotfun.v1.chain.RebalanceCommand.EqualMarketCapWeight";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RebalanceCommand_EqualMarketCapWeight;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RebalanceCommand_EqualMarketCapWeight;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RebalanceCommand_EqualMarketCapWeight;

  static equals(a: RebalanceCommand_EqualMarketCapWeight | PlainMessage<RebalanceCommand_EqualMarketCapWeight> | undefined, b: RebalanceCommand_EqualMarketCapWeight | PlainMessage<RebalanceCommand_EqualMarketCapWeight> | undefined): boolean;
}

/**
 * Manual Market Cap Weight Strategy
 *
 * @generated from message piedotfun.v1.chain.RebalanceCommand.ManualMarketCapWeight
 */
export declare class RebalanceCommand_ManualMarketCapWeight extends Message<RebalanceCommand_ManualMarketCapWeight> {
  /**
   * sum of weights should be 1
   *
   * @generated from field: repeated piedotfun.v1.chain.RebalanceCommand.ManualMarketCapWeight.Request requests = 1;
   */
  requests: RebalanceCommand_ManualMarketCapWeight_Request[];

  constructor(data?: PartialMessage<RebalanceCommand_ManualMarketCapWeight>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "piedotfun.v1.chain.RebalanceCommand.ManualMarketCapWeight";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RebalanceCommand_ManualMarketCapWeight;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RebalanceCommand_ManualMarketCapWeight;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RebalanceCommand_ManualMarketCapWeight;

  static equals(a: RebalanceCommand_ManualMarketCapWeight | PlainMessage<RebalanceCommand_ManualMarketCapWeight> | undefined, b: RebalanceCommand_ManualMarketCapWeight | PlainMessage<RebalanceCommand_ManualMarketCapWeight> | undefined): boolean;
}

/**
 * @generated from message piedotfun.v1.chain.RebalanceCommand.ManualMarketCapWeight.Request
 */
export declare class RebalanceCommand_ManualMarketCapWeight_Request extends Message<RebalanceCommand_ManualMarketCapWeight_Request> {
  /**
   * @generated from field: string fungible_token = 1;
   */
  fungibleToken: string;

  /**
   * Weigh limits: 0 - 1.0
   *
   * @generated from field: double weight = 2;
   */
  weight: number;

  constructor(data?: PartialMessage<RebalanceCommand_ManualMarketCapWeight_Request>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "piedotfun.v1.chain.RebalanceCommand.ManualMarketCapWeight.Request";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RebalanceCommand_ManualMarketCapWeight_Request;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RebalanceCommand_ManualMarketCapWeight_Request;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RebalanceCommand_ManualMarketCapWeight_Request;

  static equals(a: RebalanceCommand_ManualMarketCapWeight_Request | PlainMessage<RebalanceCommand_ManualMarketCapWeight_Request> | undefined, b: RebalanceCommand_ManualMarketCapWeight_Request | PlainMessage<RebalanceCommand_ManualMarketCapWeight_Request> | undefined): boolean;
}

/**
 * Trade Strategy
 *
 * @generated from message piedotfun.v1.chain.RebalanceCommand.Trade
 */
export declare class RebalanceCommand_Trade extends Message<RebalanceCommand_Trade> {
  /**
   * @generated from field: repeated piedotfun.v1.chain.RebalanceCommand.Trade.Request requests = 1;
   */
  requests: RebalanceCommand_Trade_Request[];

  constructor(data?: PartialMessage<RebalanceCommand_Trade>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "piedotfun.v1.chain.RebalanceCommand.Trade";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RebalanceCommand_Trade;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RebalanceCommand_Trade;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RebalanceCommand_Trade;

  static equals(a: RebalanceCommand_Trade | PlainMessage<RebalanceCommand_Trade> | undefined, b: RebalanceCommand_Trade | PlainMessage<RebalanceCommand_Trade> | undefined): boolean;
}

/**
 * @generated from message piedotfun.v1.chain.RebalanceCommand.Trade.Request
 */
export declare class RebalanceCommand_Trade_Request extends Message<RebalanceCommand_Trade_Request> {
  /**
   * @generated from field: string fungible_token = 1;
   */
  fungibleToken: string;

  /**
   * @generated from field: bool is_buy = 2;
   */
  isBuy: boolean;

  /**
   * @generated from field: string formatted_amount = 3;
   */
  formattedAmount: string;

  constructor(data?: PartialMessage<RebalanceCommand_Trade_Request>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "piedotfun.v1.chain.RebalanceCommand.Trade.Request";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RebalanceCommand_Trade_Request;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RebalanceCommand_Trade_Request;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RebalanceCommand_Trade_Request;

  static equals(a: RebalanceCommand_Trade_Request | PlainMessage<RebalanceCommand_Trade_Request> | undefined, b: RebalanceCommand_Trade_Request | PlainMessage<RebalanceCommand_Trade_Request> | undefined): boolean;
}

/**
 * @generated from message piedotfun.v1.chain.RebalanceBasketTokenRequest
 */
export declare class RebalanceBasketTokenRequest extends Message<RebalanceBasketTokenRequest> {
  /**
   * @generated from field: string basket_token = 1;
   */
  basketToken: string;

  /**
   * if false, it will perform a dry run.
   *
   * @generated from field: bool execute = 2;
   */
  execute: boolean;

  /**
   * @generated from field: piedotfun.v1.chain.RebalanceCommand command = 3;
   */
  command?: RebalanceCommand;

  /**
   * @generated from field: piedotfun.v1.chain.ExecutionOption execution_option = 4;
   */
  executionOption?: ExecutionOption;

  constructor(data?: PartialMessage<RebalanceBasketTokenRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "piedotfun.v1.chain.RebalanceBasketTokenRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RebalanceBasketTokenRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RebalanceBasketTokenRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RebalanceBasketTokenRequest;

  static equals(a: RebalanceBasketTokenRequest | PlainMessage<RebalanceBasketTokenRequest> | undefined, b: RebalanceBasketTokenRequest | PlainMessage<RebalanceBasketTokenRequest> | undefined): boolean;
}

/**
 * @generated from message piedotfun.v1.chain.RebalanceBasketTokenResponse
 */
export declare class RebalanceBasketTokenResponse extends Message<RebalanceBasketTokenResponse> {
  /**
   * @generated from field: string result_html = 1;
   */
  resultHtml: string;

  constructor(data?: PartialMessage<RebalanceBasketTokenResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "piedotfun.v1.chain.RebalanceBasketTokenResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RebalanceBasketTokenResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RebalanceBasketTokenResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RebalanceBasketTokenResponse;

  static equals(a: RebalanceBasketTokenResponse | PlainMessage<RebalanceBasketTokenResponse> | undefined, b: RebalanceBasketTokenResponse | PlainMessage<RebalanceBasketTokenResponse> | undefined): boolean;
}

/**
 * @generated from message piedotfun.v1.chain.ExecutionOption
 */
export declare class ExecutionOption extends Message<ExecutionOption> {
  /**
   * @generated from field: double sell_ratio_per_iteration = 1;
   */
  sellRatioPerIteration: number;

  /**
   * @generated from field: double slippage = 2;
   */
  slippage: number;

  /**
   * Exit condition
   *
   * @generated from field: int32 max_iteration_count = 3;
   */
  maxIterationCount: number;

  /**
   * @generated from field: double exit_remaining_execution_value = 4;
   */
  exitRemainingExecutionValue: number;

  /**
   * @generated from field: double exit_remaining_execution_value_ratio = 5;
   */
  exitRemainingExecutionValueRatio: number;

  constructor(data?: PartialMessage<ExecutionOption>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "piedotfun.v1.chain.ExecutionOption";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ExecutionOption;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ExecutionOption;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ExecutionOption;

  static equals(a: ExecutionOption | PlainMessage<ExecutionOption> | undefined, b: ExecutionOption | PlainMessage<ExecutionOption> | undefined): boolean;
}


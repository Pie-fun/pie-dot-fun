// @generated by protoc-gen-es v1.6.0
// @generated from file pie-dot-fun/v1/basket-token.proto (package piedotfun.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage, Timestamp } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { ChainType, Percentage, Quantity } from "./common_pb.js";

/**
 * @generated from enum piedotfun.v1.BasketTokenState
 */
export declare enum BasketTokenState {
  /**
   * @generated from enum value: BASKET_TOKEN_STATE_UNSPECIFIED = 0;
   */
  BASKET_TOKEN_STATE_UNSPECIFIED = 0,

  /**
   * 온체인 상에서만 생성되고, 아직 우리 서비스에서 리스팅은 되지 않은 상태
   *
   * @generated from enum value: CREATED = 1;
   */
  CREATED = 1,

  /**
   * 우리 서비스에서 리스팅된 상태
   *
   * @generated from enum value: LISTED = 2;
   */
  LISTED = 2,
}

/**
 * @generated from enum piedotfun.v1.TokenStrategy
 */
export declare enum TokenStrategy {
  /**
   * @generated from enum value: TOKEN_STRATEGY_UNSPECIFIED = 0;
   */
  TOKEN_STRATEGY_UNSPECIFIED = 0,

  /**
   * @generated from enum value: MARKET_CAP_WEIGHTED = 1;
   */
  MARKET_CAP_WEIGHTED = 1,

  /**
   * @generated from enum value: EQUAL_WEIGHTED = 2;
   */
  EQUAL_WEIGHTED = 2,

  /**
   * @generated from enum value: FACTOR_WEIGHTED = 3;
   */
  FACTOR_WEIGHTED = 3,

  /**
   * @generated from enum value: FUNDAMENTAL_WEIGHTED = 4;
   */
  FUNDAMENTAL_WEIGHTED = 4,

  /**
   * @generated from enum value: RISK_WEIGHTED = 5;
   */
  RISK_WEIGHTED = 5,

  /**
   * @generated from enum value: MOMENTUM_WEIGHTED = 6;
   */
  MOMENTUM_WEIGHTED = 6,

  /**
   * @generated from enum value: CUSTOM_WEIGHTED = 7;
   */
  CUSTOM_WEIGHTED = 7,
}

/**
 * @generated from enum piedotfun.v1.RebalanceFrequency
 */
export declare enum RebalanceFrequency {
  /**
   * @generated from enum value: REBALANCE_FREQUENCY_UNSPECIFIED = 0;
   */
  REBALANCE_FREQUENCY_UNSPECIFIED = 0,

  /**
   * @generated from enum value: MANUAL = 1;
   */
  MANUAL = 1,

  /**
   * @generated from enum value: DAILY = 2;
   */
  DAILY = 2,

  /**
   * @generated from enum value: WEEKLY = 3;
   */
  WEEKLY = 3,

  /**
   * @generated from enum value: MONTHLY = 4;
   */
  MONTHLY = 4,
}

/**
 * @generated from message piedotfun.v1.GetBasketTokenRequest
 */
export declare class GetBasketTokenRequest extends Message<GetBasketTokenRequest> {
  /**
   * The name of the basket token to retrieve.
   * Format : "basketTokens/{chain}/{token_address}"
   *
   * @generated from field: string basket_token = 1;
   */
  basketToken: string;

  constructor(data?: PartialMessage<GetBasketTokenRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "piedotfun.v1.GetBasketTokenRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetBasketTokenRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetBasketTokenRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetBasketTokenRequest;

  static equals(a: GetBasketTokenRequest | PlainMessage<GetBasketTokenRequest> | undefined, b: GetBasketTokenRequest | PlainMessage<GetBasketTokenRequest> | undefined): boolean;
}

/**
 * ListBasketTokensRequest payload
 * (-- api-linter: core::0158::request-page-token-field=disabled
 *     aip.dev/not-precedent: We need to do this because reasons. --)
 * (-- api-linter: core::0132::request-unknown-fields=disabled
 *     aip.dev/not-precedent: We really need this field because reasons. --)
 *
 * @generated from message piedotfun.v1.ListBasketTokensRequest
 */
export declare class ListBasketTokensRequest extends Message<ListBasketTokensRequest> {
  /**
   * The maximum number of basket tokens to return. The service may return fewer than
   * this value.
   * If unspecified, at most 50 rows will be returned.
   * The maximum value is 1024; values above 1024 will be coerced to 1024.
   *
   * @generated from field: int32 page_size = 1;
   */
  pageSize: number;

  /**
   * Token of the page to retrieve. If not specified, the first
   * page of results will be returned. Use the value obtained from
   * `next_page_token` in the previous response in order to request
   * the next page of results.
   *
   * When paginating, all other parameters provided to `ListBasketTokens` must match
   * the call that provided the page token.
   *
   * @generated from field: string page_token = 2;
   */
  pageToken: string;

  /**
   * Available Sequence and Operator
   * * name
   *   * `=`
   * * chain
   *   * `=`
   * * display_name
   *   * `=`
   * * symbol
   *   * `=`
   * * state
   *   * `=` (CREATED, LISTED)
   * * onchain_id
   *   * `=`
   * * market_cap_sol
   *   * `=`, `>`, `<`, `>=`, `<=`
   * * market_cap_usdc
   *   * `=`, `>`, `<`, `>=`, `<=`
   *
   * Examples
   * * name="basketTokens/SOLANA/FZ4MT1HYJHd9GK8D5mJ9f3r7irLaDL5NxBNLjGqrLqs9"
   * * chain=SOLANA
   * * symbol="MURAD"
   * * state=LISTED
   * * onchain_id="10"
   * * market_cap_sol>=1000000
   *
   * @generated from field: string filter = 3;
   */
  filter: string;

  /**
   * One or more fields to compare and use to sort the output. (optional)
   * Default order for a field is descending by id
   * To specify ascending or descending order, append " asc" or " desc" to the field name. If not specified, the order is ascending.
   *
   * Reference
   * * https://google.aip.dev/132#ordering.
   *
   * Supported Fields
   * * "create_time", "market_cap_sol", "market_cap_usdc"
   *
   * Examples
   * * order_by=create_time desc
   * * order_by=market_cap_sol desc
   *
   * @generated from field: string order_by = 4;
   */
  orderBy: string;

  constructor(data?: PartialMessage<ListBasketTokensRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "piedotfun.v1.ListBasketTokensRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListBasketTokensRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListBasketTokensRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListBasketTokensRequest;

  static equals(a: ListBasketTokensRequest | PlainMessage<ListBasketTokensRequest> | undefined, b: ListBasketTokensRequest | PlainMessage<ListBasketTokensRequest> | undefined): boolean;
}

/**
 * @generated from message piedotfun.v1.ListBasketTokensResponse
 */
export declare class ListBasketTokensResponse extends Message<ListBasketTokensResponse> {
  /**
   * @generated from field: repeated piedotfun.v1.BasketToken basket_tokens = 1;
   */
  basketTokens: BasketToken[];

  /**
   * Pagination token used to retrieve the next page of results.
   * Pass the content of this string as the `page_token` attribute of
   * the next request. `next_page_token` is not returned for the last
   * page.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  constructor(data?: PartialMessage<ListBasketTokensResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "piedotfun.v1.ListBasketTokensResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListBasketTokensResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListBasketTokensResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListBasketTokensResponse;

  static equals(a: ListBasketTokensResponse | PlainMessage<ListBasketTokensResponse> | undefined, b: ListBasketTokensResponse | PlainMessage<ListBasketTokensResponse> | undefined): boolean;
}

/**
 * @generated from message piedotfun.v1.ListRebalancingHistoriesRequest
 */
export declare class ListRebalancingHistoriesRequest extends Message<ListRebalancingHistoriesRequest> {
  /**
   * The name of the basket token to retrieve.
   * Format : "basketTokens/{chain}/{token_address}"
   *
   * @generated from field: string basket_token = 1;
   */
  basketToken: string;

  /**
   * The maximum number of histories to return. The service may return fewer than
   * this value.
   * If unspecified, at most 50 rows will be returned.
   * The maximum value is 1024; values above 1024 will be coerced to 1024.
   *
   * @generated from field: int32 page_size = 2;
   */
  pageSize: number;

  /**
   * Token of the page to retrieve. If not specified, the first
   * page of results will be returned. Use the value obtained from
   * `next_page_token` in the previous response in order to request
   * the next page of results.
   *
   * When paginating, all other parameters provided to `ListUsers` must match
   * the call that provided the page token.
   *
   * @generated from field: string page_token = 3;
   */
  pageToken: string;

  /**
   * Available Sequence and Operator
   * * components_changed
   *   * `negation`
   *
   * Examples
   * * filter=components_changed
   * * filter=NOT components_changed
   *
   * @generated from field: string filter = 4;
   */
  filter: string;

  constructor(data?: PartialMessage<ListRebalancingHistoriesRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "piedotfun.v1.ListRebalancingHistoriesRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListRebalancingHistoriesRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListRebalancingHistoriesRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListRebalancingHistoriesRequest;

  static equals(a: ListRebalancingHistoriesRequest | PlainMessage<ListRebalancingHistoriesRequest> | undefined, b: ListRebalancingHistoriesRequest | PlainMessage<ListRebalancingHistoriesRequest> | undefined): boolean;
}

/**
 * @generated from message piedotfun.v1.ListRebalancingHistoriesResponse
 */
export declare class ListRebalancingHistoriesResponse extends Message<ListRebalancingHistoriesResponse> {
  /**
   * @generated from field: repeated piedotfun.v1.BasketTokenRebanlancingHistory rebalancing_histories = 1;
   */
  rebalancingHistories: BasketTokenRebanlancingHistory[];

  /**
   * Pagination token used to retrieve the next page of results.
   * Pass the content of this string as the `page_token` attribute of
   * the next request. `next_page_token` is not returned for the last
   * page.
   *
   * @generated from field: string next_page_token = 2;
   */
  nextPageToken: string;

  constructor(data?: PartialMessage<ListRebalancingHistoriesResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "piedotfun.v1.ListRebalancingHistoriesResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListRebalancingHistoriesResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListRebalancingHistoriesResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListRebalancingHistoriesResponse;

  static equals(a: ListRebalancingHistoriesResponse | PlainMessage<ListRebalancingHistoriesResponse> | undefined, b: ListRebalancingHistoriesResponse | PlainMessage<ListRebalancingHistoriesResponse> | undefined): boolean;
}

/**
 * @generated from message piedotfun.v1.BasketToken
 */
export declare class BasketToken extends Message<BasketToken> {
  /**
   * Format : "basketTokens/{chain}/{token_address}"
   *
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: piedotfun.v1.ChainType chain = 2;
   */
  chain: ChainType;

  /**
   * @generated from field: string address = 3;
   */
  address: string;

  /**
   * @generated from field: string display_name = 4;
   */
  displayName: string;

  /**
   * @generated from field: string symbol = 5;
   */
  symbol: string;

  /**
   * @generated from field: string icon_image_uri = 6;
   */
  iconImageUri: string;

  /**
   * @generated from field: string description = 7;
   */
  description: string;

  /**
   * @generated from field: string one_line_description = 8;
   */
  oneLineDescription: string;

  /**
   * @generated from field: piedotfun.v1.BasketTokenState state = 9;
   */
  state: BasketTokenState;

  /**
   * @generated from field: piedotfun.v1.TokenStrategy strategy = 10;
   */
  strategy: TokenStrategy;

  /**
   * @generated from field: piedotfun.v1.RebalanceFrequency rebalance_frequency = 11;
   */
  rebalanceFrequency: RebalanceFrequency;

  /**
   * @generated from field: bool is_rebalancing = 12;
   */
  isRebalancing: boolean;

  /**
   * @generated from field: repeated piedotfun.v1.Component components = 15;
   */
  components: Component[];

  /**
   * The creator of the basket token
   * Format : "users/{user_id}"
   *
   * @generated from field: string creator = 16;
   */
  creator: string;

  /**
   * @generated from field: google.protobuf.Timestamp create_time = 17;
   */
  createTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp expire_time = 18;
   */
  expireTime?: Timestamp;

  /**
   * @generated from field: google.protobuf.Timestamp last_rebalance_time = 19;
   */
  lastRebalanceTime?: Timestamp;

  /**
   * @generated from field: piedotfun.v1.Quantity total_supply = 20;
   */
  totalSupply?: Quantity;

  /**
   * @generated from field: uint64 total_holders = 21;
   */
  totalHolders: bigint;

  /**
   * @generated from field: string onchain_id = 22;
   */
  onchainId: string;

  constructor(data?: PartialMessage<BasketToken>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "piedotfun.v1.BasketToken";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BasketToken;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BasketToken;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BasketToken;

  static equals(a: BasketToken | PlainMessage<BasketToken> | undefined, b: BasketToken | PlainMessage<BasketToken> | undefined): boolean;
}

/**
 * @generated from message piedotfun.v1.Component
 */
export declare class Component extends Message<Component> {
  /**
   * Format : "fungibleTokens/{chain}/{token_address}"
   *
   * @generated from field: string fungible_token = 1;
   */
  fungibleToken: string;

  /**
   * @generated from field: piedotfun.v1.ChainType chain = 2;
   */
  chain: ChainType;

  /**
   * @generated from field: string address = 3;
   */
  address: string;

  /**
   * The weight of the component in the basket token.
   * The weight is a percentage of the total value within the basket token. (0.0 ~ 100.0 %)
   *
   * @generated from field: piedotfun.v1.Percentage weight = 4;
   */
  weight?: Percentage;

  constructor(data?: PartialMessage<Component>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "piedotfun.v1.Component";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Component;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Component;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Component;

  static equals(a: Component | PlainMessage<Component> | undefined, b: Component | PlainMessage<Component> | undefined): boolean;
}

/**
 * @generated from message piedotfun.v1.BasketTokenRebanlancingHistory
 */
export declare class BasketTokenRebanlancingHistory extends Message<BasketTokenRebanlancingHistory> {
  /**
   * @generated from field: repeated string tx_signatures = 1;
   */
  txSignatures: string[];

  /**
   * @generated from field: repeated piedotfun.v1.Component before_components = 2;
   */
  beforeComponents: Component[];

  /**
   * @generated from field: repeated piedotfun.v1.Component after_components = 3;
   */
  afterComponents: Component[];

  /**
   * @generated from field: google.protobuf.Timestamp rebalance_time = 4;
   */
  rebalanceTime?: Timestamp;

  /**
   * @generated from field: bool components_changed = 5;
   */
  componentsChanged: boolean;

  constructor(data?: PartialMessage<BasketTokenRebanlancingHistory>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "piedotfun.v1.BasketTokenRebanlancingHistory";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BasketTokenRebanlancingHistory;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BasketTokenRebanlancingHistory;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BasketTokenRebanlancingHistory;

  static equals(a: BasketTokenRebanlancingHistory | PlainMessage<BasketTokenRebanlancingHistory> | undefined, b: BasketTokenRebanlancingHistory | PlainMessage<BasketTokenRebanlancingHistory> | undefined): boolean;
}


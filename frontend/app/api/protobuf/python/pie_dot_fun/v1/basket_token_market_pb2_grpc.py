# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from pie_dot_fun.v1 import basket_token_market_pb2 as pie__dot__fun_dot_v1_dot_basket__token__market__pb2


class BasketTokenMarketServiceStub(object):
    """BasketTokenMarketService contains the function to interact with the Market of the spacebar
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateBasketTokenMarket = channel.unary_unary(
                '/piedotfun.v1.BasketTokenMarketService/CreateBasketTokenMarket',
                request_serializer=pie__dot__fun_dot_v1_dot_basket__token__market__pb2.CreateBasketTokenMarketRequest.SerializeToString,
                response_deserializer=pie__dot__fun_dot_v1_dot_basket__token__market__pb2.BasketTokenMarket.FromString,
                )
        self.CustomCreateBasketTokenMarket = channel.unary_unary(
                '/piedotfun.v1.BasketTokenMarketService/CustomCreateBasketTokenMarket',
                request_serializer=pie__dot__fun_dot_v1_dot_basket__token__market__pb2.CustomCreateBasketTokenMarketRequest.SerializeToString,
                response_deserializer=pie__dot__fun_dot_v1_dot_basket__token__market__pb2.BasketTokenMarket.FromString,
                )
        self.GetBasketTokenMarket = channel.unary_unary(
                '/piedotfun.v1.BasketTokenMarketService/GetBasketTokenMarket',
                request_serializer=pie__dot__fun_dot_v1_dot_basket__token__market__pb2.GetBasketTokenMarketRequest.SerializeToString,
                response_deserializer=pie__dot__fun_dot_v1_dot_basket__token__market__pb2.BasketTokenMarket.FromString,
                )
        self.ListBasketTokenMarkets = channel.unary_unary(
                '/piedotfun.v1.BasketTokenMarketService/ListBasketTokenMarkets',
                request_serializer=pie__dot__fun_dot_v1_dot_basket__token__market__pb2.ListBasketTokensMarketsRequest.SerializeToString,
                response_deserializer=pie__dot__fun_dot_v1_dot_basket__token__market__pb2.ListBasketTokensMarketsResponse.FromString,
                )
        self.UpdateBasketTokenMarketComponents = channel.unary_unary(
                '/piedotfun.v1.BasketTokenMarketService/UpdateBasketTokenMarketComponents',
                request_serializer=pie__dot__fun_dot_v1_dot_basket__token__market__pb2.UpdateBasketTokenMarketComponentsRequest.SerializeToString,
                response_deserializer=pie__dot__fun_dot_v1_dot_basket__token__market__pb2.UpdateBasketTokenMarketComponentsResponse.FromString,
                )
        self.ListBasketTokenTicks = channel.unary_unary(
                '/piedotfun.v1.BasketTokenMarketService/ListBasketTokenTicks',
                request_serializer=pie__dot__fun_dot_v1_dot_basket__token__market__pb2.ListBasketTokenTicksRequest.SerializeToString,
                response_deserializer=pie__dot__fun_dot_v1_dot_basket__token__market__pb2.ListBasketTokenTicksResponse.FromString,
                )


class BasketTokenMarketServiceServicer(object):
    """BasketTokenMarketService contains the function to interact with the Market of the spacebar
    """

    def CreateBasketTokenMarket(self, request, context):
        """CreateBasketTokenMarket
        private
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CustomCreateBasketTokenMarket(self, request, context):
        """CustomCreateBasketTokenMarket
        Create with components.
        private
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBasketTokenMarket(self, request, context):
        """GetBasketTokenMarket returns the market for the given basket token.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListBasketTokenMarkets(self, request, context):
        """ListBasketTokenMarkets returns the list of markets for the given basket tokens.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateBasketTokenMarketComponents(self, request, context):
        """UpdateBasketTokenMarketComponents
        private
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListBasketTokenTicks(self, request, context):
        """ListBasketTokenTicks returns the list of Ticks for the given basket tokens.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BasketTokenMarketServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateBasketTokenMarket': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateBasketTokenMarket,
                    request_deserializer=pie__dot__fun_dot_v1_dot_basket__token__market__pb2.CreateBasketTokenMarketRequest.FromString,
                    response_serializer=pie__dot__fun_dot_v1_dot_basket__token__market__pb2.BasketTokenMarket.SerializeToString,
            ),
            'CustomCreateBasketTokenMarket': grpc.unary_unary_rpc_method_handler(
                    servicer.CustomCreateBasketTokenMarket,
                    request_deserializer=pie__dot__fun_dot_v1_dot_basket__token__market__pb2.CustomCreateBasketTokenMarketRequest.FromString,
                    response_serializer=pie__dot__fun_dot_v1_dot_basket__token__market__pb2.BasketTokenMarket.SerializeToString,
            ),
            'GetBasketTokenMarket': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBasketTokenMarket,
                    request_deserializer=pie__dot__fun_dot_v1_dot_basket__token__market__pb2.GetBasketTokenMarketRequest.FromString,
                    response_serializer=pie__dot__fun_dot_v1_dot_basket__token__market__pb2.BasketTokenMarket.SerializeToString,
            ),
            'ListBasketTokenMarkets': grpc.unary_unary_rpc_method_handler(
                    servicer.ListBasketTokenMarkets,
                    request_deserializer=pie__dot__fun_dot_v1_dot_basket__token__market__pb2.ListBasketTokensMarketsRequest.FromString,
                    response_serializer=pie__dot__fun_dot_v1_dot_basket__token__market__pb2.ListBasketTokensMarketsResponse.SerializeToString,
            ),
            'UpdateBasketTokenMarketComponents': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateBasketTokenMarketComponents,
                    request_deserializer=pie__dot__fun_dot_v1_dot_basket__token__market__pb2.UpdateBasketTokenMarketComponentsRequest.FromString,
                    response_serializer=pie__dot__fun_dot_v1_dot_basket__token__market__pb2.UpdateBasketTokenMarketComponentsResponse.SerializeToString,
            ),
            'ListBasketTokenTicks': grpc.unary_unary_rpc_method_handler(
                    servicer.ListBasketTokenTicks,
                    request_deserializer=pie__dot__fun_dot_v1_dot_basket__token__market__pb2.ListBasketTokenTicksRequest.FromString,
                    response_serializer=pie__dot__fun_dot_v1_dot_basket__token__market__pb2.ListBasketTokenTicksResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'piedotfun.v1.BasketTokenMarketService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BasketTokenMarketService(object):
    """BasketTokenMarketService contains the function to interact with the Market of the spacebar
    """

    @staticmethod
    def CreateBasketTokenMarket(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/piedotfun.v1.BasketTokenMarketService/CreateBasketTokenMarket',
            pie__dot__fun_dot_v1_dot_basket__token__market__pb2.CreateBasketTokenMarketRequest.SerializeToString,
            pie__dot__fun_dot_v1_dot_basket__token__market__pb2.BasketTokenMarket.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CustomCreateBasketTokenMarket(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/piedotfun.v1.BasketTokenMarketService/CustomCreateBasketTokenMarket',
            pie__dot__fun_dot_v1_dot_basket__token__market__pb2.CustomCreateBasketTokenMarketRequest.SerializeToString,
            pie__dot__fun_dot_v1_dot_basket__token__market__pb2.BasketTokenMarket.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBasketTokenMarket(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/piedotfun.v1.BasketTokenMarketService/GetBasketTokenMarket',
            pie__dot__fun_dot_v1_dot_basket__token__market__pb2.GetBasketTokenMarketRequest.SerializeToString,
            pie__dot__fun_dot_v1_dot_basket__token__market__pb2.BasketTokenMarket.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListBasketTokenMarkets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/piedotfun.v1.BasketTokenMarketService/ListBasketTokenMarkets',
            pie__dot__fun_dot_v1_dot_basket__token__market__pb2.ListBasketTokensMarketsRequest.SerializeToString,
            pie__dot__fun_dot_v1_dot_basket__token__market__pb2.ListBasketTokensMarketsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateBasketTokenMarketComponents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/piedotfun.v1.BasketTokenMarketService/UpdateBasketTokenMarketComponents',
            pie__dot__fun_dot_v1_dot_basket__token__market__pb2.UpdateBasketTokenMarketComponentsRequest.SerializeToString,
            pie__dot__fun_dot_v1_dot_basket__token__market__pb2.UpdateBasketTokenMarketComponentsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListBasketTokenTicks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/piedotfun.v1.BasketTokenMarketService/ListBasketTokenTicks',
            pie__dot__fun_dot_v1_dot_basket__token__market__pb2.ListBasketTokenTicksRequest.SerializeToString,
            pie__dot__fun_dot_v1_dot_basket__token__market__pb2.ListBasketTokenTicksResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

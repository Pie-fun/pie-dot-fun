# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from pie_dot_fun.v1 import holding_wallet_pb2 as pie__dot__fun_dot_v1_dot_holding__wallet__pb2


class HoldingWalletServiceStub(object):
    """HoldingWalletService contains the function to interact with the HoldingWallet of the spacebar
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetHoldingWallet = channel.unary_unary(
                '/piedotfun.v1.HoldingWalletService/GetHoldingWallet',
                request_serializer=pie__dot__fun_dot_v1_dot_holding__wallet__pb2.GetHoldingWalletRequest.SerializeToString,
                response_deserializer=pie__dot__fun_dot_v1_dot_holding__wallet__pb2.HoldingWallet.FromString,
                )
        self.ListHoldingWallets = channel.unary_unary(
                '/piedotfun.v1.HoldingWalletService/ListHoldingWallets',
                request_serializer=pie__dot__fun_dot_v1_dot_holding__wallet__pb2.ListHoldingWalletsRequest.SerializeToString,
                response_deserializer=pie__dot__fun_dot_v1_dot_holding__wallet__pb2.ListHoldingWalletsResponse.FromString,
                )


class HoldingWalletServiceServicer(object):
    """HoldingWalletService contains the function to interact with the HoldingWallet of the spacebar
    """

    def GetHoldingWallet(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListHoldingWallets(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_HoldingWalletServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetHoldingWallet': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHoldingWallet,
                    request_deserializer=pie__dot__fun_dot_v1_dot_holding__wallet__pb2.GetHoldingWalletRequest.FromString,
                    response_serializer=pie__dot__fun_dot_v1_dot_holding__wallet__pb2.HoldingWallet.SerializeToString,
            ),
            'ListHoldingWallets': grpc.unary_unary_rpc_method_handler(
                    servicer.ListHoldingWallets,
                    request_deserializer=pie__dot__fun_dot_v1_dot_holding__wallet__pb2.ListHoldingWalletsRequest.FromString,
                    response_serializer=pie__dot__fun_dot_v1_dot_holding__wallet__pb2.ListHoldingWalletsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'piedotfun.v1.HoldingWalletService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class HoldingWalletService(object):
    """HoldingWalletService contains the function to interact with the HoldingWallet of the spacebar
    """

    @staticmethod
    def GetHoldingWallet(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/piedotfun.v1.HoldingWalletService/GetHoldingWallet',
            pie__dot__fun_dot_v1_dot_holding__wallet__pb2.GetHoldingWalletRequest.SerializeToString,
            pie__dot__fun_dot_v1_dot_holding__wallet__pb2.HoldingWallet.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListHoldingWallets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/piedotfun.v1.HoldingWalletService/ListHoldingWallets',
            pie__dot__fun_dot_v1_dot_holding__wallet__pb2.ListHoldingWalletsRequest.SerializeToString,
            pie__dot__fun_dot_v1_dot_holding__wallet__pb2.ListHoldingWalletsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

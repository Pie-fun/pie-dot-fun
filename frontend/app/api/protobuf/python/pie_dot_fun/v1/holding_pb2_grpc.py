# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from pie_dot_fun.v1 import holding_pb2 as pie__dot__fun_dot_v1_dot_holding__pb2


class HoldingServiceStub(object):
    """HoldingService contains the function to interact with the Holding of the spacebar
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetHolding = channel.unary_unary(
                '/piedotfun.v1.HoldingService/GetHolding',
                request_serializer=pie__dot__fun_dot_v1_dot_holding__pb2.GetHoldingRequest.SerializeToString,
                response_deserializer=pie__dot__fun_dot_v1_dot_holding__pb2.Holding.FromString,
                )
        self.ListHoldings = channel.unary_unary(
                '/piedotfun.v1.HoldingService/ListHoldings',
                request_serializer=pie__dot__fun_dot_v1_dot_holding__pb2.ListHoldingsRequest.SerializeToString,
                response_deserializer=pie__dot__fun_dot_v1_dot_holding__pb2.ListHoldingsResponse.FromString,
                )
        self.GetHoldingsStatistics = channel.unary_unary(
                '/piedotfun.v1.HoldingService/GetHoldingsStatistics',
                request_serializer=pie__dot__fun_dot_v1_dot_holding__pb2.GetHoldingsStatisticsRequest.SerializeToString,
                response_deserializer=pie__dot__fun_dot_v1_dot_holding__pb2.GetHoldingsStatisticsResponse.FromString,
                )


class HoldingServiceServicer(object):
    """HoldingService contains the function to interact with the Holding of the spacebar
    """

    def GetHolding(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListHoldings(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetHoldingsStatistics(self, request, context):
        """GetHoldingsStatistics ListHoldings 와 같은 필터를 기준으로 Total Count, Total Market Value in USDC, Total Market Value in SOL 을 반환합니다.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_HoldingServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetHolding': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHolding,
                    request_deserializer=pie__dot__fun_dot_v1_dot_holding__pb2.GetHoldingRequest.FromString,
                    response_serializer=pie__dot__fun_dot_v1_dot_holding__pb2.Holding.SerializeToString,
            ),
            'ListHoldings': grpc.unary_unary_rpc_method_handler(
                    servicer.ListHoldings,
                    request_deserializer=pie__dot__fun_dot_v1_dot_holding__pb2.ListHoldingsRequest.FromString,
                    response_serializer=pie__dot__fun_dot_v1_dot_holding__pb2.ListHoldingsResponse.SerializeToString,
            ),
            'GetHoldingsStatistics': grpc.unary_unary_rpc_method_handler(
                    servicer.GetHoldingsStatistics,
                    request_deserializer=pie__dot__fun_dot_v1_dot_holding__pb2.GetHoldingsStatisticsRequest.FromString,
                    response_serializer=pie__dot__fun_dot_v1_dot_holding__pb2.GetHoldingsStatisticsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'piedotfun.v1.HoldingService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class HoldingService(object):
    """HoldingService contains the function to interact with the Holding of the spacebar
    """

    @staticmethod
    def GetHolding(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/piedotfun.v1.HoldingService/GetHolding',
            pie__dot__fun_dot_v1_dot_holding__pb2.GetHoldingRequest.SerializeToString,
            pie__dot__fun_dot_v1_dot_holding__pb2.Holding.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListHoldings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/piedotfun.v1.HoldingService/ListHoldings',
            pie__dot__fun_dot_v1_dot_holding__pb2.ListHoldingsRequest.SerializeToString,
            pie__dot__fun_dot_v1_dot_holding__pb2.ListHoldingsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetHoldingsStatistics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/piedotfun.v1.HoldingService/GetHoldingsStatistics',
            pie__dot__fun_dot_v1_dot_holding__pb2.GetHoldingsStatisticsRequest.SerializeToString,
            pie__dot__fun_dot_v1_dot_holding__pb2.GetHoldingsStatisticsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from ethereum.v1.score import score_pb2 as ethereum_dot_v1_dot_score_dot_score__pb2


class ScoreServiceStub(object):
    """ScoreService contains the function to interact with the Score of the spacebar
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateScore = channel.unary_unary(
                '/ethereum.v1.score.ScoreService/CreateScore',
                request_serializer=ethereum_dot_v1_dot_score_dot_score__pb2.CreateScoreRequest.SerializeToString,
                response_deserializer=ethereum_dot_v1_dot_score_dot_score__pb2.Score.FromString,
                )
        self.ListScores = channel.unary_unary(
                '/ethereum.v1.score.ScoreService/ListScores',
                request_serializer=ethereum_dot_v1_dot_score_dot_score__pb2.ListScoresRequest.SerializeToString,
                response_deserializer=ethereum_dot_v1_dot_score_dot_score__pb2.ListScoresResponse.FromString,
                )
        self.GetScore = channel.unary_unary(
                '/ethereum.v1.score.ScoreService/GetScore',
                request_serializer=ethereum_dot_v1_dot_score_dot_score__pb2.GetScoreRequest.SerializeToString,
                response_deserializer=ethereum_dot_v1_dot_score_dot_score__pb2.Score.FromString,
                )


class ScoreServiceServicer(object):
    """ScoreService contains the function to interact with the Score of the spacebar
    """

    def CreateScore(self, request, context):
        """CreateScore create Score with Score
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListScores(self, request, context):
        """ListScores will return scores.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetScore(self, request, context):
        """GetScore
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ScoreServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateScore': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateScore,
                    request_deserializer=ethereum_dot_v1_dot_score_dot_score__pb2.CreateScoreRequest.FromString,
                    response_serializer=ethereum_dot_v1_dot_score_dot_score__pb2.Score.SerializeToString,
            ),
            'ListScores': grpc.unary_unary_rpc_method_handler(
                    servicer.ListScores,
                    request_deserializer=ethereum_dot_v1_dot_score_dot_score__pb2.ListScoresRequest.FromString,
                    response_serializer=ethereum_dot_v1_dot_score_dot_score__pb2.ListScoresResponse.SerializeToString,
            ),
            'GetScore': grpc.unary_unary_rpc_method_handler(
                    servicer.GetScore,
                    request_deserializer=ethereum_dot_v1_dot_score_dot_score__pb2.GetScoreRequest.FromString,
                    response_serializer=ethereum_dot_v1_dot_score_dot_score__pb2.Score.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ethereum.v1.score.ScoreService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ScoreService(object):
    """ScoreService contains the function to interact with the Score of the spacebar
    """

    @staticmethod
    def CreateScore(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ethereum.v1.score.ScoreService/CreateScore',
            ethereum_dot_v1_dot_score_dot_score__pb2.CreateScoreRequest.SerializeToString,
            ethereum_dot_v1_dot_score_dot_score__pb2.Score.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListScores(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ethereum.v1.score.ScoreService/ListScores',
            ethereum_dot_v1_dot_score_dot_score__pb2.ListScoresRequest.SerializeToString,
            ethereum_dot_v1_dot_score_dot_score__pb2.ListScoresResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetScore(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ethereum.v1.score.ScoreService/GetScore',
            ethereum_dot_v1_dot_score_dot_score__pb2.GetScoreRequest.SerializeToString,
            ethereum_dot_v1_dot_score_dot_score__pb2.Score.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

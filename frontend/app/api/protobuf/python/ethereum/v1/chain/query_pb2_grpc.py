# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from ethereum.v1.chain import query_pb2 as ethereum_dot_v1_dot_chain_dot_query__pb2


class ChainQueryServiceStub(object):
    """ChainQueryService is the service that handles all chain requests.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.QueryReceipt = channel.unary_unary(
                '/ethereum.v1.chain.ChainQueryService/QueryReceipt',
                request_serializer=ethereum_dot_v1_dot_chain_dot_query__pb2.QueryReceiptRequest.SerializeToString,
                response_deserializer=ethereum_dot_v1_dot_chain_dot_query__pb2.Receipt.FromString,
                )
        self.QueryTransactionCount = channel.unary_unary(
                '/ethereum.v1.chain.ChainQueryService/QueryTransactionCount',
                request_serializer=ethereum_dot_v1_dot_chain_dot_query__pb2.QueryQueryTransactionCountRequest.SerializeToString,
                response_deserializer=ethereum_dot_v1_dot_chain_dot_query__pb2.QueryQueryTransactionCountResponse.FromString,
                )
        self.QueryDelegateCash = channel.unary_unary(
                '/ethereum.v1.chain.ChainQueryService/QueryDelegateCash',
                request_serializer=ethereum_dot_v1_dot_chain_dot_query__pb2.QueryDelegateCashRequest.SerializeToString,
                response_deserializer=ethereum_dot_v1_dot_chain_dot_query__pb2.QueryDelegateCashResponse.FromString,
                )


class ChainQueryServiceServicer(object):
    """ChainQueryService is the service that handles all chain requests.
    """

    def QueryReceipt(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryTransactionCount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def QueryDelegateCash(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChainQueryServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'QueryReceipt': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryReceipt,
                    request_deserializer=ethereum_dot_v1_dot_chain_dot_query__pb2.QueryReceiptRequest.FromString,
                    response_serializer=ethereum_dot_v1_dot_chain_dot_query__pb2.Receipt.SerializeToString,
            ),
            'QueryTransactionCount': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryTransactionCount,
                    request_deserializer=ethereum_dot_v1_dot_chain_dot_query__pb2.QueryQueryTransactionCountRequest.FromString,
                    response_serializer=ethereum_dot_v1_dot_chain_dot_query__pb2.QueryQueryTransactionCountResponse.SerializeToString,
            ),
            'QueryDelegateCash': grpc.unary_unary_rpc_method_handler(
                    servicer.QueryDelegateCash,
                    request_deserializer=ethereum_dot_v1_dot_chain_dot_query__pb2.QueryDelegateCashRequest.FromString,
                    response_serializer=ethereum_dot_v1_dot_chain_dot_query__pb2.QueryDelegateCashResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'ethereum.v1.chain.ChainQueryService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ChainQueryService(object):
    """ChainQueryService is the service that handles all chain requests.
    """

    @staticmethod
    def QueryReceipt(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ethereum.v1.chain.ChainQueryService/QueryReceipt',
            ethereum_dot_v1_dot_chain_dot_query__pb2.QueryReceiptRequest.SerializeToString,
            ethereum_dot_v1_dot_chain_dot_query__pb2.Receipt.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryTransactionCount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ethereum.v1.chain.ChainQueryService/QueryTransactionCount',
            ethereum_dot_v1_dot_chain_dot_query__pb2.QueryQueryTransactionCountRequest.SerializeToString,
            ethereum_dot_v1_dot_chain_dot_query__pb2.QueryQueryTransactionCountResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def QueryDelegateCash(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/ethereum.v1.chain.ChainQueryService/QueryDelegateCash',
            ethereum_dot_v1_dot_chain_dot_query__pb2.QueryDelegateCashRequest.SerializeToString,
            ethereum_dot_v1_dot_chain_dot_query__pb2.QueryDelegateCashResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from blast.v1.user import backspace_pb2 as blast_dot_v1_dot_user_dot_backspace__pb2


class BackspaceServiceStub(object):
    """BackspaceService contains the function to interact with the Backspace of the spacebar
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetBackspace = channel.unary_unary(
                '/blast.v1.user.BackspaceService/GetBackspace',
                request_serializer=blast_dot_v1_dot_user_dot_backspace__pb2.GetBackspaceRequest.SerializeToString,
                response_deserializer=blast_dot_v1_dot_user_dot_backspace__pb2.Backspace.FromString,
                )
        self.UpdateBackspace = channel.unary_unary(
                '/blast.v1.user.BackspaceService/UpdateBackspace',
                request_serializer=blast_dot_v1_dot_user_dot_backspace__pb2.UpdateBackspaceRequest.SerializeToString,
                response_deserializer=blast_dot_v1_dot_user_dot_backspace__pb2.Backspace.FromString,
                )


class BackspaceServiceServicer(object):
    """BackspaceService contains the function to interact with the Backspace of the spacebar
    """

    def GetBackspace(self, request, context):
        """GetBackspace will return Backspace.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateBackspace(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BackspaceServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetBackspace': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBackspace,
                    request_deserializer=blast_dot_v1_dot_user_dot_backspace__pb2.GetBackspaceRequest.FromString,
                    response_serializer=blast_dot_v1_dot_user_dot_backspace__pb2.Backspace.SerializeToString,
            ),
            'UpdateBackspace': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateBackspace,
                    request_deserializer=blast_dot_v1_dot_user_dot_backspace__pb2.UpdateBackspaceRequest.FromString,
                    response_serializer=blast_dot_v1_dot_user_dot_backspace__pb2.Backspace.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'blast.v1.user.BackspaceService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BackspaceService(object):
    """BackspaceService contains the function to interact with the Backspace of the spacebar
    """

    @staticmethod
    def GetBackspace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/blast.v1.user.BackspaceService/GetBackspace',
            blast_dot_v1_dot_user_dot_backspace__pb2.GetBackspaceRequest.SerializeToString,
            blast_dot_v1_dot_user_dot_backspace__pb2.Backspace.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateBackspace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/blast.v1.user.BackspaceService/UpdateBackspace',
            blast_dot_v1_dot_user_dot_backspace__pb2.UpdateBackspaceRequest.SerializeToString,
            blast_dot_v1_dot_user_dot_backspace__pb2.Backspace.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

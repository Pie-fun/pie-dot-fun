# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from blast.v1.gm import gm_pb2 as blast_dot_v1_dot_gm_dot_gm__pb2


class GMServiceStub(object):
    """GMService contains the function to interact with the GM of the spacebar
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetGMStats = channel.unary_unary(
                '/blast.v1.gm.GMService/GetGMStats',
                request_serializer=blast_dot_v1_dot_gm_dot_gm__pb2.GetGMStatsRequest.SerializeToString,
                response_deserializer=blast_dot_v1_dot_gm_dot_gm__pb2.GMStats.FromString,
                )
        self.SendGM = channel.unary_unary(
                '/blast.v1.gm.GMService/SendGM',
                request_serializer=blast_dot_v1_dot_gm_dot_gm__pb2.SendGMRequest.SerializeToString,
                response_deserializer=blast_dot_v1_dot_gm_dot_gm__pb2.GM.FromString,
                )
        self.PreflightGM = channel.unary_unary(
                '/blast.v1.gm.GMService/PreflightGM',
                request_serializer=blast_dot_v1_dot_gm_dot_gm__pb2.PreflightGMRequest.SerializeToString,
                response_deserializer=blast_dot_v1_dot_gm_dot_gm__pb2.PreflightGMResponse.FromString,
                )
        self.ListGMs = channel.unary_unary(
                '/blast.v1.gm.GMService/ListGMs',
                request_serializer=blast_dot_v1_dot_gm_dot_gm__pb2.ListGMsRequest.SerializeToString,
                response_deserializer=blast_dot_v1_dot_gm_dot_gm__pb2.ListGMsResponse.FromString,
                )


class GMServiceServicer(object):
    """GMService contains the function to interact with the GM of the spacebar
    """

    def GetGMStats(self, request, context):
        """GetGMStats returns the GM stats of the user.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendGM(self, request, context):
        """SendGM send GM to another User.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PreflightGM(self, request, context):
        """PreflightGM preflight GM to another User.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListGMs(self, request, context):
        """Lists GM messages based on "from" and/or "to" filters.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_GMServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetGMStats': grpc.unary_unary_rpc_method_handler(
                    servicer.GetGMStats,
                    request_deserializer=blast_dot_v1_dot_gm_dot_gm__pb2.GetGMStatsRequest.FromString,
                    response_serializer=blast_dot_v1_dot_gm_dot_gm__pb2.GMStats.SerializeToString,
            ),
            'SendGM': grpc.unary_unary_rpc_method_handler(
                    servicer.SendGM,
                    request_deserializer=blast_dot_v1_dot_gm_dot_gm__pb2.SendGMRequest.FromString,
                    response_serializer=blast_dot_v1_dot_gm_dot_gm__pb2.GM.SerializeToString,
            ),
            'PreflightGM': grpc.unary_unary_rpc_method_handler(
                    servicer.PreflightGM,
                    request_deserializer=blast_dot_v1_dot_gm_dot_gm__pb2.PreflightGMRequest.FromString,
                    response_serializer=blast_dot_v1_dot_gm_dot_gm__pb2.PreflightGMResponse.SerializeToString,
            ),
            'ListGMs': grpc.unary_unary_rpc_method_handler(
                    servicer.ListGMs,
                    request_deserializer=blast_dot_v1_dot_gm_dot_gm__pb2.ListGMsRequest.FromString,
                    response_serializer=blast_dot_v1_dot_gm_dot_gm__pb2.ListGMsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'blast.v1.gm.GMService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class GMService(object):
    """GMService contains the function to interact with the GM of the spacebar
    """

    @staticmethod
    def GetGMStats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/blast.v1.gm.GMService/GetGMStats',
            blast_dot_v1_dot_gm_dot_gm__pb2.GetGMStatsRequest.SerializeToString,
            blast_dot_v1_dot_gm_dot_gm__pb2.GMStats.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendGM(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/blast.v1.gm.GMService/SendGM',
            blast_dot_v1_dot_gm_dot_gm__pb2.SendGMRequest.SerializeToString,
            blast_dot_v1_dot_gm_dot_gm__pb2.GM.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PreflightGM(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/blast.v1.gm.GMService/PreflightGM',
            blast_dot_v1_dot_gm_dot_gm__pb2.PreflightGMRequest.SerializeToString,
            blast_dot_v1_dot_gm_dot_gm__pb2.PreflightGMResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListGMs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/blast.v1.gm.GMService/ListGMs',
            blast_dot_v1_dot_gm_dot_gm__pb2.ListGMsRequest.SerializeToString,
            blast_dot_v1_dot_gm_dot_gm__pb2.ListGMsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

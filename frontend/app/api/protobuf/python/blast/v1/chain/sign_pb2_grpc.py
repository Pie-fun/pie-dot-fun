# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from blast.v1.chain import sign_pb2 as blast_dot_v1_dot_chain_dot_sign__pb2


class ChainSignServiceStub(object):
    """ChainSignService is the service that handles signing messages.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SignMessage = channel.unary_unary(
                '/blast.v1.chain.ChainSignService/SignMessage',
                request_serializer=blast_dot_v1_dot_chain_dot_sign__pb2.SignMessageRequest.SerializeToString,
                response_deserializer=blast_dot_v1_dot_chain_dot_sign__pb2.SignatureResponse.FromString,
                )
        self.SignMintSquare = channel.unary_unary(
                '/blast.v1.chain.ChainSignService/SignMintSquare',
                request_serializer=blast_dot_v1_dot_chain_dot_sign__pb2.SignMintSquareRequest.SerializeToString,
                response_deserializer=blast_dot_v1_dot_chain_dot_sign__pb2.SignMintSquareResponse.FromString,
                )
        self.SignJoinSquare = channel.unary_unary(
                '/blast.v1.chain.ChainSignService/SignJoinSquare',
                request_serializer=blast_dot_v1_dot_chain_dot_sign__pb2.SignJoinSquareRequest.SerializeToString,
                response_deserializer=blast_dot_v1_dot_chain_dot_sign__pb2.SignJoinSquareResponse.FromString,
                )
        self.SignTransferSquare = channel.unary_unary(
                '/blast.v1.chain.ChainSignService/SignTransferSquare',
                request_serializer=blast_dot_v1_dot_chain_dot_sign__pb2.SignTransferSquareRequest.SerializeToString,
                response_deserializer=blast_dot_v1_dot_chain_dot_sign__pb2.SignTransferSquareResponse.FromString,
                )
        self.SignUploadScore = channel.unary_unary(
                '/blast.v1.chain.ChainSignService/SignUploadScore',
                request_serializer=blast_dot_v1_dot_chain_dot_sign__pb2.SignUploadScoreRequest.SerializeToString,
                response_deserializer=blast_dot_v1_dot_chain_dot_sign__pb2.SignUploadScoreResponse.FromString,
                )


class ChainSignServiceServicer(object):
    """ChainSignService is the service that handles signing messages.
    """

    def SignMessage(self, request, context):
        """SignMessage signs a message with arbitrary message.

        This rpc is not open to the public request and only used by the internal service.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SignMintSquare(self, request, context):
        """SignMintSquare signs a square mint with the given parameters.

        403 error will be returned if the given owner address not not eligible to mint the square.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SignJoinSquare(self, request, context):
        """SignJoinSquare signs a square mint with the given parameters.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SignTransferSquare(self, request, context):
        """SignTransferSquare signs a square mint with the given parameters.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SignUploadScore(self, request, context):
        """SignUploadScore signs a score creation with the given parameters.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChainSignServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SignMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.SignMessage,
                    request_deserializer=blast_dot_v1_dot_chain_dot_sign__pb2.SignMessageRequest.FromString,
                    response_serializer=blast_dot_v1_dot_chain_dot_sign__pb2.SignatureResponse.SerializeToString,
            ),
            'SignMintSquare': grpc.unary_unary_rpc_method_handler(
                    servicer.SignMintSquare,
                    request_deserializer=blast_dot_v1_dot_chain_dot_sign__pb2.SignMintSquareRequest.FromString,
                    response_serializer=blast_dot_v1_dot_chain_dot_sign__pb2.SignMintSquareResponse.SerializeToString,
            ),
            'SignJoinSquare': grpc.unary_unary_rpc_method_handler(
                    servicer.SignJoinSquare,
                    request_deserializer=blast_dot_v1_dot_chain_dot_sign__pb2.SignJoinSquareRequest.FromString,
                    response_serializer=blast_dot_v1_dot_chain_dot_sign__pb2.SignJoinSquareResponse.SerializeToString,
            ),
            'SignTransferSquare': grpc.unary_unary_rpc_method_handler(
                    servicer.SignTransferSquare,
                    request_deserializer=blast_dot_v1_dot_chain_dot_sign__pb2.SignTransferSquareRequest.FromString,
                    response_serializer=blast_dot_v1_dot_chain_dot_sign__pb2.SignTransferSquareResponse.SerializeToString,
            ),
            'SignUploadScore': grpc.unary_unary_rpc_method_handler(
                    servicer.SignUploadScore,
                    request_deserializer=blast_dot_v1_dot_chain_dot_sign__pb2.SignUploadScoreRequest.FromString,
                    response_serializer=blast_dot_v1_dot_chain_dot_sign__pb2.SignUploadScoreResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'blast.v1.chain.ChainSignService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ChainSignService(object):
    """ChainSignService is the service that handles signing messages.
    """

    @staticmethod
    def SignMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/blast.v1.chain.ChainSignService/SignMessage',
            blast_dot_v1_dot_chain_dot_sign__pb2.SignMessageRequest.SerializeToString,
            blast_dot_v1_dot_chain_dot_sign__pb2.SignatureResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SignMintSquare(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/blast.v1.chain.ChainSignService/SignMintSquare',
            blast_dot_v1_dot_chain_dot_sign__pb2.SignMintSquareRequest.SerializeToString,
            blast_dot_v1_dot_chain_dot_sign__pb2.SignMintSquareResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SignJoinSquare(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/blast.v1.chain.ChainSignService/SignJoinSquare',
            blast_dot_v1_dot_chain_dot_sign__pb2.SignJoinSquareRequest.SerializeToString,
            blast_dot_v1_dot_chain_dot_sign__pb2.SignJoinSquareResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SignTransferSquare(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/blast.v1.chain.ChainSignService/SignTransferSquare',
            blast_dot_v1_dot_chain_dot_sign__pb2.SignTransferSquareRequest.SerializeToString,
            blast_dot_v1_dot_chain_dot_sign__pb2.SignTransferSquareResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SignUploadScore(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/blast.v1.chain.ChainSignService/SignUploadScore',
            blast_dot_v1_dot_chain_dot_sign__pb2.SignUploadScoreRequest.SerializeToString,
            blast_dot_v1_dot_chain_dot_sign__pb2.SignUploadScoreResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

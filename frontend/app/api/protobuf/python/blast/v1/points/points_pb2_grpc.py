# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from blast.v1.points import points_pb2 as blast_dot_v1_dot_points_dot_points__pb2


class PointsServiceStub(object):
    """PointsService contains the function to interact with the Points of the spacebar
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetPoints = channel.unary_unary(
                '/blast.v1.points.PointsService/GetPoints',
                request_serializer=blast_dot_v1_dot_points_dot_points__pb2.GetPointsRequest.SerializeToString,
                response_deserializer=blast_dot_v1_dot_points_dot_points__pb2.Points.FromString,
                )
        self.ListPoints = channel.unary_unary(
                '/blast.v1.points.PointsService/ListPoints',
                request_serializer=blast_dot_v1_dot_points_dot_points__pb2.ListPointsRequest.SerializeToString,
                response_deserializer=blast_dot_v1_dot_points_dot_points__pb2.ListPointsResponse.FromString,
                )
        self.EarnStakingInterest = channel.unary_unary(
                '/blast.v1.points.PointsService/EarnStakingInterest',
                request_serializer=blast_dot_v1_dot_points_dot_points__pb2.EarnStakingInterestRequest.SerializeToString,
                response_deserializer=blast_dot_v1_dot_points_dot_points__pb2.Points.FromString,
                )


class PointsServiceServicer(object):
    """PointsService contains the function to interact with the Points of the spacebar
    """

    def GetPoints(self, request, context):
        """GetPoints will return Points.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPoints(self, request, context):
        """ListPoints will return Points.
        reads across collections, reference: https://google.aip.dev/159
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EarnStakingInterest(self, request, context):
        """EarnStakingInterestPoints will earn Staking Interest Points.
        This function will be called by internal service and not open to the public.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PointsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetPoints': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPoints,
                    request_deserializer=blast_dot_v1_dot_points_dot_points__pb2.GetPointsRequest.FromString,
                    response_serializer=blast_dot_v1_dot_points_dot_points__pb2.Points.SerializeToString,
            ),
            'ListPoints': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPoints,
                    request_deserializer=blast_dot_v1_dot_points_dot_points__pb2.ListPointsRequest.FromString,
                    response_serializer=blast_dot_v1_dot_points_dot_points__pb2.ListPointsResponse.SerializeToString,
            ),
            'EarnStakingInterest': grpc.unary_unary_rpc_method_handler(
                    servicer.EarnStakingInterest,
                    request_deserializer=blast_dot_v1_dot_points_dot_points__pb2.EarnStakingInterestRequest.FromString,
                    response_serializer=blast_dot_v1_dot_points_dot_points__pb2.Points.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'blast.v1.points.PointsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PointsService(object):
    """PointsService contains the function to interact with the Points of the spacebar
    """

    @staticmethod
    def GetPoints(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/blast.v1.points.PointsService/GetPoints',
            blast_dot_v1_dot_points_dot_points__pb2.GetPointsRequest.SerializeToString,
            blast_dot_v1_dot_points_dot_points__pb2.Points.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPoints(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/blast.v1.points.PointsService/ListPoints',
            blast_dot_v1_dot_points_dot_points__pb2.ListPointsRequest.SerializeToString,
            blast_dot_v1_dot_points_dot_points__pb2.ListPointsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def EarnStakingInterest(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/blast.v1.points.PointsService/EarnStakingInterest',
            blast_dot_v1_dot_points_dot_points__pb2.EarnStakingInterestRequest.SerializeToString,
            blast_dot_v1_dot_points_dot_points__pb2.Points.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from blast.v1.aggregate import aggregate_pb2 as blast_dot_v1_dot_aggregate_dot_aggregate__pb2


class AggregateServiceStub(object):
    """AggregateService contains the method to read full aggregate resources.
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListPointsAggregate = channel.unary_unary(
                '/blast.v1.aggregate.AggregateService/ListPointsAggregate',
                request_serializer=blast_dot_v1_dot_aggregate_dot_aggregate__pb2.ListPointsAggregateRequest.SerializeToString,
                response_deserializer=blast_dot_v1_dot_aggregate_dot_aggregate__pb2.ListPointsAggregateResponse.FromString,
                )
        self.ListSquareMemberRankingsAggregate = channel.unary_unary(
                '/blast.v1.aggregate.AggregateService/ListSquareMemberRankingsAggregate',
                request_serializer=blast_dot_v1_dot_aggregate_dot_aggregate__pb2.ListSquareMemberRankingsAggregateRequest.SerializeToString,
                response_deserializer=blast_dot_v1_dot_aggregate_dot_aggregate__pb2.ListSquareMemberRankingsAggregateResponse.FromString,
                )
        self.GetSquareAggregate = channel.unary_unary(
                '/blast.v1.aggregate.AggregateService/GetSquareAggregate',
                request_serializer=blast_dot_v1_dot_aggregate_dot_aggregate__pb2.GetSquareAggregateRequest.SerializeToString,
                response_deserializer=blast_dot_v1_dot_aggregate_dot_aggregate__pb2.SquareAggregate.FromString,
                )
        self.ListSquaresAggregate = channel.unary_unary(
                '/blast.v1.aggregate.AggregateService/ListSquaresAggregate',
                request_serializer=blast_dot_v1_dot_aggregate_dot_aggregate__pb2.ListSquaresAggregateRequest.SerializeToString,
                response_deserializer=blast_dot_v1_dot_aggregate_dot_aggregate__pb2.ListSquaresAggregateResponse.FromString,
                )


class AggregateServiceServicer(object):
    """AggregateService contains the method to read full aggregate resources.
    """

    def ListPointsAggregate(self, request, context):
        """ListPointsAggregate returns the PointsAggregate for the given request.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSquareMemberRankingsAggregate(self, request, context):
        """ListSquareMemberRankingsAggregate returns the SquareMemberRankingsAggregate for the given request.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSquareAggregate(self, request, context):
        """GetSquareAggregate returns the GetSquareAggregate for the given request.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListSquaresAggregate(self, request, context):
        """ListSquaresAggregate returns the ListSquaresAggregate for the given request.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AggregateServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListPointsAggregate': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPointsAggregate,
                    request_deserializer=blast_dot_v1_dot_aggregate_dot_aggregate__pb2.ListPointsAggregateRequest.FromString,
                    response_serializer=blast_dot_v1_dot_aggregate_dot_aggregate__pb2.ListPointsAggregateResponse.SerializeToString,
            ),
            'ListSquareMemberRankingsAggregate': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSquareMemberRankingsAggregate,
                    request_deserializer=blast_dot_v1_dot_aggregate_dot_aggregate__pb2.ListSquareMemberRankingsAggregateRequest.FromString,
                    response_serializer=blast_dot_v1_dot_aggregate_dot_aggregate__pb2.ListSquareMemberRankingsAggregateResponse.SerializeToString,
            ),
            'GetSquareAggregate': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSquareAggregate,
                    request_deserializer=blast_dot_v1_dot_aggregate_dot_aggregate__pb2.GetSquareAggregateRequest.FromString,
                    response_serializer=blast_dot_v1_dot_aggregate_dot_aggregate__pb2.SquareAggregate.SerializeToString,
            ),
            'ListSquaresAggregate': grpc.unary_unary_rpc_method_handler(
                    servicer.ListSquaresAggregate,
                    request_deserializer=blast_dot_v1_dot_aggregate_dot_aggregate__pb2.ListSquaresAggregateRequest.FromString,
                    response_serializer=blast_dot_v1_dot_aggregate_dot_aggregate__pb2.ListSquaresAggregateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'blast.v1.aggregate.AggregateService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AggregateService(object):
    """AggregateService contains the method to read full aggregate resources.
    """

    @staticmethod
    def ListPointsAggregate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/blast.v1.aggregate.AggregateService/ListPointsAggregate',
            blast_dot_v1_dot_aggregate_dot_aggregate__pb2.ListPointsAggregateRequest.SerializeToString,
            blast_dot_v1_dot_aggregate_dot_aggregate__pb2.ListPointsAggregateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListSquareMemberRankingsAggregate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/blast.v1.aggregate.AggregateService/ListSquareMemberRankingsAggregate',
            blast_dot_v1_dot_aggregate_dot_aggregate__pb2.ListSquareMemberRankingsAggregateRequest.SerializeToString,
            blast_dot_v1_dot_aggregate_dot_aggregate__pb2.ListSquareMemberRankingsAggregateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSquareAggregate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/blast.v1.aggregate.AggregateService/GetSquareAggregate',
            blast_dot_v1_dot_aggregate_dot_aggregate__pb2.GetSquareAggregateRequest.SerializeToString,
            blast_dot_v1_dot_aggregate_dot_aggregate__pb2.SquareAggregate.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListSquaresAggregate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/blast.v1.aggregate.AggregateService/ListSquaresAggregate',
            blast_dot_v1_dot_aggregate_dot_aggregate__pb2.ListSquaresAggregateRequest.SerializeToString,
            blast_dot_v1_dot_aggregate_dot_aggregate__pb2.ListSquaresAggregateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

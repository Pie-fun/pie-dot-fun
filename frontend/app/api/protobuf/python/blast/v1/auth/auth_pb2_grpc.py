# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from blast.v1.auth import auth_pb2 as blast_dot_v1_dot_auth_dot_auth__pb2


class AuthServiceStub(object):
    """AuthService contains the function to interact with the Auth of the spacebar
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SignIn = channel.unary_unary(
                '/blast.v1.auth.AuthService/SignIn',
                request_serializer=blast_dot_v1_dot_auth_dot_auth__pb2.SignInRequest.SerializeToString,
                response_deserializer=blast_dot_v1_dot_auth_dot_auth__pb2.SignInResponse.FromString,
                )
        self.Refresh = channel.unary_unary(
                '/blast.v1.auth.AuthService/Refresh',
                request_serializer=blast_dot_v1_dot_auth_dot_auth__pb2.RefreshTokenRequest.SerializeToString,
                response_deserializer=blast_dot_v1_dot_auth_dot_auth__pb2.RefreshTokenResponse.FromString,
                )
        self.SignOut = channel.unary_unary(
                '/blast.v1.auth.AuthService/SignOut',
                request_serializer=blast_dot_v1_dot_auth_dot_auth__pb2.SignoutRequest.SerializeToString,
                response_deserializer=blast_dot_v1_dot_auth_dot_auth__pb2.SignoutResponse.FromString,
                )
        self.Authenticate = channel.unary_unary(
                '/blast.v1.auth.AuthService/Authenticate',
                request_serializer=blast_dot_v1_dot_auth_dot_auth__pb2.AuthenticateRequest.SerializeToString,
                response_deserializer=blast_dot_v1_dot_auth_dot_auth__pb2.AuthenticateResponse.FromString,
                )
        self.GetTempToken = channel.unary_unary(
                '/blast.v1.auth.AuthService/GetTempToken',
                request_serializer=blast_dot_v1_dot_auth_dot_auth__pb2.GetTempTokenRequest.SerializeToString,
                response_deserializer=blast_dot_v1_dot_auth_dot_auth__pb2.GetTempTokenResponse.FromString,
                )
        self.Download = channel.unary_unary(
                '/blast.v1.auth.AuthService/Download',
                request_serializer=blast_dot_v1_dot_auth_dot_auth__pb2.DownloadRequest.SerializeToString,
                response_deserializer=blast_dot_v1_dot_auth_dot_auth__pb2.DownloadResponse.FromString,
                )


class AuthServiceServicer(object):
    """AuthService contains the function to interact with the Auth of the spacebar
    """

    def SignIn(self, request, context):
        """Signin signs in a user and returns a session id.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Refresh(self, request, context):
        """Refresh refreshes a session.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SignOut(self, request, context):
        """Signout signs out a user.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Authenticate(self, request, context):
        """Authenticate authenticates token
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTempToken(self, request, context):
        """GetTempToken returns a short-lived token.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Download(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AuthServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SignIn': grpc.unary_unary_rpc_method_handler(
                    servicer.SignIn,
                    request_deserializer=blast_dot_v1_dot_auth_dot_auth__pb2.SignInRequest.FromString,
                    response_serializer=blast_dot_v1_dot_auth_dot_auth__pb2.SignInResponse.SerializeToString,
            ),
            'Refresh': grpc.unary_unary_rpc_method_handler(
                    servicer.Refresh,
                    request_deserializer=blast_dot_v1_dot_auth_dot_auth__pb2.RefreshTokenRequest.FromString,
                    response_serializer=blast_dot_v1_dot_auth_dot_auth__pb2.RefreshTokenResponse.SerializeToString,
            ),
            'SignOut': grpc.unary_unary_rpc_method_handler(
                    servicer.SignOut,
                    request_deserializer=blast_dot_v1_dot_auth_dot_auth__pb2.SignoutRequest.FromString,
                    response_serializer=blast_dot_v1_dot_auth_dot_auth__pb2.SignoutResponse.SerializeToString,
            ),
            'Authenticate': grpc.unary_unary_rpc_method_handler(
                    servicer.Authenticate,
                    request_deserializer=blast_dot_v1_dot_auth_dot_auth__pb2.AuthenticateRequest.FromString,
                    response_serializer=blast_dot_v1_dot_auth_dot_auth__pb2.AuthenticateResponse.SerializeToString,
            ),
            'GetTempToken': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTempToken,
                    request_deserializer=blast_dot_v1_dot_auth_dot_auth__pb2.GetTempTokenRequest.FromString,
                    response_serializer=blast_dot_v1_dot_auth_dot_auth__pb2.GetTempTokenResponse.SerializeToString,
            ),
            'Download': grpc.unary_unary_rpc_method_handler(
                    servicer.Download,
                    request_deserializer=blast_dot_v1_dot_auth_dot_auth__pb2.DownloadRequest.FromString,
                    response_serializer=blast_dot_v1_dot_auth_dot_auth__pb2.DownloadResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'blast.v1.auth.AuthService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class AuthService(object):
    """AuthService contains the function to interact with the Auth of the spacebar
    """

    @staticmethod
    def SignIn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/blast.v1.auth.AuthService/SignIn',
            blast_dot_v1_dot_auth_dot_auth__pb2.SignInRequest.SerializeToString,
            blast_dot_v1_dot_auth_dot_auth__pb2.SignInResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Refresh(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/blast.v1.auth.AuthService/Refresh',
            blast_dot_v1_dot_auth_dot_auth__pb2.RefreshTokenRequest.SerializeToString,
            blast_dot_v1_dot_auth_dot_auth__pb2.RefreshTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SignOut(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/blast.v1.auth.AuthService/SignOut',
            blast_dot_v1_dot_auth_dot_auth__pb2.SignoutRequest.SerializeToString,
            blast_dot_v1_dot_auth_dot_auth__pb2.SignoutResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Authenticate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/blast.v1.auth.AuthService/Authenticate',
            blast_dot_v1_dot_auth_dot_auth__pb2.AuthenticateRequest.SerializeToString,
            blast_dot_v1_dot_auth_dot_auth__pb2.AuthenticateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTempToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/blast.v1.auth.AuthService/GetTempToken',
            blast_dot_v1_dot_auth_dot_auth__pb2.GetTempTokenRequest.SerializeToString,
            blast_dot_v1_dot_auth_dot_auth__pb2.GetTempTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Download(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/blast.v1.auth.AuthService/Download',
            blast_dot_v1_dot_auth_dot_auth__pb2.DownloadRequest.SerializeToString,
            blast_dot_v1_dot_auth_dot_auth__pb2.DownloadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from blast.v1.blastpoints import blastpoints_pb2 as blast_dot_v1_dot_blastpoints_dot_blastpoints__pb2


class PointsServiceStub(object):
    """PointsService contains the function to interact with the Points of the spacebar
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetBlastPoints = channel.unary_unary(
                '/blast.v1.blastpoints.PointsService/GetBlastPoints',
                request_serializer=blast_dot_v1_dot_blastpoints_dot_blastpoints__pb2.GetBlastPointsRequest.SerializeToString,
                response_deserializer=blast_dot_v1_dot_blastpoints_dot_blastpoints__pb2.BlastPoints.FromString,
                )
        self.ListAllPendingTransfers = channel.unary_unary(
                '/blast.v1.blastpoints.PointsService/ListAllPendingTransfers',
                request_serializer=blast_dot_v1_dot_blastpoints_dot_blastpoints__pb2.ListAllPendingTransfersRequest.SerializeToString,
                response_deserializer=blast_dot_v1_dot_blastpoints_dot_blastpoints__pb2.ListAllPendingTransfersResponse.FromString,
                )
        self.GetBlastBalances = channel.unary_unary(
                '/blast.v1.blastpoints.PointsService/GetBlastBalances',
                request_serializer=blast_dot_v1_dot_blastpoints_dot_blastpoints__pb2.GetBlastBalanceRequest.SerializeToString,
                response_deserializer=blast_dot_v1_dot_blastpoints_dot_blastpoints__pb2.BlastBalance.FromString,
                )
        self.BatchCreateBlastGoldReservations = channel.unary_unary(
                '/blast.v1.blastpoints.PointsService/BatchCreateBlastGoldReservations',
                request_serializer=blast_dot_v1_dot_blastpoints_dot_blastpoints__pb2.BatchCreateBlastGoldReservationsRequest.SerializeToString,
                response_deserializer=blast_dot_v1_dot_blastpoints_dot_blastpoints__pb2.BatchCreateBlastGoldReservationsResponse.FromString,
                )
        self.ListBlastGoldReservations = channel.unary_unary(
                '/blast.v1.blastpoints.PointsService/ListBlastGoldReservations',
                request_serializer=blast_dot_v1_dot_blastpoints_dot_blastpoints__pb2.ListBlastGoldReservationsRequest.SerializeToString,
                response_deserializer=blast_dot_v1_dot_blastpoints_dot_blastpoints__pb2.ListBlastGoldReservationsResponse.FromString,
                )
        self.TransferReservedBlastGolds = channel.unary_unary(
                '/blast.v1.blastpoints.PointsService/TransferReservedBlastGolds',
                request_serializer=blast_dot_v1_dot_blastpoints_dot_blastpoints__pb2.TransferReservedBlastGoldsRequest.SerializeToString,
                response_deserializer=blast_dot_v1_dot_blastpoints_dot_blastpoints__pb2.TransferReservedBlastGoldsResponse.FromString,
                )


class PointsServiceServicer(object):
    """PointsService contains the function to interact with the Points of the spacebar
    """

    def GetBlastPoints(self, request, context):
        """GetBlastPoints
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListAllPendingTransfers(self, request, context):
        """ListAllPendingTransferBatches
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBlastBalances(self, request, context):
        """GetBlastBalances
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def BatchCreateBlastGoldReservations(self, request, context):
        """BatchCreateBlastGoldReservations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListBlastGoldReservations(self, request, context):
        """ListBlastGoldReservations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TransferReservedBlastGolds(self, request, context):
        """TransferReservedBlastGolds
        Transfer gold by the reservations.
        admin api, not public
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PointsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetBlastPoints': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBlastPoints,
                    request_deserializer=blast_dot_v1_dot_blastpoints_dot_blastpoints__pb2.GetBlastPointsRequest.FromString,
                    response_serializer=blast_dot_v1_dot_blastpoints_dot_blastpoints__pb2.BlastPoints.SerializeToString,
            ),
            'ListAllPendingTransfers': grpc.unary_unary_rpc_method_handler(
                    servicer.ListAllPendingTransfers,
                    request_deserializer=blast_dot_v1_dot_blastpoints_dot_blastpoints__pb2.ListAllPendingTransfersRequest.FromString,
                    response_serializer=blast_dot_v1_dot_blastpoints_dot_blastpoints__pb2.ListAllPendingTransfersResponse.SerializeToString,
            ),
            'GetBlastBalances': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBlastBalances,
                    request_deserializer=blast_dot_v1_dot_blastpoints_dot_blastpoints__pb2.GetBlastBalanceRequest.FromString,
                    response_serializer=blast_dot_v1_dot_blastpoints_dot_blastpoints__pb2.BlastBalance.SerializeToString,
            ),
            'BatchCreateBlastGoldReservations': grpc.unary_unary_rpc_method_handler(
                    servicer.BatchCreateBlastGoldReservations,
                    request_deserializer=blast_dot_v1_dot_blastpoints_dot_blastpoints__pb2.BatchCreateBlastGoldReservationsRequest.FromString,
                    response_serializer=blast_dot_v1_dot_blastpoints_dot_blastpoints__pb2.BatchCreateBlastGoldReservationsResponse.SerializeToString,
            ),
            'ListBlastGoldReservations': grpc.unary_unary_rpc_method_handler(
                    servicer.ListBlastGoldReservations,
                    request_deserializer=blast_dot_v1_dot_blastpoints_dot_blastpoints__pb2.ListBlastGoldReservationsRequest.FromString,
                    response_serializer=blast_dot_v1_dot_blastpoints_dot_blastpoints__pb2.ListBlastGoldReservationsResponse.SerializeToString,
            ),
            'TransferReservedBlastGolds': grpc.unary_unary_rpc_method_handler(
                    servicer.TransferReservedBlastGolds,
                    request_deserializer=blast_dot_v1_dot_blastpoints_dot_blastpoints__pb2.TransferReservedBlastGoldsRequest.FromString,
                    response_serializer=blast_dot_v1_dot_blastpoints_dot_blastpoints__pb2.TransferReservedBlastGoldsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'blast.v1.blastpoints.PointsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PointsService(object):
    """PointsService contains the function to interact with the Points of the spacebar
    """

    @staticmethod
    def GetBlastPoints(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/blast.v1.blastpoints.PointsService/GetBlastPoints',
            blast_dot_v1_dot_blastpoints_dot_blastpoints__pb2.GetBlastPointsRequest.SerializeToString,
            blast_dot_v1_dot_blastpoints_dot_blastpoints__pb2.BlastPoints.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListAllPendingTransfers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/blast.v1.blastpoints.PointsService/ListAllPendingTransfers',
            blast_dot_v1_dot_blastpoints_dot_blastpoints__pb2.ListAllPendingTransfersRequest.SerializeToString,
            blast_dot_v1_dot_blastpoints_dot_blastpoints__pb2.ListAllPendingTransfersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetBlastBalances(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/blast.v1.blastpoints.PointsService/GetBlastBalances',
            blast_dot_v1_dot_blastpoints_dot_blastpoints__pb2.GetBlastBalanceRequest.SerializeToString,
            blast_dot_v1_dot_blastpoints_dot_blastpoints__pb2.BlastBalance.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def BatchCreateBlastGoldReservations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/blast.v1.blastpoints.PointsService/BatchCreateBlastGoldReservations',
            blast_dot_v1_dot_blastpoints_dot_blastpoints__pb2.BatchCreateBlastGoldReservationsRequest.SerializeToString,
            blast_dot_v1_dot_blastpoints_dot_blastpoints__pb2.BatchCreateBlastGoldReservationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListBlastGoldReservations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/blast.v1.blastpoints.PointsService/ListBlastGoldReservations',
            blast_dot_v1_dot_blastpoints_dot_blastpoints__pb2.ListBlastGoldReservationsRequest.SerializeToString,
            blast_dot_v1_dot_blastpoints_dot_blastpoints__pb2.ListBlastGoldReservationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def TransferReservedBlastGolds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/blast.v1.blastpoints.PointsService/TransferReservedBlastGolds',
            blast_dot_v1_dot_blastpoints_dot_blastpoints__pb2.TransferReservedBlastGoldsRequest.SerializeToString,
            blast_dot_v1_dot_blastpoints_dot_blastpoints__pb2.TransferReservedBlastGoldsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

// Code generated by protoc-gen-go-grpc-mock. DO NOT EDIT.
// source: blast/v1/staking/staking.proto

package staking

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	grpc "google.golang.org/grpc"
)

// MockStakingServiceClient is a mock of StakingServiceClient interface.
type MockStakingServiceClient struct {
	ctrl     *gomock.Controller
	recorder *MockStakingServiceClientMockRecorder
}

// MockStakingServiceClientMockRecorder is the mock recorder for MockStakingServiceClient.
type MockStakingServiceClientMockRecorder struct {
	mock *MockStakingServiceClient
}

// NewMockStakingServiceClient creates a new mock instance.
func NewMockStakingServiceClient(ctrl *gomock.Controller) *MockStakingServiceClient {
	mock := &MockStakingServiceClient{ctrl: ctrl}
	mock.recorder = &MockStakingServiceClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStakingServiceClient) EXPECT() *MockStakingServiceClientMockRecorder {
	return m.recorder
}

// GetStaking mocks base method.
func (m *MockStakingServiceClient) GetStaking(ctx context.Context, in *GetStakingRequest, opts ...grpc.CallOption) (*Staking, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetStaking", varargs...)
	ret0, _ := ret[0].(*Staking)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStaking indicates an expected call of GetStaking.
func (mr *MockStakingServiceClientMockRecorder) GetStaking(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStaking", reflect.TypeOf((*MockStakingServiceClient)(nil).GetStaking), varargs...)
}

// GetStakingTotalAmount mocks base method.
func (m *MockStakingServiceClient) GetStakingTotalAmount(ctx context.Context, in *GetStakingTotalAmountRequest, opts ...grpc.CallOption) (*GetStakingTotalAmountResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetStakingTotalAmount", varargs...)
	ret0, _ := ret[0].(*GetStakingTotalAmountResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStakingTotalAmount indicates an expected call of GetStakingTotalAmount.
func (mr *MockStakingServiceClientMockRecorder) GetStakingTotalAmount(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStakingTotalAmount", reflect.TypeOf((*MockStakingServiceClient)(nil).GetStakingTotalAmount), varargs...)
}

// ListStakings mocks base method.
func (m *MockStakingServiceClient) ListStakings(ctx context.Context, in *ListStakingsRequest, opts ...grpc.CallOption) (*ListStakingsResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListStakings", varargs...)
	ret0, _ := ret[0].(*ListStakingsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListStakings indicates an expected call of ListStakings.
func (mr *MockStakingServiceClientMockRecorder) ListStakings(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListStakings", reflect.TypeOf((*MockStakingServiceClient)(nil).ListStakings), varargs...)
}

// MockStakingServiceServer is a mock of StakingServiceServer interface.
type MockStakingServiceServer struct {
	ctrl     *gomock.Controller
	recorder *MockStakingServiceServerMockRecorder
}

// MockStakingServiceServerMockRecorder is the mock recorder for MockStakingServiceServer.
type MockStakingServiceServerMockRecorder struct {
	mock *MockStakingServiceServer
}

// NewMockStakingServiceServer creates a new mock instance.
func NewMockStakingServiceServer(ctrl *gomock.Controller) *MockStakingServiceServer {
	mock := &MockStakingServiceServer{ctrl: ctrl}
	mock.recorder = &MockStakingServiceServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStakingServiceServer) EXPECT() *MockStakingServiceServerMockRecorder {
	return m.recorder
}

// GetStaking mocks base method.
func (m *MockStakingServiceServer) GetStaking(ctx context.Context, in *GetStakingRequest) (*Staking, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStaking", ctx, in)
	ret0, _ := ret[0].(*Staking)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStaking indicates an expected call of GetStaking.
func (mr *MockStakingServiceServerMockRecorder) GetStaking(ctx, in interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStaking", reflect.TypeOf((*MockStakingServiceServer)(nil).GetStaking), ctx, in)
}

// GetStakingTotalAmount mocks base method.
func (m *MockStakingServiceServer) GetStakingTotalAmount(ctx context.Context, in *GetStakingTotalAmountRequest) (*GetStakingTotalAmountResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStakingTotalAmount", ctx, in)
	ret0, _ := ret[0].(*GetStakingTotalAmountResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStakingTotalAmount indicates an expected call of GetStakingTotalAmount.
func (mr *MockStakingServiceServerMockRecorder) GetStakingTotalAmount(ctx, in interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStakingTotalAmount", reflect.TypeOf((*MockStakingServiceServer)(nil).GetStakingTotalAmount), ctx, in)
}

// ListStakings mocks base method.
func (m *MockStakingServiceServer) ListStakings(ctx context.Context, in *ListStakingsRequest) (*ListStakingsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListStakings", ctx, in)
	ret0, _ := ret[0].(*ListStakingsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListStakings indicates an expected call of ListStakings.
func (mr *MockStakingServiceServerMockRecorder) ListStakings(ctx, in interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListStakings", reflect.TypeOf((*MockStakingServiceServer)(nil).ListStakings), ctx, in)
}

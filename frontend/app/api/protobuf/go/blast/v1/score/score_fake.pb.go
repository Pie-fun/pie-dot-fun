// Code generated by protoc-gen-fake. DO NOT EDIT.

package score

import (
	"github.com/ao-labs/protoc-gen-fake/pkg/fake"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

// Default responses for ScoreService
var DefaultScoreServiceResponses = map[string]fake.Response{
	"/blast.v1.score.ScoreService/ValidateUploadScoreAndSign": {
		Method: "/blast.v1.score.ScoreService/ValidateUploadScoreAndSign",
		Response: &ValidateUploadScoreAndSignResponse{
			Signature: "fake_Signature",
			Params:    nil,
		},
	},
	"/blast.v1.score.ScoreService/CreateScore": {
		Method: "/blast.v1.score.ScoreService/CreateScore",
		Response: &Score{
			Name:        "fake_Name",
			UserAddress: "fake_UserAddress",
			GameId:      "fake_GameId",
			CreateTime:  nil,
			State:       0,
			Points:      42,
			GameType:    0,
			PlayMode:    0,
			Week:        42,
		},
	},
	"/blast.v1.score.ScoreService/GetScore": {
		Method: "/blast.v1.score.ScoreService/GetScore",
		Response: &Score{
			Name:        "fake_Name",
			UserAddress: "fake_UserAddress",
			GameId:      "fake_GameId",
			CreateTime:  nil,
			State:       0,
			Points:      42,
			GameType:    0,
			PlayMode:    0,
			Week:        42,
		},
	},
	"/blast.v1.score.ScoreService/GetUserBestScoreRanking": {
		Method: "/blast.v1.score.ScoreService/GetUserBestScoreRanking",
		Response: &UserBestScoreRanking{
			Rank:       42,
			UserType:   0,
			TimePeriod: 0,
			Score:      nil,
		},
	},
	"/blast.v1.score.ScoreService/ListUserBestScoreRankings": {
		Method: "/blast.v1.score.ScoreService/ListUserBestScoreRankings",
		Response: &ListUserBestScoreRankingsResponse{
			Rankings:      nil,
			NextPageToken: "fake_NextPageToken",
		},
	},
	"/blast.v1.score.ScoreService/GetUserCumulativeScoreRanking": {
		Method: "/blast.v1.score.ScoreService/GetUserCumulativeScoreRanking",
		Response: &UserCumulativeScoreRanking{
			Rank:        42,
			UserType:    0,
			TimePeriod:  0,
			UserAddress: "fake_UserAddress",
			TotalPoints: 42,
		},
	},
	"/blast.v1.score.ScoreService/ListUserCumulativeScoreRankings": {
		Method: "/blast.v1.score.ScoreService/ListUserCumulativeScoreRankings",
		Response: &ListUserCumulativeScoreRankingsResponse{
			Rankings:      nil,
			NextPageToken: "fake_NextPageToken",
		},
	},
	"/blast.v1.score.ScoreService/GetSquareCumulativeScoreRanking": {
		Method: "/blast.v1.score.ScoreService/GetSquareCumulativeScoreRanking",
		Response: &SquareCumulativeScoreRanking{
			Rank:              42,
			TimePeriod:        0,
			SquareTokenId:     "fake_SquareTokenId",
			TotalPoints:       42,
			PointsCount:       42,
			ParticipantsCount: 42,
		},
	},
	"/blast.v1.score.ScoreService/ListSquareCumulativeScoreRankings": {
		Method: "/blast.v1.score.ScoreService/ListSquareCumulativeScoreRankings",
		Response: &ListSquareCumulativeScoreRankingsResponse{
			Rankings:      nil,
			NextPageToken: "fake_NextPageToken",
		},
	},
	"/blast.v1.score.ScoreService/InvalidateScoreRankingsByUser": {
		Method:   "/blast.v1.score.ScoreService/InvalidateScoreRankingsByUser",
		Response: &emptypb.Empty{},
	},
	"/blast.v1.score.ScoreService/DryRunReward": {
		Method: "/blast.v1.score.ScoreService/DryRunReward",
		Response: &RewardResponse{
			UserRewards: nil,
		},
	},
}

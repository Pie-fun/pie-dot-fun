// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: blast/v1/user/dailycheckin.proto

package user

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetDailyCheckinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Format: users/{address}
	// Resource name alias "users/me" is supported.
	User string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *GetDailyCheckinRequest) Reset() {
	*x = GetDailyCheckinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blast_v1_user_dailycheckin_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDailyCheckinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDailyCheckinRequest) ProtoMessage() {}

func (x *GetDailyCheckinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blast_v1_user_dailycheckin_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDailyCheckinRequest.ProtoReflect.Descriptor instead.
func (*GetDailyCheckinRequest) Descriptor() ([]byte, []int) {
	return file_blast_v1_user_dailycheckin_proto_rawDescGZIP(), []int{0}
}

func (x *GetDailyCheckinRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type ClaimDailyCheckinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Format: users/{address}
	// Resource name alias "users/me" is supported.
	User string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *ClaimDailyCheckinRequest) Reset() {
	*x = ClaimDailyCheckinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blast_v1_user_dailycheckin_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClaimDailyCheckinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClaimDailyCheckinRequest) ProtoMessage() {}

func (x *ClaimDailyCheckinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blast_v1_user_dailycheckin_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClaimDailyCheckinRequest.ProtoReflect.Descriptor instead.
func (*ClaimDailyCheckinRequest) Descriptor() ([]byte, []int) {
	return file_blast_v1_user_dailycheckin_proto_rawDescGZIP(), []int{1}
}

func (x *ClaimDailyCheckinRequest) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

type DailyCheckin struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User          string             `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	CurrentStreak uint32             `protobuf:"varint,2,opt,name=current_streak,json=currentStreak,proto3" json:"current_streak,omitempty"`
	IsClaimable   bool               `protobuf:"varint,3,opt,name=is_claimable,json=isClaimable,proto3" json:"is_claimable,omitempty"`
	Points        uint32             `protobuf:"varint,4,opt,name=points,proto3" json:"points,omitempty"`
	LastClaim     *DailyCheckinClaim `protobuf:"bytes,5,opt,name=last_claim,json=lastClaim,proto3" json:"last_claim,omitempty"`
}

func (x *DailyCheckin) Reset() {
	*x = DailyCheckin{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blast_v1_user_dailycheckin_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DailyCheckin) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyCheckin) ProtoMessage() {}

func (x *DailyCheckin) ProtoReflect() protoreflect.Message {
	mi := &file_blast_v1_user_dailycheckin_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyCheckin.ProtoReflect.Descriptor instead.
func (*DailyCheckin) Descriptor() ([]byte, []int) {
	return file_blast_v1_user_dailycheckin_proto_rawDescGZIP(), []int{2}
}

func (x *DailyCheckin) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *DailyCheckin) GetCurrentStreak() uint32 {
	if x != nil {
		return x.CurrentStreak
	}
	return 0
}

func (x *DailyCheckin) GetIsClaimable() bool {
	if x != nil {
		return x.IsClaimable
	}
	return false
}

func (x *DailyCheckin) GetPoints() uint32 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *DailyCheckin) GetLastClaim() *DailyCheckinClaim {
	if x != nil {
		return x.LastClaim
	}
	return nil
}

type DailyCheckinClaim struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Streak    uint32                 `protobuf:"varint,1,opt,name=streak,proto3" json:"streak,omitempty"`
	Points    uint32                 `protobuf:"varint,2,opt,name=points,proto3" json:"points,omitempty"`
	ClaimTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=claim_time,json=claimTime,proto3" json:"claim_time,omitempty"`
}

func (x *DailyCheckinClaim) Reset() {
	*x = DailyCheckinClaim{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blast_v1_user_dailycheckin_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DailyCheckinClaim) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyCheckinClaim) ProtoMessage() {}

func (x *DailyCheckinClaim) ProtoReflect() protoreflect.Message {
	mi := &file_blast_v1_user_dailycheckin_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyCheckinClaim.ProtoReflect.Descriptor instead.
func (*DailyCheckinClaim) Descriptor() ([]byte, []int) {
	return file_blast_v1_user_dailycheckin_proto_rawDescGZIP(), []int{3}
}

func (x *DailyCheckinClaim) GetStreak() uint32 {
	if x != nil {
		return x.Streak
	}
	return 0
}

func (x *DailyCheckinClaim) GetPoints() uint32 {
	if x != nil {
		return x.Points
	}
	return 0
}

func (x *DailyCheckinClaim) GetClaimTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ClaimTime
	}
	return nil
}

var File_blast_v1_user_dailycheckin_proto protoreflect.FileDescriptor

var file_blast_v1_user_dailycheckin_proto_rawDesc = []byte{
	0x0a, 0x20, 0x62, 0x6c, 0x61, 0x73, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x2f,
	0x64, 0x61, 0x69, 0x6c, 0x79, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0d, 0x62, 0x6c, 0x61, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x54, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x44, 0x61, 0x69, 0x6c, 0x79,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a,
	0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x26, 0xe2, 0x41,
	0x01, 0x02, 0xfa, 0x41, 0x1f, 0x0a, 0x1d, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x62, 0x61, 0x72, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x2f,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x56, 0x0a, 0x18, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x26, 0xe2, 0x41, 0x01, 0x02, 0xfa, 0x41, 0x1f, 0x0a, 0x1d, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x62, 0x61, 0x72, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x2f, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x22, 0xe9, 0x01, 0x0a, 0x0c, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x69, 0x6e, 0x12, 0x36, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x22, 0xfa, 0x41, 0x1f, 0x0a, 0x1d, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x62, 0x61, 0x72, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x78, 0x79, 0x7a,
	0x2f, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x0d, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x72, 0x65,
	0x61, 0x6b, 0x12, 0x21, 0x0a, 0x0c, 0x69, 0x73, 0x5f, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x61, 0x62,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x43, 0x6c, 0x61, 0x69,
	0x6d, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x3f, 0x0a,
	0x0a, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x62, 0x6c, 0x61, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x52, 0x09, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x6c, 0x61, 0x69, 0x6d, 0x22, 0x7e,
	0x0a, 0x11, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x43, 0x6c,
	0x61, 0x69, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x73, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x6c, 0x61, 0x69, 0x6d, 0x54, 0x69, 0x6d, 0x65, 0x32, 0x9e,
	0x01, 0x0a, 0x13, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x86, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x44, 0x61,
	0x69, 0x6c, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x12, 0x25, 0x2e, 0x62, 0x6c, 0x61,
	0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x61,
	0x69, 0x6c, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x62, 0x6c, 0x61, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x22, 0x2f,
	0xda, 0x41, 0x04, 0x75, 0x73, 0x65, 0x72, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x22, 0x12, 0x20, 0x2f,
	0x76, 0x31, 0x2f, 0x7b, 0x75, 0x73, 0x65, 0x72, 0x3d, 0x75, 0x73, 0x65, 0x72, 0x73, 0x2f, 0x2a,
	0x7d, 0x2f, 0x64, 0x61, 0x69, 0x6c, 0x79, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x42,
	0x38, 0x5a, 0x36, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6f,
	0x2d, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x62, 0x61, 0x72, 0x2d, 0x61,
	0x70, 0x69, 0x73, 0x2f, 0x67, 0x6f, 0x2f, 0x62, 0x6c, 0x61, 0x73, 0x74, 0x2f, 0x76, 0x31, 0x2f,
	0x75, 0x73, 0x65, 0x72, 0x3b, 0x75, 0x73, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_blast_v1_user_dailycheckin_proto_rawDescOnce sync.Once
	file_blast_v1_user_dailycheckin_proto_rawDescData = file_blast_v1_user_dailycheckin_proto_rawDesc
)

func file_blast_v1_user_dailycheckin_proto_rawDescGZIP() []byte {
	file_blast_v1_user_dailycheckin_proto_rawDescOnce.Do(func() {
		file_blast_v1_user_dailycheckin_proto_rawDescData = protoimpl.X.CompressGZIP(file_blast_v1_user_dailycheckin_proto_rawDescData)
	})
	return file_blast_v1_user_dailycheckin_proto_rawDescData
}

var file_blast_v1_user_dailycheckin_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_blast_v1_user_dailycheckin_proto_goTypes = []interface{}{
	(*GetDailyCheckinRequest)(nil),   // 0: blast.v1.user.GetDailyCheckinRequest
	(*ClaimDailyCheckinRequest)(nil), // 1: blast.v1.user.ClaimDailyCheckinRequest
	(*DailyCheckin)(nil),             // 2: blast.v1.user.DailyCheckin
	(*DailyCheckinClaim)(nil),        // 3: blast.v1.user.DailyCheckinClaim
	(*timestamppb.Timestamp)(nil),    // 4: google.protobuf.Timestamp
}
var file_blast_v1_user_dailycheckin_proto_depIdxs = []int32{
	3, // 0: blast.v1.user.DailyCheckin.last_claim:type_name -> blast.v1.user.DailyCheckinClaim
	4, // 1: blast.v1.user.DailyCheckinClaim.claim_time:type_name -> google.protobuf.Timestamp
	0, // 2: blast.v1.user.DailyCheckinService.GetDailyCheckin:input_type -> blast.v1.user.GetDailyCheckinRequest
	2, // 3: blast.v1.user.DailyCheckinService.GetDailyCheckin:output_type -> blast.v1.user.DailyCheckin
	3, // [3:4] is the sub-list for method output_type
	2, // [2:3] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_blast_v1_user_dailycheckin_proto_init() }
func file_blast_v1_user_dailycheckin_proto_init() {
	if File_blast_v1_user_dailycheckin_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_blast_v1_user_dailycheckin_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDailyCheckinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blast_v1_user_dailycheckin_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClaimDailyCheckinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blast_v1_user_dailycheckin_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DailyCheckin); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blast_v1_user_dailycheckin_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DailyCheckinClaim); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_blast_v1_user_dailycheckin_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_blast_v1_user_dailycheckin_proto_goTypes,
		DependencyIndexes: file_blast_v1_user_dailycheckin_proto_depIdxs,
		MessageInfos:      file_blast_v1_user_dailycheckin_proto_msgTypes,
	}.Build()
	File_blast_v1_user_dailycheckin_proto = out.File
	file_blast_v1_user_dailycheckin_proto_rawDesc = nil
	file_blast_v1_user_dailycheckin_proto_goTypes = nil
	file_blast_v1_user_dailycheckin_proto_depIdxs = nil
}

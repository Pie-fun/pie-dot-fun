// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: blast/v1/chain/query.proto

package chain

import (
	nft "github.com/ao-labs/spacebar-apis/go/blast/v1/nft"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/fieldmaskpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DelegationType int32

const (
	DelegationType_DELEGATION_TYPE_UNSPECIFIED DelegationType = 0
	DelegationType_DELEGATION_TYPE_ALL         DelegationType = 1
	DelegationType_DELEGATION_TYPE_CONTRACT    DelegationType = 2
	DelegationType_DELEGATION_TYPE_ERC721      DelegationType = 3
)

// Enum value maps for DelegationType.
var (
	DelegationType_name = map[int32]string{
		0: "DELEGATION_TYPE_UNSPECIFIED",
		1: "DELEGATION_TYPE_ALL",
		2: "DELEGATION_TYPE_CONTRACT",
		3: "DELEGATION_TYPE_ERC721",
	}
	DelegationType_value = map[string]int32{
		"DELEGATION_TYPE_UNSPECIFIED": 0,
		"DELEGATION_TYPE_ALL":         1,
		"DELEGATION_TYPE_CONTRACT":    2,
		"DELEGATION_TYPE_ERC721":      3,
	}
)

func (x DelegationType) Enum() *DelegationType {
	p := new(DelegationType)
	*p = x
	return p
}

func (x DelegationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DelegationType) Descriptor() protoreflect.EnumDescriptor {
	return file_blast_v1_chain_query_proto_enumTypes[0].Descriptor()
}

func (DelegationType) Type() protoreflect.EnumType {
	return &file_blast_v1_chain_query_proto_enumTypes[0]
}

func (x DelegationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DelegationType.Descriptor instead.
func (DelegationType) EnumDescriptor() ([]byte, []int) {
	return file_blast_v1_chain_query_proto_rawDescGZIP(), []int{0}
}

// The state of the transaction receipt.
type ReceiptStatus int32

const (
	// RECEIPT_STATUS_FAILED is the status code of a transaction if execution failed.
	ReceiptStatus_RECEIPT_STATUS_FAILED ReceiptStatus = 0
	// RECEIPT_STATUS_SUCCESSFUL is the status code of a transaction if execution succeeded.
	ReceiptStatus_RECEIPT_STATUS_SUCCESSFUL ReceiptStatus = 1
)

// Enum value maps for ReceiptStatus.
var (
	ReceiptStatus_name = map[int32]string{
		0: "RECEIPT_STATUS_FAILED",
		1: "RECEIPT_STATUS_SUCCESSFUL",
	}
	ReceiptStatus_value = map[string]int32{
		"RECEIPT_STATUS_FAILED":     0,
		"RECEIPT_STATUS_SUCCESSFUL": 1,
	}
)

func (x ReceiptStatus) Enum() *ReceiptStatus {
	p := new(ReceiptStatus)
	*p = x
	return p
}

func (x ReceiptStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReceiptStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_blast_v1_chain_query_proto_enumTypes[1].Descriptor()
}

func (ReceiptStatus) Type() protoreflect.EnumType {
	return &file_blast_v1_chain_query_proto_enumTypes[1]
}

func (x ReceiptStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ReceiptStatus.Descriptor instead.
func (ReceiptStatus) EnumDescriptor() ([]byte, []int) {
	return file_blast_v1_chain_query_proto_rawDescGZIP(), []int{1}
}

type MintScoreEvent_ScoreCategory int32

const (
	MintScoreEvent_SCORE_CATEGORY_UNSPECIFIED MintScoreEvent_ScoreCategory = 0
	MintScoreEvent_SINGLE_PLAYER              MintScoreEvent_ScoreCategory = 1
	MintScoreEvent_MULTI_PLAYER               MintScoreEvent_ScoreCategory = 2
)

// Enum value maps for MintScoreEvent_ScoreCategory.
var (
	MintScoreEvent_ScoreCategory_name = map[int32]string{
		0: "SCORE_CATEGORY_UNSPECIFIED",
		1: "SINGLE_PLAYER",
		2: "MULTI_PLAYER",
	}
	MintScoreEvent_ScoreCategory_value = map[string]int32{
		"SCORE_CATEGORY_UNSPECIFIED": 0,
		"SINGLE_PLAYER":              1,
		"MULTI_PLAYER":               2,
	}
)

func (x MintScoreEvent_ScoreCategory) Enum() *MintScoreEvent_ScoreCategory {
	p := new(MintScoreEvent_ScoreCategory)
	*p = x
	return p
}

func (x MintScoreEvent_ScoreCategory) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MintScoreEvent_ScoreCategory) Descriptor() protoreflect.EnumDescriptor {
	return file_blast_v1_chain_query_proto_enumTypes[2].Descriptor()
}

func (MintScoreEvent_ScoreCategory) Type() protoreflect.EnumType {
	return &file_blast_v1_chain_query_proto_enumTypes[2]
}

func (x MintScoreEvent_ScoreCategory) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MintScoreEvent_ScoreCategory.Descriptor instead.
func (MintScoreEvent_ScoreCategory) EnumDescriptor() ([]byte, []int) {
	return file_blast_v1_chain_query_proto_rawDescGZIP(), []int{15, 0}
}

type QueryReceiptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TxHash string `protobuf:"bytes,1,opt,name=tx_hash,json=txHash,proto3" json:"tx_hash,omitempty"`
	// e.g. "60s", "5m", "1h30m"
	//
	// The amount of time to wait for the transaction to be mined.
	//
	// If the transaction is not mined within this time, server will return 504 Gateway Timeout(DEADLINE_EXCEEDED).
	//
	// The default is 5 minutes.
	//
	// The maximum allowed timeout is 30 minutes. If the value is greater than 30 minutes, server will automatically set it to 30 minutes.
	//
	// If longer timeout is needed, please retry after the previous request times out.
	Timeout string `protobuf:"bytes,2,opt,name=timeout,proto3" json:"timeout,omitempty"`
}

func (x *QueryReceiptRequest) Reset() {
	*x = QueryReceiptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blast_v1_chain_query_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryReceiptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryReceiptRequest) ProtoMessage() {}

func (x *QueryReceiptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blast_v1_chain_query_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryReceiptRequest.ProtoReflect.Descriptor instead.
func (*QueryReceiptRequest) Descriptor() ([]byte, []int) {
	return file_blast_v1_chain_query_proto_rawDescGZIP(), []int{0}
}

func (x *QueryReceiptRequest) GetTxHash() string {
	if x != nil {
		return x.TxHash
	}
	return ""
}

func (x *QueryReceiptRequest) GetTimeout() string {
	if x != nil {
		return x.Timeout
	}
	return ""
}

type QueryQueryTransactionCountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address     string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	BlockNumber uint64 `protobuf:"varint,2,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
}

func (x *QueryQueryTransactionCountRequest) Reset() {
	*x = QueryQueryTransactionCountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blast_v1_chain_query_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryQueryTransactionCountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryQueryTransactionCountRequest) ProtoMessage() {}

func (x *QueryQueryTransactionCountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blast_v1_chain_query_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryQueryTransactionCountRequest.ProtoReflect.Descriptor instead.
func (*QueryQueryTransactionCountRequest) Descriptor() ([]byte, []int) {
	return file_blast_v1_chain_query_proto_rawDescGZIP(), []int{1}
}

func (x *QueryQueryTransactionCountRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *QueryQueryTransactionCountRequest) GetBlockNumber() uint64 {
	if x != nil {
		return x.BlockNumber
	}
	return 0
}

type QueryQueryTransactionCountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count uint64 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *QueryQueryTransactionCountResponse) Reset() {
	*x = QueryQueryTransactionCountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blast_v1_chain_query_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryQueryTransactionCountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryQueryTransactionCountResponse) ProtoMessage() {}

func (x *QueryQueryTransactionCountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blast_v1_chain_query_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryQueryTransactionCountResponse.ProtoReflect.Descriptor instead.
func (*QueryQueryTransactionCountResponse) Descriptor() ([]byte, []int) {
	return file_blast_v1_chain_query_proto_rawDescGZIP(), []int{2}
}

func (x *QueryQueryTransactionCountResponse) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type QueryDelegateCashRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string          `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Chains  []nft.ChainType `protobuf:"varint,2,rep,packed,name=chains,proto3,enum=blast.v1.nft.ChainType" json:"chains,omitempty"`
}

func (x *QueryDelegateCashRequest) Reset() {
	*x = QueryDelegateCashRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blast_v1_chain_query_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDelegateCashRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDelegateCashRequest) ProtoMessage() {}

func (x *QueryDelegateCashRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blast_v1_chain_query_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDelegateCashRequest.ProtoReflect.Descriptor instead.
func (*QueryDelegateCashRequest) Descriptor() ([]byte, []int) {
	return file_blast_v1_chain_query_proto_rawDescGZIP(), []int{3}
}

func (x *QueryDelegateCashRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *QueryDelegateCashRequest) GetChains() []nft.ChainType {
	if x != nil {
		return x.Chains
	}
	return nil
}

type QueryDelegateCashResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Delegates []*Delegate `protobuf:"bytes,1,rep,name=delegates,proto3" json:"delegates,omitempty"`
}

func (x *QueryDelegateCashResponse) Reset() {
	*x = QueryDelegateCashResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blast_v1_chain_query_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryDelegateCashResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryDelegateCashResponse) ProtoMessage() {}

func (x *QueryDelegateCashResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blast_v1_chain_query_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryDelegateCashResponse.ProtoReflect.Descriptor instead.
func (*QueryDelegateCashResponse) Descriptor() ([]byte, []int) {
	return file_blast_v1_chain_query_proto_rawDescGZIP(), []int{4}
}

func (x *QueryDelegateCashResponse) GetDelegates() []*Delegate {
	if x != nil {
		return x.Delegates
	}
	return nil
}

type QueryStakingContractAddressRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *QueryStakingContractAddressRequest) Reset() {
	*x = QueryStakingContractAddressRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blast_v1_chain_query_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryStakingContractAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryStakingContractAddressRequest) ProtoMessage() {}

func (x *QueryStakingContractAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blast_v1_chain_query_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryStakingContractAddressRequest.ProtoReflect.Descriptor instead.
func (*QueryStakingContractAddressRequest) Descriptor() ([]byte, []int) {
	return file_blast_v1_chain_query_proto_rawDescGZIP(), []int{5}
}

func (x *QueryStakingContractAddressRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type QueryStakingContractAddressResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractAddress string `protobuf:"bytes,1,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
}

func (x *QueryStakingContractAddressResponse) Reset() {
	*x = QueryStakingContractAddressResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blast_v1_chain_query_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryStakingContractAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryStakingContractAddressResponse) ProtoMessage() {}

func (x *QueryStakingContractAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blast_v1_chain_query_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryStakingContractAddressResponse.ProtoReflect.Descriptor instead.
func (*QueryStakingContractAddressResponse) Descriptor() ([]byte, []int) {
	return file_blast_v1_chain_query_proto_rawDescGZIP(), []int{6}
}

func (x *QueryStakingContractAddressResponse) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

type QueryStakingAmountRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *QueryStakingAmountRequest) Reset() {
	*x = QueryStakingAmountRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blast_v1_chain_query_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryStakingAmountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryStakingAmountRequest) ProtoMessage() {}

func (x *QueryStakingAmountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blast_v1_chain_query_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryStakingAmountRequest.ProtoReflect.Descriptor instead.
func (*QueryStakingAmountRequest) Descriptor() ([]byte, []int) {
	return file_blast_v1_chain_query_proto_rawDescGZIP(), []int{7}
}

func (x *QueryStakingAmountRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type QueryStakingAmountResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StakingAmount string `protobuf:"bytes,1,opt,name=staking_amount,json=stakingAmount,proto3" json:"staking_amount,omitempty"`
}

func (x *QueryStakingAmountResponse) Reset() {
	*x = QueryStakingAmountResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blast_v1_chain_query_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryStakingAmountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryStakingAmountResponse) ProtoMessage() {}

func (x *QueryStakingAmountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blast_v1_chain_query_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryStakingAmountResponse.ProtoReflect.Descriptor instead.
func (*QueryStakingAmountResponse) Descriptor() ([]byte, []int) {
	return file_blast_v1_chain_query_proto_rawDescGZIP(), []int{8}
}

func (x *QueryStakingAmountResponse) GetStakingAmount() string {
	if x != nil {
		return x.StakingAmount
	}
	return ""
}

type QueryOwnerOfRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractAddress string `protobuf:"bytes,1,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	TokenId         string `protobuf:"bytes,2,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
}

func (x *QueryOwnerOfRequest) Reset() {
	*x = QueryOwnerOfRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blast_v1_chain_query_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOwnerOfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOwnerOfRequest) ProtoMessage() {}

func (x *QueryOwnerOfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blast_v1_chain_query_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOwnerOfRequest.ProtoReflect.Descriptor instead.
func (*QueryOwnerOfRequest) Descriptor() ([]byte, []int) {
	return file_blast_v1_chain_query_proto_rawDescGZIP(), []int{9}
}

func (x *QueryOwnerOfRequest) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *QueryOwnerOfRequest) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

type QueryOwnerOfResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OwnerAddress string `protobuf:"bytes,1,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
}

func (x *QueryOwnerOfResponse) Reset() {
	*x = QueryOwnerOfResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blast_v1_chain_query_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryOwnerOfResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryOwnerOfResponse) ProtoMessage() {}

func (x *QueryOwnerOfResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blast_v1_chain_query_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryOwnerOfResponse.ProtoReflect.Descriptor instead.
func (*QueryOwnerOfResponse) Descriptor() ([]byte, []int) {
	return file_blast_v1_chain_query_proto_rawDescGZIP(), []int{10}
}

func (x *QueryOwnerOfResponse) GetOwnerAddress() string {
	if x != nil {
		return x.OwnerAddress
	}
	return ""
}

type QueryBalanceOfRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContractAddress string `protobuf:"bytes,1,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
	OwnerAddress    string `protobuf:"bytes,2,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
}

func (x *QueryBalanceOfRequest) Reset() {
	*x = QueryBalanceOfRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blast_v1_chain_query_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryBalanceOfRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBalanceOfRequest) ProtoMessage() {}

func (x *QueryBalanceOfRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blast_v1_chain_query_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBalanceOfRequest.ProtoReflect.Descriptor instead.
func (*QueryBalanceOfRequest) Descriptor() ([]byte, []int) {
	return file_blast_v1_chain_query_proto_rawDescGZIP(), []int{11}
}

func (x *QueryBalanceOfRequest) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

func (x *QueryBalanceOfRequest) GetOwnerAddress() string {
	if x != nil {
		return x.OwnerAddress
	}
	return ""
}

type QueryBalanceOfResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Balance uint32 `protobuf:"varint,1,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *QueryBalanceOfResponse) Reset() {
	*x = QueryBalanceOfResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blast_v1_chain_query_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryBalanceOfResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryBalanceOfResponse) ProtoMessage() {}

func (x *QueryBalanceOfResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blast_v1_chain_query_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryBalanceOfResponse.ProtoReflect.Descriptor instead.
func (*QueryBalanceOfResponse) Descriptor() ([]byte, []int) {
	return file_blast_v1_chain_query_proto_rawDescGZIP(), []int{12}
}

func (x *QueryBalanceOfResponse) GetBalance() uint32 {
	if x != nil {
		return x.Balance
	}
	return 0
}

type Delegate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     DelegationType `protobuf:"varint,1,opt,name=type,proto3,enum=blast.v1.chain.DelegationType" json:"type,omitempty"`
	From     string         `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`
	To       string         `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	Contract string         `protobuf:"bytes,4,opt,name=contract,proto3" json:"contract,omitempty"`
	TokenId  string         `protobuf:"bytes,5,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
}

func (x *Delegate) Reset() {
	*x = Delegate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blast_v1_chain_query_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Delegate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Delegate) ProtoMessage() {}

func (x *Delegate) ProtoReflect() protoreflect.Message {
	mi := &file_blast_v1_chain_query_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Delegate.ProtoReflect.Descriptor instead.
func (*Delegate) Descriptor() ([]byte, []int) {
	return file_blast_v1_chain_query_proto_rawDescGZIP(), []int{13}
}

func (x *Delegate) GetType() DelegationType {
	if x != nil {
		return x.Type
	}
	return DelegationType_DELEGATION_TYPE_UNSPECIFIED
}

func (x *Delegate) GetFrom() string {
	if x != nil {
		return x.From
	}
	return ""
}

func (x *Delegate) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *Delegate) GetContract() string {
	if x != nil {
		return x.Contract
	}
	return ""
}

func (x *Delegate) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

type Receipt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status            ReceiptStatus `protobuf:"varint,1,opt,name=status,proto3,enum=blast.v1.chain.ReceiptStatus" json:"status,omitempty"`
	TransactionHash   string        `protobuf:"bytes,2,opt,name=transaction_hash,json=transactionHash,proto3" json:"transaction_hash,omitempty"`
	BlockHash         string        `protobuf:"bytes,3,opt,name=block_hash,json=blockHash,proto3" json:"block_hash,omitempty"`
	BlockNumber       string        `protobuf:"bytes,4,opt,name=block_number,json=blockNumber,proto3" json:"block_number,omitempty"`
	CumulativeGasUsed uint64        `protobuf:"varint,5,opt,name=cumulative_gas_used,json=cumulativeGasUsed,proto3" json:"cumulative_gas_used,omitempty"`
	GasUsed           uint64        `protobuf:"varint,6,opt,name=gas_used,json=gasUsed,proto3" json:"gas_used,omitempty"`
	ContractAddress   string        `protobuf:"bytes,7,opt,name=contract_address,json=contractAddress,proto3" json:"contract_address,omitempty"`
}

func (x *Receipt) Reset() {
	*x = Receipt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blast_v1_chain_query_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Receipt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Receipt) ProtoMessage() {}

func (x *Receipt) ProtoReflect() protoreflect.Message {
	mi := &file_blast_v1_chain_query_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Receipt.ProtoReflect.Descriptor instead.
func (*Receipt) Descriptor() ([]byte, []int) {
	return file_blast_v1_chain_query_proto_rawDescGZIP(), []int{14}
}

func (x *Receipt) GetStatus() ReceiptStatus {
	if x != nil {
		return x.Status
	}
	return ReceiptStatus_RECEIPT_STATUS_FAILED
}

func (x *Receipt) GetTransactionHash() string {
	if x != nil {
		return x.TransactionHash
	}
	return ""
}

func (x *Receipt) GetBlockHash() string {
	if x != nil {
		return x.BlockHash
	}
	return ""
}

func (x *Receipt) GetBlockNumber() string {
	if x != nil {
		return x.BlockNumber
	}
	return ""
}

func (x *Receipt) GetCumulativeGasUsed() uint64 {
	if x != nil {
		return x.CumulativeGasUsed
	}
	return 0
}

func (x *Receipt) GetGasUsed() uint64 {
	if x != nil {
		return x.GasUsed
	}
	return 0
}

func (x *Receipt) GetContractAddress() string {
	if x != nil {
		return x.ContractAddress
	}
	return ""
}

type MintScoreEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category *MintScoreEvent_ScoreCategory `protobuf:"varint,1,opt,name=category,proto3,enum=blast.v1.chain.MintScoreEvent_ScoreCategory,oneof" json:"category,omitempty"`
	Score    *uint64                       `protobuf:"varint,2,opt,name=score,proto3,oneof" json:"score,omitempty"`
	Address  *string                       `protobuf:"bytes,3,opt,name=address,proto3,oneof" json:"address,omitempty"`
	TokenId  *string                       `protobuf:"bytes,4,opt,name=token_id,json=tokenId,proto3,oneof" json:"token_id,omitempty"`
}

func (x *MintScoreEvent) Reset() {
	*x = MintScoreEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blast_v1_chain_query_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MintScoreEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MintScoreEvent) ProtoMessage() {}

func (x *MintScoreEvent) ProtoReflect() protoreflect.Message {
	mi := &file_blast_v1_chain_query_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MintScoreEvent.ProtoReflect.Descriptor instead.
func (*MintScoreEvent) Descriptor() ([]byte, []int) {
	return file_blast_v1_chain_query_proto_rawDescGZIP(), []int{15}
}

func (x *MintScoreEvent) GetCategory() MintScoreEvent_ScoreCategory {
	if x != nil && x.Category != nil {
		return *x.Category
	}
	return MintScoreEvent_SCORE_CATEGORY_UNSPECIFIED
}

func (x *MintScoreEvent) GetScore() uint64 {
	if x != nil && x.Score != nil {
		return *x.Score
	}
	return 0
}

func (x *MintScoreEvent) GetAddress() string {
	if x != nil && x.Address != nil {
		return *x.Address
	}
	return ""
}

func (x *MintScoreEvent) GetTokenId() string {
	if x != nil && x.TokenId != nil {
		return *x.TokenId
	}
	return ""
}

type DeployTBAAndMintProtoShipEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfileTba string `protobuf:"bytes,1,opt,name=profile_tba,json=profileTba,proto3" json:"profile_tba,omitempty"`
	TokenId    string `protobuf:"bytes,2,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
}

func (x *DeployTBAAndMintProtoShipEvent) Reset() {
	*x = DeployTBAAndMintProtoShipEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blast_v1_chain_query_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeployTBAAndMintProtoShipEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeployTBAAndMintProtoShipEvent) ProtoMessage() {}

func (x *DeployTBAAndMintProtoShipEvent) ProtoReflect() protoreflect.Message {
	mi := &file_blast_v1_chain_query_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeployTBAAndMintProtoShipEvent.ProtoReflect.Descriptor instead.
func (*DeployTBAAndMintProtoShipEvent) Descriptor() ([]byte, []int) {
	return file_blast_v1_chain_query_proto_rawDescGZIP(), []int{16}
}

func (x *DeployTBAAndMintProtoShipEvent) GetProfileTba() string {
	if x != nil {
		return x.ProfileTba
	}
	return ""
}

func (x *DeployTBAAndMintProtoShipEvent) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

var File_blast_v1_chain_query_proto protoreflect.FileDescriptor

var file_blast_v1_chain_query_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x62, 0x6c, 0x61, 0x73, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x62, 0x6c,
	0x61, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x1a, 0x1c, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68,
	0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69,
	0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x16, 0x62, 0x6c, 0x61, 0x73, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x66, 0x74, 0x2f, 0x6e, 0x66,
	0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x4e, 0x0a, 0x13, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x07, 0x74, 0x78, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x06, 0x74, 0x78, 0x48, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a,
	0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x22, 0x66, 0x0a, 0x21, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2,
	0x41, 0x01, 0x02, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22,
	0x3a, 0x0a, 0x22, 0x51, 0x75, 0x65, 0x72, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x71, 0x0a, 0x18, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x43, 0x61, 0x73, 0x68,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x35, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x62, 0x6c, 0x61, 0x73, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x6e, 0x66, 0x74, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x06, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x22, 0x53,
	0x0a, 0x19, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x43,
	0x61, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x09, 0x64,
	0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x62, 0x6c, 0x61, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e,
	0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x73, 0x22, 0x44, 0x0a, 0x22, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x6b,
	0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02,
	0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x50, 0x0a, 0x23, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x3b, 0x0a, 0x19, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x43, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e,
	0x67, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x73, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x67, 0x0a,
	0x13, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4f, 0x66, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04,
	0xe2, 0x41, 0x01, 0x02, 0x52, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x07, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x22, 0x3b, 0x0a, 0x14, 0x51, 0x75, 0x65, 0x72, 0x79, 0x4f,
	0x77, 0x6e, 0x65, 0x72, 0x4f, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23,
	0x0a, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x22, 0x73, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x4f, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x10,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x0f, 0x63, 0x6f,
	0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x29, 0x0a,
	0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x0c, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x32, 0x0a, 0x16, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4f, 0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x99, 0x01, 0x0a,
	0x08, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x12, 0x32, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x62, 0x6c, 0x61, 0x73, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74,
	0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x19, 0x0a,
	0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x22, 0xa3, 0x02, 0x0a, 0x07, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x70, 0x74, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x62, 0x6c, 0x61, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x74,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x61, 0x73, 0x68, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x61, 0x73, 0x68, 0x12, 0x1d, 0x0a, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x68, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x48, 0x61, 0x73, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x6e,
	0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x75, 0x6d, 0x75,
	0x6c, 0x61, 0x74, 0x69, 0x76, 0x65, 0x5f, 0x67, 0x61, 0x73, 0x5f, 0x75, 0x73, 0x65, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x11, 0x63, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x76,
	0x65, 0x47, 0x61, 0x73, 0x55, 0x73, 0x65, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x61, 0x73, 0x5f,
	0x75, 0x73, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x67, 0x61, 0x73, 0x55,
	0x73, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0xbf,
	0x02, 0x0a, 0x0e, 0x4d, 0x69, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x4d, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x62, 0x6c, 0x61, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x2e, 0x4d, 0x69, 0x6e, 0x74, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x48, 0x00, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x88, 0x01, 0x01,
	0x12, 0x19, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x48,
	0x01, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x88, 0x01, 0x01, 0x12, 0x1d, 0x0a, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x1e, 0x0a, 0x08, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x03, 0x52, 0x07,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x22, 0x54, 0x0a, 0x0d, 0x53, 0x63,
	0x6f, 0x72, 0x65, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x1a, 0x53,
	0x43, 0x4f, 0x52, 0x45, 0x5f, 0x43, 0x41, 0x54, 0x45, 0x47, 0x4f, 0x52, 0x59, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x53,
	0x49, 0x4e, 0x47, 0x4c, 0x45, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x10, 0x01, 0x12, 0x10,
	0x0a, 0x0c, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x10, 0x02,
	0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x42, 0x08, 0x0a,
	0x06, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64,
	0x22, 0x5c, 0x0a, 0x1e, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x54, 0x42, 0x41, 0x41, 0x6e, 0x64,
	0x4d, 0x69, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x53, 0x68, 0x69, 0x70, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x62,
	0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x54, 0x62, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x2a, 0x84,
	0x01, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1f, 0x0a, 0x1b, 0x44, 0x45, 0x4c, 0x45, 0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44,
	0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x44, 0x45, 0x4c, 0x45, 0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x4c, 0x4c, 0x10, 0x01, 0x12, 0x1c, 0x0a, 0x18, 0x44,
	0x45, 0x4c, 0x45, 0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43,
	0x4f, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x54, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x44, 0x45, 0x4c,
	0x45, 0x47, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x52, 0x43,
	0x37, 0x32, 0x31, 0x10, 0x03, 0x2a, 0x49, 0x0a, 0x0d, 0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x19, 0x0a, 0x15, 0x52, 0x45, 0x43, 0x45, 0x49, 0x50,
	0x54, 0x5f, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x45, 0x43, 0x45, 0x49, 0x50, 0x54, 0x5f, 0x53, 0x54, 0x41,
	0x54, 0x55, 0x53, 0x5f, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x46, 0x55, 0x4c, 0x10, 0x01,
	0x32, 0x9b, 0x08, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6f, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52,
	0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0x23, 0x2e, 0x62, 0x6c, 0x61, 0x73, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x62, 0x6c,
	0x61, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x70, 0x74, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x22,
	0x16, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x3a, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x12, 0xaa, 0x01, 0x0a, 0x15, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x31, 0x2e, 0x62, 0x6c, 0x61, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x32, 0x2e, 0x62, 0x6c, 0x61, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x24,
	0x3a, 0x01, 0x2a, 0x22, 0x1f, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x3a, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x90, 0x01, 0x0a, 0x11, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65,
	0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x43, 0x61, 0x73, 0x68, 0x12, 0x28, 0x2e, 0x62, 0x6c, 0x61,
	0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x44, 0x65, 0x6c, 0x65, 0x67, 0x61, 0x74, 0x65, 0x43, 0x61, 0x73, 0x68, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x62, 0x6c, 0x61, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x43, 0x61, 0x73, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x3a, 0x71, 0x75, 0x65, 0x72, 0x79, 0x44, 0x65, 0x6c, 0x65, 0x67,
	0x61, 0x74, 0x65, 0x43, 0x61, 0x73, 0x68, 0x12, 0xb8, 0x01, 0x0a, 0x1b, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x32, 0x2e, 0x62, 0x6c, 0x61, 0x73, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74,
	0x61, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x33, 0x2e, 0x62, 0x6c,
	0x61, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x3a, 0x01, 0x2a, 0x22, 0x25, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x3a, 0x71, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x6b,
	0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x94, 0x01, 0x0a, 0x12, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x6b,
	0x69, 0x6e, 0x67, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29, 0x2e, 0x62, 0x6c, 0x61, 0x73,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x62, 0x6c, 0x61, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x6b, 0x69,
	0x6e, 0x67, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a, 0x22, 0x1c, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x3a, 0x71, 0x75, 0x65, 0x72, 0x79, 0x53, 0x74, 0x61, 0x6b,
	0x69, 0x6e, 0x67, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x7c, 0x0a, 0x0c, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4f, 0x66, 0x12, 0x23, 0x2e, 0x62, 0x6c, 0x61, 0x73,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4f, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x62, 0x6c, 0x61, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4f, 0x66, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x22,
	0x16, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x3a, 0x71, 0x75, 0x65, 0x72, 0x79,
	0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4f, 0x66, 0x12, 0x84, 0x01, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4f, 0x66, 0x12, 0x25, 0x2e, 0x62, 0x6c, 0x61,
	0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4f, 0x66, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x26, 0x2e, 0x62, 0x6c, 0x61, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4f,
	0x66, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1d, 0x3a, 0x01, 0x2a, 0x22, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x3a,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4f, 0x66, 0x42, 0x3a,
	0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6f, 0x2d,
	0x6c, 0x61, 0x62, 0x73, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x62, 0x61, 0x72, 0x2d, 0x61, 0x70,
	0x69, 0x73, 0x2f, 0x67, 0x6f, 0x2f, 0x62, 0x6c, 0x61, 0x73, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x3b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_blast_v1_chain_query_proto_rawDescOnce sync.Once
	file_blast_v1_chain_query_proto_rawDescData = file_blast_v1_chain_query_proto_rawDesc
)

func file_blast_v1_chain_query_proto_rawDescGZIP() []byte {
	file_blast_v1_chain_query_proto_rawDescOnce.Do(func() {
		file_blast_v1_chain_query_proto_rawDescData = protoimpl.X.CompressGZIP(file_blast_v1_chain_query_proto_rawDescData)
	})
	return file_blast_v1_chain_query_proto_rawDescData
}

var file_blast_v1_chain_query_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_blast_v1_chain_query_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_blast_v1_chain_query_proto_goTypes = []interface{}{
	(DelegationType)(0),                         // 0: blast.v1.chain.DelegationType
	(ReceiptStatus)(0),                          // 1: blast.v1.chain.ReceiptStatus
	(MintScoreEvent_ScoreCategory)(0),           // 2: blast.v1.chain.MintScoreEvent.ScoreCategory
	(*QueryReceiptRequest)(nil),                 // 3: blast.v1.chain.QueryReceiptRequest
	(*QueryQueryTransactionCountRequest)(nil),   // 4: blast.v1.chain.QueryQueryTransactionCountRequest
	(*QueryQueryTransactionCountResponse)(nil),  // 5: blast.v1.chain.QueryQueryTransactionCountResponse
	(*QueryDelegateCashRequest)(nil),            // 6: blast.v1.chain.QueryDelegateCashRequest
	(*QueryDelegateCashResponse)(nil),           // 7: blast.v1.chain.QueryDelegateCashResponse
	(*QueryStakingContractAddressRequest)(nil),  // 8: blast.v1.chain.QueryStakingContractAddressRequest
	(*QueryStakingContractAddressResponse)(nil), // 9: blast.v1.chain.QueryStakingContractAddressResponse
	(*QueryStakingAmountRequest)(nil),           // 10: blast.v1.chain.QueryStakingAmountRequest
	(*QueryStakingAmountResponse)(nil),          // 11: blast.v1.chain.QueryStakingAmountResponse
	(*QueryOwnerOfRequest)(nil),                 // 12: blast.v1.chain.QueryOwnerOfRequest
	(*QueryOwnerOfResponse)(nil),                // 13: blast.v1.chain.QueryOwnerOfResponse
	(*QueryBalanceOfRequest)(nil),               // 14: blast.v1.chain.QueryBalanceOfRequest
	(*QueryBalanceOfResponse)(nil),              // 15: blast.v1.chain.QueryBalanceOfResponse
	(*Delegate)(nil),                            // 16: blast.v1.chain.Delegate
	(*Receipt)(nil),                             // 17: blast.v1.chain.Receipt
	(*MintScoreEvent)(nil),                      // 18: blast.v1.chain.MintScoreEvent
	(*DeployTBAAndMintProtoShipEvent)(nil),      // 19: blast.v1.chain.DeployTBAAndMintProtoShipEvent
	(nft.ChainType)(0),                          // 20: blast.v1.nft.ChainType
}
var file_blast_v1_chain_query_proto_depIdxs = []int32{
	20, // 0: blast.v1.chain.QueryDelegateCashRequest.chains:type_name -> blast.v1.nft.ChainType
	16, // 1: blast.v1.chain.QueryDelegateCashResponse.delegates:type_name -> blast.v1.chain.Delegate
	0,  // 2: blast.v1.chain.Delegate.type:type_name -> blast.v1.chain.DelegationType
	1,  // 3: blast.v1.chain.Receipt.status:type_name -> blast.v1.chain.ReceiptStatus
	2,  // 4: blast.v1.chain.MintScoreEvent.category:type_name -> blast.v1.chain.MintScoreEvent.ScoreCategory
	3,  // 5: blast.v1.chain.ChainQueryService.QueryReceipt:input_type -> blast.v1.chain.QueryReceiptRequest
	4,  // 6: blast.v1.chain.ChainQueryService.QueryTransactionCount:input_type -> blast.v1.chain.QueryQueryTransactionCountRequest
	6,  // 7: blast.v1.chain.ChainQueryService.QueryDelegateCash:input_type -> blast.v1.chain.QueryDelegateCashRequest
	8,  // 8: blast.v1.chain.ChainQueryService.QueryStakingContractAddress:input_type -> blast.v1.chain.QueryStakingContractAddressRequest
	10, // 9: blast.v1.chain.ChainQueryService.QueryStakingAmount:input_type -> blast.v1.chain.QueryStakingAmountRequest
	12, // 10: blast.v1.chain.ChainQueryService.QueryOwnerOf:input_type -> blast.v1.chain.QueryOwnerOfRequest
	14, // 11: blast.v1.chain.ChainQueryService.QueryBalanceOf:input_type -> blast.v1.chain.QueryBalanceOfRequest
	17, // 12: blast.v1.chain.ChainQueryService.QueryReceipt:output_type -> blast.v1.chain.Receipt
	5,  // 13: blast.v1.chain.ChainQueryService.QueryTransactionCount:output_type -> blast.v1.chain.QueryQueryTransactionCountResponse
	7,  // 14: blast.v1.chain.ChainQueryService.QueryDelegateCash:output_type -> blast.v1.chain.QueryDelegateCashResponse
	9,  // 15: blast.v1.chain.ChainQueryService.QueryStakingContractAddress:output_type -> blast.v1.chain.QueryStakingContractAddressResponse
	11, // 16: blast.v1.chain.ChainQueryService.QueryStakingAmount:output_type -> blast.v1.chain.QueryStakingAmountResponse
	13, // 17: blast.v1.chain.ChainQueryService.QueryOwnerOf:output_type -> blast.v1.chain.QueryOwnerOfResponse
	15, // 18: blast.v1.chain.ChainQueryService.QueryBalanceOf:output_type -> blast.v1.chain.QueryBalanceOfResponse
	12, // [12:19] is the sub-list for method output_type
	5,  // [5:12] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_blast_v1_chain_query_proto_init() }
func file_blast_v1_chain_query_proto_init() {
	if File_blast_v1_chain_query_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_blast_v1_chain_query_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryReceiptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blast_v1_chain_query_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryQueryTransactionCountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blast_v1_chain_query_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryQueryTransactionCountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blast_v1_chain_query_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDelegateCashRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blast_v1_chain_query_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryDelegateCashResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blast_v1_chain_query_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryStakingContractAddressRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blast_v1_chain_query_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryStakingContractAddressResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blast_v1_chain_query_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryStakingAmountRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blast_v1_chain_query_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryStakingAmountResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blast_v1_chain_query_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOwnerOfRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blast_v1_chain_query_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryOwnerOfResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blast_v1_chain_query_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryBalanceOfRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blast_v1_chain_query_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryBalanceOfResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blast_v1_chain_query_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Delegate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blast_v1_chain_query_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Receipt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blast_v1_chain_query_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MintScoreEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blast_v1_chain_query_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeployTBAAndMintProtoShipEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_blast_v1_chain_query_proto_msgTypes[15].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_blast_v1_chain_query_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_blast_v1_chain_query_proto_goTypes,
		DependencyIndexes: file_blast_v1_chain_query_proto_depIdxs,
		EnumInfos:         file_blast_v1_chain_query_proto_enumTypes,
		MessageInfos:      file_blast_v1_chain_query_proto_msgTypes,
	}.Build()
	File_blast_v1_chain_query_proto = out.File
	file_blast_v1_chain_query_proto_rawDesc = nil
	file_blast_v1_chain_query_proto_goTypes = nil
	file_blast_v1_chain_query_proto_depIdxs = nil
}

// Code generated by protoc-gen-fake. DO NOT EDIT.

package chain

import (
	"github.com/ao-labs/protoc-gen-fake/pkg/fake"
)

// Default responses for ChainQueryService
var DefaultChainQueryServiceResponses = map[string]fake.Response{
	"/blast.v1.chain.ChainQueryService/QueryReceipt": {
		Method: "/blast.v1.chain.ChainQueryService/QueryReceipt",
		Response: &Receipt{
			Status:            0,
			TransactionHash:   "fake_TransactionHash",
			BlockHash:         "fake_BlockHash",
			BlockNumber:       "fake_BlockNumber",
			CumulativeGasUsed: 42,
			GasUsed:           42,
			ContractAddress:   "fake_ContractAddress",
		},
	},
	"/blast.v1.chain.ChainQueryService/QueryTransactionCount": {
		Method: "/blast.v1.chain.ChainQueryService/QueryTransactionCount",
		Response: &QueryQueryTransactionCountResponse{
			Count: 42,
		},
	},
	"/blast.v1.chain.ChainQueryService/QueryDelegateCash": {
		Method: "/blast.v1.chain.ChainQueryService/QueryDelegateCash",
		Response: &QueryDelegateCashResponse{
			Delegates: nil,
		},
	},
	"/blast.v1.chain.ChainQueryService/QueryStakingContractAddress": {
		Method: "/blast.v1.chain.ChainQueryService/QueryStakingContractAddress",
		Response: &QueryStakingContractAddressResponse{
			ContractAddress: "fake_ContractAddress",
		},
	},
	"/blast.v1.chain.ChainQueryService/QueryStakingAmount": {
		Method: "/blast.v1.chain.ChainQueryService/QueryStakingAmount",
		Response: &QueryStakingAmountResponse{
			StakingAmount: "fake_StakingAmount",
		},
	},
	"/blast.v1.chain.ChainQueryService/QueryOwnerOf": {
		Method: "/blast.v1.chain.ChainQueryService/QueryOwnerOf",
		Response: &QueryOwnerOfResponse{
			OwnerAddress: "fake_OwnerAddress",
		},
	},
	"/blast.v1.chain.ChainQueryService/QueryBalanceOf": {
		Method: "/blast.v1.chain.ChainQueryService/QueryBalanceOf",
		Response: &QueryBalanceOfResponse{
			Balance: 42,
		},
	},
}

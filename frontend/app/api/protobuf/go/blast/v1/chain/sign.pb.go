// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: blast/v1/chain/sign.proto

package chain

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/fieldmaskpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SignMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SignMessageRequest) Reset() {
	*x = SignMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blast_v1_chain_sign_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignMessageRequest) ProtoMessage() {}

func (x *SignMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blast_v1_chain_sign_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignMessageRequest.ProtoReflect.Descriptor instead.
func (*SignMessageRequest) Descriptor() ([]byte, []int) {
	return file_blast_v1_chain_sign_proto_rawDescGZIP(), []int{0}
}

func (x *SignMessageRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SignatureResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Message   string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SignatureResponse) Reset() {
	*x = SignatureResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blast_v1_chain_sign_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignatureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignatureResponse) ProtoMessage() {}

func (x *SignatureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blast_v1_chain_sign_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignatureResponse.ProtoReflect.Descriptor instead.
func (*SignatureResponse) Descriptor() ([]byte, []int) {
	return file_blast_v1_chain_sign_proto_rawDescGZIP(), []int{1}
}

func (x *SignatureResponse) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *SignatureResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SignatureTypedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string            `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Message   map[string]string `protobuf:"bytes,2,rep,name=message,proto3" json:"message,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SignatureTypedResponse) Reset() {
	*x = SignatureTypedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blast_v1_chain_sign_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignatureTypedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignatureTypedResponse) ProtoMessage() {}

func (x *SignatureTypedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blast_v1_chain_sign_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignatureTypedResponse.ProtoReflect.Descriptor instead.
func (*SignatureTypedResponse) Descriptor() ([]byte, []int) {
	return file_blast_v1_chain_sign_proto_rawDescGZIP(), []int{2}
}

func (x *SignatureTypedResponse) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *SignatureTypedResponse) GetMessage() map[string]string {
	if x != nil {
		return x.Message
	}
	return nil
}

type MintAndCreateSquareParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User        string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	MinStaking  string `protobuf:"bytes,2,opt,name=minStaking,proto3" json:"minStaking,omitempty"` // uint64 can be overflowed
	SignatureId string `protobuf:"bytes,3,opt,name=signatureId,proto3" json:"signatureId,omitempty"`
	Timestamp   uint32 `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Nonce       string `protobuf:"bytes,5,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *MintAndCreateSquareParams) Reset() {
	*x = MintAndCreateSquareParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blast_v1_chain_sign_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MintAndCreateSquareParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MintAndCreateSquareParams) ProtoMessage() {}

func (x *MintAndCreateSquareParams) ProtoReflect() protoreflect.Message {
	mi := &file_blast_v1_chain_sign_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MintAndCreateSquareParams.ProtoReflect.Descriptor instead.
func (*MintAndCreateSquareParams) Descriptor() ([]byte, []int) {
	return file_blast_v1_chain_sign_proto_rawDescGZIP(), []int{3}
}

func (x *MintAndCreateSquareParams) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *MintAndCreateSquareParams) GetMinStaking() string {
	if x != nil {
		return x.MinStaking
	}
	return ""
}

func (x *MintAndCreateSquareParams) GetSignatureId() string {
	if x != nil {
		return x.SignatureId
	}
	return ""
}

func (x *MintAndCreateSquareParams) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *MintAndCreateSquareParams) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

type SignMintSquareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params *MintAndCreateSquareParams `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *SignMintSquareRequest) Reset() {
	*x = SignMintSquareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blast_v1_chain_sign_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignMintSquareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignMintSquareRequest) ProtoMessage() {}

func (x *SignMintSquareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blast_v1_chain_sign_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignMintSquareRequest.ProtoReflect.Descriptor instead.
func (*SignMintSquareRequest) Descriptor() ([]byte, []int) {
	return file_blast_v1_chain_sign_proto_rawDescGZIP(), []int{4}
}

func (x *SignMintSquareRequest) GetParams() *MintAndCreateSquareParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type SignMintSquareResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string                     `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    *MintAndCreateSquareParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *SignMintSquareResponse) Reset() {
	*x = SignMintSquareResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blast_v1_chain_sign_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignMintSquareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignMintSquareResponse) ProtoMessage() {}

func (x *SignMintSquareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blast_v1_chain_sign_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignMintSquareResponse.ProtoReflect.Descriptor instead.
func (*SignMintSquareResponse) Descriptor() ([]byte, []int) {
	return file_blast_v1_chain_sign_proto_rawDescGZIP(), []int{5}
}

func (x *SignMintSquareResponse) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *SignMintSquareResponse) GetParams() *MintAndCreateSquareParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type JoinSquareParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User      string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	SquareId  uint32 `protobuf:"varint,2,opt,name=squareId,proto3" json:"squareId,omitempty"`
	Timestamp uint32 `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Nonce     string `protobuf:"bytes,4,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *JoinSquareParams) Reset() {
	*x = JoinSquareParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blast_v1_chain_sign_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinSquareParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinSquareParams) ProtoMessage() {}

func (x *JoinSquareParams) ProtoReflect() protoreflect.Message {
	mi := &file_blast_v1_chain_sign_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinSquareParams.ProtoReflect.Descriptor instead.
func (*JoinSquareParams) Descriptor() ([]byte, []int) {
	return file_blast_v1_chain_sign_proto_rawDescGZIP(), []int{6}
}

func (x *JoinSquareParams) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *JoinSquareParams) GetSquareId() uint32 {
	if x != nil {
		return x.SquareId
	}
	return 0
}

func (x *JoinSquareParams) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *JoinSquareParams) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

type SignJoinSquareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params *JoinSquareParams `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *SignJoinSquareRequest) Reset() {
	*x = SignJoinSquareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blast_v1_chain_sign_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignJoinSquareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignJoinSquareRequest) ProtoMessage() {}

func (x *SignJoinSquareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blast_v1_chain_sign_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignJoinSquareRequest.ProtoReflect.Descriptor instead.
func (*SignJoinSquareRequest) Descriptor() ([]byte, []int) {
	return file_blast_v1_chain_sign_proto_rawDescGZIP(), []int{7}
}

func (x *SignJoinSquareRequest) GetParams() *JoinSquareParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type SignJoinSquareResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string            `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    *JoinSquareParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *SignJoinSquareResponse) Reset() {
	*x = SignJoinSquareResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blast_v1_chain_sign_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignJoinSquareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignJoinSquareResponse) ProtoMessage() {}

func (x *SignJoinSquareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blast_v1_chain_sign_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignJoinSquareResponse.ProtoReflect.Descriptor instead.
func (*SignJoinSquareResponse) Descriptor() ([]byte, []int) {
	return file_blast_v1_chain_sign_proto_rawDescGZIP(), []int{8}
}

func (x *SignJoinSquareResponse) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *SignJoinSquareResponse) GetParams() *JoinSquareParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type TransferSquareParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User      string `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	From      uint32 `protobuf:"varint,2,opt,name=from,proto3" json:"from,omitempty"` // token id of the user's current square
	To        uint32 `protobuf:"varint,3,opt,name=to,proto3" json:"to,omitempty"`     // token id of the target square
	Timestamp uint32 `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Nonce     string `protobuf:"bytes,5,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *TransferSquareParams) Reset() {
	*x = TransferSquareParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blast_v1_chain_sign_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferSquareParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferSquareParams) ProtoMessage() {}

func (x *TransferSquareParams) ProtoReflect() protoreflect.Message {
	mi := &file_blast_v1_chain_sign_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferSquareParams.ProtoReflect.Descriptor instead.
func (*TransferSquareParams) Descriptor() ([]byte, []int) {
	return file_blast_v1_chain_sign_proto_rawDescGZIP(), []int{9}
}

func (x *TransferSquareParams) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *TransferSquareParams) GetFrom() uint32 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *TransferSquareParams) GetTo() uint32 {
	if x != nil {
		return x.To
	}
	return 0
}

func (x *TransferSquareParams) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TransferSquareParams) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

type SignTransferSquareRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params *TransferSquareParams `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *SignTransferSquareRequest) Reset() {
	*x = SignTransferSquareRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blast_v1_chain_sign_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignTransferSquareRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignTransferSquareRequest) ProtoMessage() {}

func (x *SignTransferSquareRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blast_v1_chain_sign_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignTransferSquareRequest.ProtoReflect.Descriptor instead.
func (*SignTransferSquareRequest) Descriptor() ([]byte, []int) {
	return file_blast_v1_chain_sign_proto_rawDescGZIP(), []int{10}
}

func (x *SignTransferSquareRequest) GetParams() *TransferSquareParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type SignTransferSquareResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string                `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    *TransferSquareParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *SignTransferSquareResponse) Reset() {
	*x = SignTransferSquareResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blast_v1_chain_sign_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignTransferSquareResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignTransferSquareResponse) ProtoMessage() {}

func (x *SignTransferSquareResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blast_v1_chain_sign_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignTransferSquareResponse.ProtoReflect.Descriptor instead.
func (*SignTransferSquareResponse) Descriptor() ([]byte, []int) {
	return file_blast_v1_chain_sign_proto_rawDescGZIP(), []int{11}
}

func (x *SignTransferSquareResponse) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *SignTransferSquareResponse) GetParams() *TransferSquareParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type UploadScoreParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Player         string `protobuf:"bytes,1,opt,name=player,proto3" json:"player,omitempty"`
	GameCode       uint32 `protobuf:"varint,2,opt,name=gameCode,proto3" json:"gameCode,omitempty"`
	SquareIdOrZero uint32 `protobuf:"varint,3,opt,name=squareIdOrZero,proto3" json:"squareIdOrZero,omitempty"`
	Score          uint32 `protobuf:"varint,4,opt,name=score,proto3" json:"score,omitempty"`
	GameId         string `protobuf:"bytes,5,opt,name=gameId,proto3" json:"gameId,omitempty"`
	Timestamp      uint32 `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Nonce          string `protobuf:"bytes,7,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *UploadScoreParams) Reset() {
	*x = UploadScoreParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blast_v1_chain_sign_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadScoreParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadScoreParams) ProtoMessage() {}

func (x *UploadScoreParams) ProtoReflect() protoreflect.Message {
	mi := &file_blast_v1_chain_sign_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadScoreParams.ProtoReflect.Descriptor instead.
func (*UploadScoreParams) Descriptor() ([]byte, []int) {
	return file_blast_v1_chain_sign_proto_rawDescGZIP(), []int{12}
}

func (x *UploadScoreParams) GetPlayer() string {
	if x != nil {
		return x.Player
	}
	return ""
}

func (x *UploadScoreParams) GetGameCode() uint32 {
	if x != nil {
		return x.GameCode
	}
	return 0
}

func (x *UploadScoreParams) GetSquareIdOrZero() uint32 {
	if x != nil {
		return x.SquareIdOrZero
	}
	return 0
}

func (x *UploadScoreParams) GetScore() uint32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *UploadScoreParams) GetGameId() string {
	if x != nil {
		return x.GameId
	}
	return ""
}

func (x *UploadScoreParams) GetTimestamp() uint32 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *UploadScoreParams) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

type SignUploadScoreRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Params *UploadScoreParams `protobuf:"bytes,1,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *SignUploadScoreRequest) Reset() {
	*x = SignUploadScoreRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blast_v1_chain_sign_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignUploadScoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignUploadScoreRequest) ProtoMessage() {}

func (x *SignUploadScoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_blast_v1_chain_sign_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignUploadScoreRequest.ProtoReflect.Descriptor instead.
func (*SignUploadScoreRequest) Descriptor() ([]byte, []int) {
	return file_blast_v1_chain_sign_proto_rawDescGZIP(), []int{13}
}

func (x *SignUploadScoreRequest) GetParams() *UploadScoreParams {
	if x != nil {
		return x.Params
	}
	return nil
}

type SignUploadScoreResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string             `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Params    *UploadScoreParams `protobuf:"bytes,2,opt,name=params,proto3" json:"params,omitempty"`
}

func (x *SignUploadScoreResponse) Reset() {
	*x = SignUploadScoreResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_blast_v1_chain_sign_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignUploadScoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignUploadScoreResponse) ProtoMessage() {}

func (x *SignUploadScoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_blast_v1_chain_sign_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignUploadScoreResponse.ProtoReflect.Descriptor instead.
func (*SignUploadScoreResponse) Descriptor() ([]byte, []int) {
	return file_blast_v1_chain_sign_proto_rawDescGZIP(), []int{14}
}

func (x *SignUploadScoreResponse) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *SignUploadScoreResponse) GetParams() *UploadScoreParams {
	if x != nil {
		return x.Params
	}
	return nil
}

var File_blast_v1_chain_sign_proto protoreflect.FileDescriptor

var file_blast_v1_chain_sign_proto_rawDesc = []byte{
	0x0a, 0x19, 0x62, 0x6c, 0x61, 0x73, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x2f, 0x73, 0x69, 0x67, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x62, 0x6c, 0x61,
	0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61,
	0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65,
	0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x34,
	0x0a, 0x12, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0x4b, 0x0a, 0x11, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x22, 0xc1, 0x01, 0x0a, 0x16, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x4d, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x62, 0x6c,
	0x61, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x1a, 0x3a, 0x0a, 0x0c, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xa5, 0x01, 0x0a, 0x19, 0x4d, 0x69, 0x6e, 0x74, 0x41, 0x6e,
	0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x69, 0x6e, 0x53, 0x74,
	0x61, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x69, 0x6e,
	0x53, 0x74, 0x61, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x69, 0x67, 0x6e, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x5a, 0x0a,
	0x15, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x69, 0x6e, 0x74, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x41, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x62, 0x6c, 0x61, 0x73, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x4d, 0x69, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0x79, 0x0a, 0x16, 0x53, 0x69, 0x67,
	0x6e, 0x4d, 0x69, 0x6e, 0x74, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x12, 0x41, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x29, 0x2e, 0x62, 0x6c, 0x61, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x2e, 0x4d, 0x69, 0x6e, 0x74, 0x41, 0x6e, 0x64, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x22, 0x76, 0x0a, 0x10, 0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x71, 0x75, 0x61,
	0x72, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x71, 0x75, 0x61, 0x72, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08,
	0x73, 0x71, 0x75, 0x61, 0x72, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x51, 0x0a, 0x15,
	0x53, 0x69, 0x67, 0x6e, 0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x6c, 0x61, 0x73, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x71, 0x75, 0x61, 0x72,
	0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22,
	0x70, 0x0a, 0x16, 0x53, 0x69, 0x67, 0x6e, 0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x71, 0x75, 0x61, 0x72,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x62, 0x6c, 0x61, 0x73, 0x74, 0x2e,
	0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x71, 0x75,
	0x61, 0x72, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x22, 0x82, 0x01, 0x0a, 0x14, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x71,
	0x75, 0x61, 0x72, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x12,
	0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02,
	0x74, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x59, 0x0a, 0x19, 0x53, 0x69, 0x67, 0x6e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x62, 0x6c, 0x61, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x71, 0x75,
	0x61, 0x72, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x22, 0x78, 0x0a, 0x1a, 0x53, 0x69, 0x67, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x3c, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e,
	0x62, 0x6c, 0x61, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x22, 0xd1, 0x01, 0x0a, 0x11,
	0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x61, 0x6d,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x67, 0x61, 0x6d,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x71, 0x75, 0x61, 0x72, 0x65, 0x49,
	0x64, 0x4f, 0x72, 0x5a, 0x65, 0x72, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0e, 0x73,
	0x71, 0x75, 0x61, 0x72, 0x65, 0x49, 0x64, 0x4f, 0x72, 0x5a, 0x65, 0x72, 0x6f, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x63,
	0x6f, 0x72, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x67, 0x61, 0x6d, 0x65, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e,
	0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22,
	0x53, 0x0a, 0x16, 0x53, 0x69, 0x67, 0x6e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x63, 0x6f,
	0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x06, 0x70, 0x61, 0x72,
	0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x62, 0x6c, 0x61, 0x73,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x06, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x22, 0x72, 0x0a, 0x17, 0x53, 0x69, 0x67, 0x6e, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x39, 0x0a,
	0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x62, 0x6c, 0x61, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73,
	0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x32, 0xba, 0x05, 0x0a, 0x10, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x76, 0x0a,
	0x0b, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x2e, 0x62,
	0x6c, 0x61, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x69,
	0x67, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x21, 0x2e, 0x62, 0x6c, 0x61, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x22, 0x15,
	0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x3a, 0x73, 0x69, 0x67, 0x6e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x0e, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x69,
	0x6e, 0x74, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x12, 0x25, 0x2e, 0x62, 0x6c, 0x61, 0x73, 0x74,
	0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x69,
	0x6e, 0x74, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x62, 0x6c, 0x61, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x2e, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x69, 0x6e, 0x74, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a,
	0x01, 0x2a, 0x22, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x3a, 0x73, 0x69,
	0x67, 0x6e, 0x4d, 0x69, 0x6e, 0x74, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x12, 0x84, 0x01, 0x0a,
	0x0e, 0x53, 0x69, 0x67, 0x6e, 0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x12,
	0x25, 0x2e, 0x62, 0x6c, 0x61, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x2e, 0x53, 0x69, 0x67, 0x6e, 0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x62, 0x6c, 0x61, 0x73, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x4a, 0x6f, 0x69, 0x6e,
	0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x23,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1d, 0x3a, 0x01, 0x2a, 0x22, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x3a, 0x73, 0x69, 0x67, 0x6e, 0x4a, 0x6f, 0x69, 0x6e, 0x53, 0x71, 0x75,
	0x61, 0x72, 0x65, 0x12, 0x94, 0x01, 0x0a, 0x12, 0x53, 0x69, 0x67, 0x6e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x12, 0x29, 0x2e, 0x62, 0x6c, 0x61,
	0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x69, 0x67, 0x6e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2a, 0x2e, 0x62, 0x6c, 0x61, 0x73, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a, 0x22, 0x1c, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x3a, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x53, 0x71, 0x75, 0x61, 0x72, 0x65, 0x12, 0x88, 0x01, 0x0a, 0x0f, 0x53,
	0x69, 0x67, 0x6e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x26,
	0x2e, 0x62, 0x6c, 0x61, 0x73, 0x74, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e,
	0x53, 0x69, 0x67, 0x6e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x62, 0x6c, 0x61, 0x73, 0x74, 0x2e, 0x76,
	0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22, 0x19, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x3a, 0x73, 0x69, 0x67, 0x6e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x53, 0x63, 0x6f, 0x72, 0x65, 0x42, 0x3a, 0x5a, 0x38, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6f, 0x2d, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x62, 0x61, 0x72, 0x2d, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x67, 0x6f, 0x2f, 0x62, 0x6c, 0x61,
	0x73, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x3b, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_blast_v1_chain_sign_proto_rawDescOnce sync.Once
	file_blast_v1_chain_sign_proto_rawDescData = file_blast_v1_chain_sign_proto_rawDesc
)

func file_blast_v1_chain_sign_proto_rawDescGZIP() []byte {
	file_blast_v1_chain_sign_proto_rawDescOnce.Do(func() {
		file_blast_v1_chain_sign_proto_rawDescData = protoimpl.X.CompressGZIP(file_blast_v1_chain_sign_proto_rawDescData)
	})
	return file_blast_v1_chain_sign_proto_rawDescData
}

var file_blast_v1_chain_sign_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_blast_v1_chain_sign_proto_goTypes = []interface{}{
	(*SignMessageRequest)(nil),         // 0: blast.v1.chain.SignMessageRequest
	(*SignatureResponse)(nil),          // 1: blast.v1.chain.SignatureResponse
	(*SignatureTypedResponse)(nil),     // 2: blast.v1.chain.SignatureTypedResponse
	(*MintAndCreateSquareParams)(nil),  // 3: blast.v1.chain.MintAndCreateSquareParams
	(*SignMintSquareRequest)(nil),      // 4: blast.v1.chain.SignMintSquareRequest
	(*SignMintSquareResponse)(nil),     // 5: blast.v1.chain.SignMintSquareResponse
	(*JoinSquareParams)(nil),           // 6: blast.v1.chain.JoinSquareParams
	(*SignJoinSquareRequest)(nil),      // 7: blast.v1.chain.SignJoinSquareRequest
	(*SignJoinSquareResponse)(nil),     // 8: blast.v1.chain.SignJoinSquareResponse
	(*TransferSquareParams)(nil),       // 9: blast.v1.chain.TransferSquareParams
	(*SignTransferSquareRequest)(nil),  // 10: blast.v1.chain.SignTransferSquareRequest
	(*SignTransferSquareResponse)(nil), // 11: blast.v1.chain.SignTransferSquareResponse
	(*UploadScoreParams)(nil),          // 12: blast.v1.chain.UploadScoreParams
	(*SignUploadScoreRequest)(nil),     // 13: blast.v1.chain.SignUploadScoreRequest
	(*SignUploadScoreResponse)(nil),    // 14: blast.v1.chain.SignUploadScoreResponse
	nil,                                // 15: blast.v1.chain.SignatureTypedResponse.MessageEntry
}
var file_blast_v1_chain_sign_proto_depIdxs = []int32{
	15, // 0: blast.v1.chain.SignatureTypedResponse.message:type_name -> blast.v1.chain.SignatureTypedResponse.MessageEntry
	3,  // 1: blast.v1.chain.SignMintSquareRequest.params:type_name -> blast.v1.chain.MintAndCreateSquareParams
	3,  // 2: blast.v1.chain.SignMintSquareResponse.params:type_name -> blast.v1.chain.MintAndCreateSquareParams
	6,  // 3: blast.v1.chain.SignJoinSquareRequest.params:type_name -> blast.v1.chain.JoinSquareParams
	6,  // 4: blast.v1.chain.SignJoinSquareResponse.params:type_name -> blast.v1.chain.JoinSquareParams
	9,  // 5: blast.v1.chain.SignTransferSquareRequest.params:type_name -> blast.v1.chain.TransferSquareParams
	9,  // 6: blast.v1.chain.SignTransferSquareResponse.params:type_name -> blast.v1.chain.TransferSquareParams
	12, // 7: blast.v1.chain.SignUploadScoreRequest.params:type_name -> blast.v1.chain.UploadScoreParams
	12, // 8: blast.v1.chain.SignUploadScoreResponse.params:type_name -> blast.v1.chain.UploadScoreParams
	0,  // 9: blast.v1.chain.ChainSignService.SignMessage:input_type -> blast.v1.chain.SignMessageRequest
	4,  // 10: blast.v1.chain.ChainSignService.SignMintSquare:input_type -> blast.v1.chain.SignMintSquareRequest
	7,  // 11: blast.v1.chain.ChainSignService.SignJoinSquare:input_type -> blast.v1.chain.SignJoinSquareRequest
	10, // 12: blast.v1.chain.ChainSignService.SignTransferSquare:input_type -> blast.v1.chain.SignTransferSquareRequest
	13, // 13: blast.v1.chain.ChainSignService.SignUploadScore:input_type -> blast.v1.chain.SignUploadScoreRequest
	1,  // 14: blast.v1.chain.ChainSignService.SignMessage:output_type -> blast.v1.chain.SignatureResponse
	5,  // 15: blast.v1.chain.ChainSignService.SignMintSquare:output_type -> blast.v1.chain.SignMintSquareResponse
	8,  // 16: blast.v1.chain.ChainSignService.SignJoinSquare:output_type -> blast.v1.chain.SignJoinSquareResponse
	11, // 17: blast.v1.chain.ChainSignService.SignTransferSquare:output_type -> blast.v1.chain.SignTransferSquareResponse
	14, // 18: blast.v1.chain.ChainSignService.SignUploadScore:output_type -> blast.v1.chain.SignUploadScoreResponse
	14, // [14:19] is the sub-list for method output_type
	9,  // [9:14] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_blast_v1_chain_sign_proto_init() }
func file_blast_v1_chain_sign_proto_init() {
	if File_blast_v1_chain_sign_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_blast_v1_chain_sign_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blast_v1_chain_sign_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignatureResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blast_v1_chain_sign_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignatureTypedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blast_v1_chain_sign_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MintAndCreateSquareParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blast_v1_chain_sign_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignMintSquareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blast_v1_chain_sign_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignMintSquareResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blast_v1_chain_sign_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinSquareParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blast_v1_chain_sign_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignJoinSquareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blast_v1_chain_sign_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignJoinSquareResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blast_v1_chain_sign_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferSquareParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blast_v1_chain_sign_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignTransferSquareRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blast_v1_chain_sign_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignTransferSquareResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blast_v1_chain_sign_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadScoreParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blast_v1_chain_sign_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignUploadScoreRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_blast_v1_chain_sign_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignUploadScoreResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_blast_v1_chain_sign_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_blast_v1_chain_sign_proto_goTypes,
		DependencyIndexes: file_blast_v1_chain_sign_proto_depIdxs,
		MessageInfos:      file_blast_v1_chain_sign_proto_msgTypes,
	}.Build()
	File_blast_v1_chain_sign_proto = out.File
	file_blast_v1_chain_sign_proto_rawDesc = nil
	file_blast_v1_chain_sign_proto_goTypes = nil
	file_blast_v1_chain_sign_proto_depIdxs = nil
}

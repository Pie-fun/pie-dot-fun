// Code generated by protoc-gen-go-grpc-mock. DO NOT EDIT.
// source: blast/v1/spaceship/spaceship.proto

package spaceship

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	grpc "google.golang.org/grpc"
)

// MockSpaceshipServiceClient is a mock of SpaceshipServiceClient interface.
type MockSpaceshipServiceClient struct {
	ctrl     *gomock.Controller
	recorder *MockSpaceshipServiceClientMockRecorder
}

// MockSpaceshipServiceClientMockRecorder is the mock recorder for MockSpaceshipServiceClient.
type MockSpaceshipServiceClientMockRecorder struct {
	mock *MockSpaceshipServiceClient
}

// NewMockSpaceshipServiceClient creates a new mock instance.
func NewMockSpaceshipServiceClient(ctrl *gomock.Controller) *MockSpaceshipServiceClient {
	mock := &MockSpaceshipServiceClient{ctrl: ctrl}
	mock.recorder = &MockSpaceshipServiceClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSpaceshipServiceClient) EXPECT() *MockSpaceshipServiceClientMockRecorder {
	return m.recorder
}

// GetSpaceship mocks base method.
func (m *MockSpaceshipServiceClient) GetSpaceship(ctx context.Context, in *GetSpaceshipRequest, opts ...grpc.CallOption) (*Spaceship, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetSpaceship", varargs...)
	ret0, _ := ret[0].(*Spaceship)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSpaceship indicates an expected call of GetSpaceship.
func (mr *MockSpaceshipServiceClientMockRecorder) GetSpaceship(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSpaceship", reflect.TypeOf((*MockSpaceshipServiceClient)(nil).GetSpaceship), varargs...)
}

// MockSpaceshipServiceServer is a mock of SpaceshipServiceServer interface.
type MockSpaceshipServiceServer struct {
	ctrl     *gomock.Controller
	recorder *MockSpaceshipServiceServerMockRecorder
}

// MockSpaceshipServiceServerMockRecorder is the mock recorder for MockSpaceshipServiceServer.
type MockSpaceshipServiceServerMockRecorder struct {
	mock *MockSpaceshipServiceServer
}

// NewMockSpaceshipServiceServer creates a new mock instance.
func NewMockSpaceshipServiceServer(ctrl *gomock.Controller) *MockSpaceshipServiceServer {
	mock := &MockSpaceshipServiceServer{ctrl: ctrl}
	mock.recorder = &MockSpaceshipServiceServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSpaceshipServiceServer) EXPECT() *MockSpaceshipServiceServerMockRecorder {
	return m.recorder
}

// GetSpaceship mocks base method.
func (m *MockSpaceshipServiceServer) GetSpaceship(ctx context.Context, in *GetSpaceshipRequest) (*Spaceship, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSpaceship", ctx, in)
	ret0, _ := ret[0].(*Spaceship)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSpaceship indicates an expected call of GetSpaceship.
func (mr *MockSpaceshipServiceServerMockRecorder) GetSpaceship(ctx, in interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSpaceship", reflect.TypeOf((*MockSpaceshipServiceServer)(nil).GetSpaceship), ctx, in)
}

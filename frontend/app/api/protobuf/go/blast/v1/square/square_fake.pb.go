// Code generated by protoc-gen-fake. DO NOT EDIT.

package square

import (
	"github.com/ao-labs/protoc-gen-fake/pkg/fake"
)

// Default responses for SquareService
var DefaultSquareServiceResponses = map[string]fake.Response{
	"/blast.v1.square.SquareService/GetSquare": {
		Method: "/blast.v1.square.SquareService/GetSquare",
		Response: &Square{
			Name:                            "fake_Name",
			TokenId:                         "fake_TokenId",
			OwnerAddress:                    "fake_OwnerAddress",
			CreateTime:                      nil,
			State:                           0,
			SignatureId:                     "fake_SignatureId",
			JoinType:                        0,
			DisplayName:                     "fake_DisplayName",
			Introduction:                    "fake_Introduction",
			MinimumStakingAmountToJoinInEth: 3.14,
			TotalMembersStakingAmountInEth:  3.14,
			Multiplier:                      3.14,
			TotalPoints:                     42,
			Capacity:                        42,
			Occupancy:                       42,
			OccupancyIncludingPending:       42,
			PfpBoost:                        nil,
			Nft:                             nil,
			Spirits:                         42,
			Stars:                           42,
			TotalSpirits:                    42,
			WeeklySpirits:                   42,
		},
	},
	"/blast.v1.square.SquareService/ListSquares": {
		Method: "/blast.v1.square.SquareService/ListSquares",
		Response: &ListSquaresResponse{
			Squares:       nil,
			NextPageToken: "fake_NextPageToken",
		},
	},
	"/blast.v1.square.SquareService/UpdateSquare": {
		Method: "/blast.v1.square.SquareService/UpdateSquare",
		Response: &Square{
			Name:                            "fake_Name",
			TokenId:                         "fake_TokenId",
			OwnerAddress:                    "fake_OwnerAddress",
			CreateTime:                      nil,
			State:                           0,
			SignatureId:                     "fake_SignatureId",
			JoinType:                        0,
			DisplayName:                     "fake_DisplayName",
			Introduction:                    "fake_Introduction",
			MinimumStakingAmountToJoinInEth: 3.14,
			TotalMembersStakingAmountInEth:  3.14,
			Multiplier:                      3.14,
			TotalPoints:                     42,
			Capacity:                        42,
			Occupancy:                       42,
			OccupancyIncludingPending:       42,
			PfpBoost:                        nil,
			Nft:                             nil,
			Spirits:                         42,
			Stars:                           42,
			TotalSpirits:                    42,
			WeeklySpirits:                   42,
		},
	},
	"/blast.v1.square.SquareService/GetSquareWeeklySpirits": {
		Method: "/blast.v1.square.SquareService/GetSquareWeeklySpirits",
		Response: &GetSquareWeeklySpiritsResponse{
			WeeklySpirits: 42,
		},
	},
	"/blast.v1.square.SquareService/CheckMintEligibility": {
		Method: "/blast.v1.square.SquareService/CheckMintEligibility",
		Response: &CheckMintEligibilityResponse{
			User:        "fake_User",
			Eligibility: 0,
			Available:   true,
		},
	},
	"/blast.v1.square.SquareService/ValidateDisplayNameAvailability": {
		Method: "/blast.v1.square.SquareService/ValidateDisplayNameAvailability",
		Response: &ValidateDisplayNameAvailabilityResponse{
			DisplayName: "fake_DisplayName",
			Available:   true,
		},
	},
	"/blast.v1.square.SquareService/CreateSquareAndSign": {
		Method: "/blast.v1.square.SquareService/CreateSquareAndSign",
		Response: &CreateSquareAndSignResponse{
			Square:    nil,
			Signature: "fake_Signature",
			Params:    nil,
		},
	},
	"/blast.v1.square.SquareService/ApproveJoinSquareAndSign": {
		Method: "/blast.v1.square.SquareService/ApproveJoinSquareAndSign",
		Response: &ApproveJoinSquareAndSignResponse{
			Approved:  true,
			Signature: "fake_Signature",
			Params:    nil,
		},
	},
	"/blast.v1.square.SquareService/ApproveTransferSquareAndSign": {
		Method: "/blast.v1.square.SquareService/ApproveTransferSquareAndSign",
		Response: &ApproveTransferSquareAndSignResponse{
			Approved:  true,
			Signature: "fake_Signature",
			Params:    nil,
		},
	},
	"/blast.v1.square.SquareService/GetSquareWeeklyPoints": {
		Method: "/blast.v1.square.SquareService/GetSquareWeeklyPoints",
		Response: &GetSquareWeeklyPointsResponse{
			WeeklyPoints: 42,
			Week:         42,
		},
	},
	"/blast.v1.square.SquareService/ListSquareSpiritHistories": {
		Method: "/blast.v1.square.SquareService/ListSquareSpiritHistories",
		Response: &ListSquareSpiritHistoriesResposne{
			Histories:     nil,
			NextPageToken: "fake_NextPageToken",
		},
	},
	"/blast.v1.square.SquareService/ListSquareMembers": {
		Method: "/blast.v1.square.SquareService/ListSquareMembers",
		Response: &ListSquareMembersResponse{
			Members:       nil,
			NextPageToken: "fake_NextPageToken",
		},
	},
	"/blast.v1.square.SquareService/ListSquareMemberRankings": {
		Method: "/blast.v1.square.SquareService/ListSquareMemberRankings",
		Response: &ListSquareMemberRankingsResponse{
			Rankings:      nil,
			NextPageToken: "fake_NextPageToken",
		},
	},
}

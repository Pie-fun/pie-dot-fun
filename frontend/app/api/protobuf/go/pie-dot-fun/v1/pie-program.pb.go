// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: pie-dot-fun/v1/pie-program.proto

package piedotfun

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/fieldmaskpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PoolType int32

const (
	PoolType_POOL_TYPE_UNSPECIFIED PoolType = 0
	PoolType_AMM                   PoolType = 1
	PoolType_CLMM                  PoolType = 2
	PoolType_CPMM                  PoolType = 3
)

// Enum value maps for PoolType.
var (
	PoolType_name = map[int32]string{
		0: "POOL_TYPE_UNSPECIFIED",
		1: "AMM",
		2: "CLMM",
		3: "CPMM",
	}
	PoolType_value = map[string]int32{
		"POOL_TYPE_UNSPECIFIED": 0,
		"AMM":                   1,
		"CLMM":                  2,
		"CPMM":                  3,
	}
)

func (x PoolType) Enum() *PoolType {
	p := new(PoolType)
	*p = x
	return p
}

func (x PoolType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PoolType) Descriptor() protoreflect.EnumDescriptor {
	return file_pie_dot_fun_v1_pie_program_proto_enumTypes[0].Descriptor()
}

func (PoolType) Type() protoreflect.EnumType {
	return &file_pie_dot_fun_v1_pie_program_proto_enumTypes[0]
}

func (x PoolType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PoolType.Descriptor instead.
func (PoolType) EnumDescriptor() ([]byte, []int) {
	return file_pie_dot_fun_v1_pie_program_proto_rawDescGZIP(), []int{0}
}

type BaseType int32

const (
	BaseType_BASE_TYPE_UNSPECIFIED BaseType = 0
	BaseType_BASE_IN               BaseType = 1
	BaseType_BASE_OUT              BaseType = 2
)

// Enum value maps for BaseType.
var (
	BaseType_name = map[int32]string{
		0: "BASE_TYPE_UNSPECIFIED",
		1: "BASE_IN",
		2: "BASE_OUT",
	}
	BaseType_value = map[string]int32{
		"BASE_TYPE_UNSPECIFIED": 0,
		"BASE_IN":               1,
		"BASE_OUT":              2,
	}
)

func (x BaseType) Enum() *BaseType {
	p := new(BaseType)
	*p = x
	return p
}

func (x BaseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BaseType) Descriptor() protoreflect.EnumDescriptor {
	return file_pie_dot_fun_v1_pie_program_proto_enumTypes[1].Descriptor()
}

func (BaseType) Type() protoreflect.EnumType {
	return &file_pie_dot_fun_v1_pie_program_proto_enumTypes[1]
}

func (x BaseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BaseType.Descriptor instead.
func (BaseType) EnumDescriptor() ([]byte, []int) {
	return file_pie_dot_fun_v1_pie_program_proto_rawDescGZIP(), []int{1}
}

type GetBasketVaultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mint string `protobuf:"bytes,1,opt,name=mint,proto3" json:"mint,omitempty"`
}

func (x *GetBasketVaultRequest) Reset() {
	*x = GetBasketVaultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBasketVaultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBasketVaultRequest) ProtoMessage() {}

func (x *GetBasketVaultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBasketVaultRequest.ProtoReflect.Descriptor instead.
func (*GetBasketVaultRequest) Descriptor() ([]byte, []int) {
	return file_pie_dot_fun_v1_pie_program_proto_rawDescGZIP(), []int{0}
}

func (x *GetBasketVaultRequest) GetMint() string {
	if x != nil {
		return x.Mint
	}
	return ""
}

type GetBasketVaultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vault []*BasketVaultElement `protobuf:"bytes,1,rep,name=vault,proto3" json:"vault,omitempty"`
}

func (x *GetBasketVaultResponse) Reset() {
	*x = GetBasketVaultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBasketVaultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBasketVaultResponse) ProtoMessage() {}

func (x *GetBasketVaultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBasketVaultResponse.ProtoReflect.Descriptor instead.
func (*GetBasketVaultResponse) Descriptor() ([]byte, []int) {
	return file_pie_dot_fun_v1_pie_program_proto_rawDescGZIP(), []int{1}
}

func (x *GetBasketVaultResponse) GetVault() []*BasketVaultElement {
	if x != nil {
		return x.Vault
	}
	return nil
}

type BasketVaultElement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mint    string `protobuf:"bytes,1,opt,name=mint,proto3" json:"mint,omitempty"`
	Balance uint64 `protobuf:"varint,2,opt,name=balance,proto3" json:"balance,omitempty"`
}

func (x *BasketVaultElement) Reset() {
	*x = BasketVaultElement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasketVaultElement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasketVaultElement) ProtoMessage() {}

func (x *BasketVaultElement) ProtoReflect() protoreflect.Message {
	mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasketVaultElement.ProtoReflect.Descriptor instead.
func (*BasketVaultElement) Descriptor() ([]byte, []int) {
	return file_pie_dot_fun_v1_pie_program_proto_rawDescGZIP(), []int{2}
}

func (x *BasketVaultElement) GetMint() string {
	if x != nil {
		return x.Mint
	}
	return ""
}

func (x *BasketVaultElement) GetBalance() uint64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

type RebalanceAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InputMint  string   `protobuf:"bytes,1,opt,name=input_mint,json=inputMint,proto3" json:"input_mint,omitempty"`
	OutputMint string   `protobuf:"bytes,2,opt,name=output_mint,json=outputMint,proto3" json:"output_mint,omitempty"`
	BaseType   BaseType `protobuf:"varint,3,opt,name=base_type,json=baseType,proto3,enum=piedotfun.v1.BaseType" json:"base_type,omitempty"`
	// Raw amount of the mint that `base_type` references.
	// BASE_IN: amount of `input_mint`
	// BASE_OUT: amount of `output_mint`
	Amount string `protobuf:"bytes,4,opt,name=amount,proto3" json:"amount,omitempty"`
	// Threshold for the other amount
	// BASE_IN: Minimum amount of `output_mint` token to be received
	// BASE_OUT: Maximum amount of `input_mint` token to be spent
	OtherAmountThreshold *string `protobuf:"bytes,5,opt,name=other_amount_threshold,json=otherAmountThreshold,proto3,oneof" json:"other_amount_threshold,omitempty"`
}

func (x *RebalanceAction) Reset() {
	*x = RebalanceAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RebalanceAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebalanceAction) ProtoMessage() {}

func (x *RebalanceAction) ProtoReflect() protoreflect.Message {
	mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebalanceAction.ProtoReflect.Descriptor instead.
func (*RebalanceAction) Descriptor() ([]byte, []int) {
	return file_pie_dot_fun_v1_pie_program_proto_rawDescGZIP(), []int{3}
}

func (x *RebalanceAction) GetInputMint() string {
	if x != nil {
		return x.InputMint
	}
	return ""
}

func (x *RebalanceAction) GetOutputMint() string {
	if x != nil {
		return x.OutputMint
	}
	return ""
}

func (x *RebalanceAction) GetBaseType() BaseType {
	if x != nil {
		return x.BaseType
	}
	return BaseType_BASE_TYPE_UNSPECIFIED
}

func (x *RebalanceAction) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *RebalanceAction) GetOtherAmountThreshold() string {
	if x != nil && x.OtherAmountThreshold != nil {
		return *x.OtherAmountThreshold
	}
	return ""
}

type SerializedTxBundle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SerializedTxs []string `protobuf:"bytes,1,rep,name=serialized_txs,json=serializedTxs,proto3" json:"serialized_txs,omitempty"`
}

func (x *SerializedTxBundle) Reset() {
	*x = SerializedTxBundle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SerializedTxBundle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SerializedTxBundle) ProtoMessage() {}

func (x *SerializedTxBundle) ProtoReflect() protoreflect.Message {
	mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SerializedTxBundle.ProtoReflect.Descriptor instead.
func (*SerializedTxBundle) Descriptor() ([]byte, []int) {
	return file_pie_dot_fun_v1_pie_program_proto_rawDescGZIP(), []int{4}
}

func (x *SerializedTxBundle) GetSerializedTxs() []string {
	if x != nil {
		return x.SerializedTxs
	}
	return nil
}

type BuildRebalanceTxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasketMint         string             `protobuf:"bytes,1,opt,name=basket_mint,json=basketMint,proto3" json:"basket_mint,omitempty"`
	SlippagePercentage float64            `protobuf:"fixed64,2,opt,name=slippage_percentage,json=slippagePercentage,proto3" json:"slippage_percentage,omitempty"`
	Actions            []*RebalanceAction `protobuf:"bytes,3,rep,name=actions,proto3" json:"actions,omitempty"`
}

func (x *BuildRebalanceTxRequest) Reset() {
	*x = BuildRebalanceTxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildRebalanceTxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildRebalanceTxRequest) ProtoMessage() {}

func (x *BuildRebalanceTxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildRebalanceTxRequest.ProtoReflect.Descriptor instead.
func (*BuildRebalanceTxRequest) Descriptor() ([]byte, []int) {
	return file_pie_dot_fun_v1_pie_program_proto_rawDescGZIP(), []int{5}
}

func (x *BuildRebalanceTxRequest) GetBasketMint() string {
	if x != nil {
		return x.BasketMint
	}
	return ""
}

func (x *BuildRebalanceTxRequest) GetSlippagePercentage() float64 {
	if x != nil {
		return x.SlippagePercentage
	}
	return 0
}

func (x *BuildRebalanceTxRequest) GetActions() []*RebalanceAction {
	if x != nil {
		return x.Actions
	}
	return nil
}

type BuySwapData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mint        string `protobuf:"bytes,1,opt,name=mint,proto3" json:"mint,omitempty"`
	AmountIn    string `protobuf:"bytes,2,opt,name=amount_in,json=amountIn,proto3" json:"amount_in,omitempty"`
	MaxAmountIn string `protobuf:"bytes,3,opt,name=max_amount_in,json=maxAmountIn,proto3" json:"max_amount_in,omitempty"`
	AmountOut   string `protobuf:"bytes,4,opt,name=amount_out,json=amountOut,proto3" json:"amount_out,omitempty"`
}

func (x *BuySwapData) Reset() {
	*x = BuySwapData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuySwapData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuySwapData) ProtoMessage() {}

func (x *BuySwapData) ProtoReflect() protoreflect.Message {
	mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuySwapData.ProtoReflect.Descriptor instead.
func (*BuySwapData) Descriptor() ([]byte, []int) {
	return file_pie_dot_fun_v1_pie_program_proto_rawDescGZIP(), []int{6}
}

func (x *BuySwapData) GetMint() string {
	if x != nil {
		return x.Mint
	}
	return ""
}

func (x *BuySwapData) GetAmountIn() string {
	if x != nil {
		return x.AmountIn
	}
	return ""
}

func (x *BuySwapData) GetMaxAmountIn() string {
	if x != nil {
		return x.MaxAmountIn
	}
	return ""
}

func (x *BuySwapData) GetAmountOut() string {
	if x != nil {
		return x.AmountOut
	}
	return ""
}

type BuildMintTxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasketMint   string         `protobuf:"bytes,1,opt,name=basket_mint,json=basketMint,proto3" json:"basket_mint,omitempty"`
	MintAmount   string         `protobuf:"bytes,2,opt,name=mint_amount,json=mintAmount,proto3" json:"mint_amount,omitempty"`
	InputAmount  string         `protobuf:"bytes,3,opt,name=input_amount,json=inputAmount,proto3" json:"input_amount,omitempty"`
	OwnerAddress string         `protobuf:"bytes,4,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
	BuySwapData  []*BuySwapData `protobuf:"bytes,5,rep,name=buy_swap_data,json=buySwapData,proto3" json:"buy_swap_data,omitempty"`
	// percentage
	// If null, value is set to 10(%)
	MaxSlippage *uint64 `protobuf:"varint,6,opt,name=max_slippage,json=maxSlippage,proto3,oneof" json:"max_slippage,omitempty"`
}

func (x *BuildMintTxRequest) Reset() {
	*x = BuildMintTxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildMintTxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildMintTxRequest) ProtoMessage() {}

func (x *BuildMintTxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildMintTxRequest.ProtoReflect.Descriptor instead.
func (*BuildMintTxRequest) Descriptor() ([]byte, []int) {
	return file_pie_dot_fun_v1_pie_program_proto_rawDescGZIP(), []int{7}
}

func (x *BuildMintTxRequest) GetBasketMint() string {
	if x != nil {
		return x.BasketMint
	}
	return ""
}

func (x *BuildMintTxRequest) GetMintAmount() string {
	if x != nil {
		return x.MintAmount
	}
	return ""
}

func (x *BuildMintTxRequest) GetInputAmount() string {
	if x != nil {
		return x.InputAmount
	}
	return ""
}

func (x *BuildMintTxRequest) GetOwnerAddress() string {
	if x != nil {
		return x.OwnerAddress
	}
	return ""
}

func (x *BuildMintTxRequest) GetBuySwapData() []*BuySwapData {
	if x != nil {
		return x.BuySwapData
	}
	return nil
}

func (x *BuildMintTxRequest) GetMaxSlippage() uint64 {
	if x != nil && x.MaxSlippage != nil {
		return *x.MaxSlippage
	}
	return 0
}

type BuildRedeemTxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasketMint   string `protobuf:"bytes,1,opt,name=basket_mint,json=basketMint,proto3" json:"basket_mint,omitempty"`
	Amount       string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	OwnerAddress string `protobuf:"bytes,3,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
	// percentage
	// If null, value is set to 10(%)
	MaxSlippage *uint64 `protobuf:"varint,4,opt,name=max_slippage,json=maxSlippage,proto3,oneof" json:"max_slippage,omitempty"`
}

func (x *BuildRedeemTxRequest) Reset() {
	*x = BuildRedeemTxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuildRedeemTxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuildRedeemTxRequest) ProtoMessage() {}

func (x *BuildRedeemTxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuildRedeemTxRequest.ProtoReflect.Descriptor instead.
func (*BuildRedeemTxRequest) Descriptor() ([]byte, []int) {
	return file_pie_dot_fun_v1_pie_program_proto_rawDescGZIP(), []int{8}
}

func (x *BuildRedeemTxRequest) GetBasketMint() string {
	if x != nil {
		return x.BasketMint
	}
	return ""
}

func (x *BuildRedeemTxRequest) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *BuildRedeemTxRequest) GetOwnerAddress() string {
	if x != nil {
		return x.OwnerAddress
	}
	return ""
}

func (x *BuildRedeemTxRequest) GetMaxSlippage() uint64 {
	if x != nil && x.MaxSlippage != nil {
		return *x.MaxSlippage
	}
	return 0
}

type GetBasketConfigByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasketId string `protobuf:"bytes,1,opt,name=basket_id,json=basketId,proto3" json:"basket_id,omitempty"`
}

func (x *GetBasketConfigByIDRequest) Reset() {
	*x = GetBasketConfigByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBasketConfigByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBasketConfigByIDRequest) ProtoMessage() {}

func (x *GetBasketConfigByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBasketConfigByIDRequest.ProtoReflect.Descriptor instead.
func (*GetBasketConfigByIDRequest) Descriptor() ([]byte, []int) {
	return file_pie_dot_fun_v1_pie_program_proto_rawDescGZIP(), []int{9}
}

func (x *GetBasketConfigByIDRequest) GetBasketId() string {
	if x != nil {
		return x.BasketId
	}
	return ""
}

type GetBasketMintByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BasketId string `protobuf:"bytes,1,opt,name=basket_id,json=basketId,proto3" json:"basket_id,omitempty"`
}

func (x *GetBasketMintByIDRequest) Reset() {
	*x = GetBasketMintByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBasketMintByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBasketMintByIDRequest) ProtoMessage() {}

func (x *GetBasketMintByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBasketMintByIDRequest.ProtoReflect.Descriptor instead.
func (*GetBasketMintByIDRequest) Descriptor() ([]byte, []int) {
	return file_pie_dot_fun_v1_pie_program_proto_rawDescGZIP(), []int{10}
}

func (x *GetBasketMintByIDRequest) GetBasketId() string {
	if x != nil {
		return x.BasketId
	}
	return ""
}

type GetBasketMintByIDResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mint string `protobuf:"bytes,1,opt,name=mint,proto3" json:"mint,omitempty"`
}

func (x *GetBasketMintByIDResponse) Reset() {
	*x = GetBasketMintByIDResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBasketMintByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBasketMintByIDResponse) ProtoMessage() {}

func (x *GetBasketMintByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBasketMintByIDResponse.ProtoReflect.Descriptor instead.
func (*GetBasketMintByIDResponse) Descriptor() ([]byte, []int) {
	return file_pie_dot_fun_v1_pie_program_proto_rawDescGZIP(), []int{11}
}

func (x *GetBasketMintByIDResponse) GetMint() string {
	if x != nil {
		return x.Mint
	}
	return ""
}

type CommandCreateBasketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommandCreateBasketRequest) Reset() {
	*x = CommandCreateBasketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommandCreateBasketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandCreateBasketRequest) ProtoMessage() {}

func (x *CommandCreateBasketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandCreateBasketRequest.ProtoReflect.Descriptor instead.
func (*CommandCreateBasketRequest) Descriptor() ([]byte, []int) {
	return file_pie_dot_fun_v1_pie_program_proto_rawDescGZIP(), []int{12}
}

type GetBasketRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mint string `protobuf:"bytes,1,opt,name=mint,proto3" json:"mint,omitempty"`
}

func (x *GetBasketRequest) Reset() {
	*x = GetBasketRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBasketRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBasketRequest) ProtoMessage() {}

func (x *GetBasketRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBasketRequest.ProtoReflect.Descriptor instead.
func (*GetBasketRequest) Descriptor() ([]byte, []int) {
	return file_pie_dot_fun_v1_pie_program_proto_rawDescGZIP(), []int{13}
}

func (x *GetBasketRequest) GetMint() string {
	if x != nil {
		return x.Mint
	}
	return ""
}

type BatchCreateTokenPoolsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenPools []*TokenPool `protobuf:"bytes,1,rep,name=token_pools,json=tokenPools,proto3" json:"token_pools,omitempty"`
}

func (x *BatchCreateTokenPoolsRequest) Reset() {
	*x = BatchCreateTokenPoolsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateTokenPoolsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateTokenPoolsRequest) ProtoMessage() {}

func (x *BatchCreateTokenPoolsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateTokenPoolsRequest.ProtoReflect.Descriptor instead.
func (*BatchCreateTokenPoolsRequest) Descriptor() ([]byte, []int) {
	return file_pie_dot_fun_v1_pie_program_proto_rawDescGZIP(), []int{14}
}

func (x *BatchCreateTokenPoolsRequest) GetTokenPools() []*TokenPool {
	if x != nil {
		return x.TokenPools
	}
	return nil
}

type BatchCreateTokenPoolsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TokenPools []*TokenPool `protobuf:"bytes,1,rep,name=token_pools,json=tokenPools,proto3" json:"token_pools,omitempty"`
}

func (x *BatchCreateTokenPoolsResponse) Reset() {
	*x = BatchCreateTokenPoolsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BatchCreateTokenPoolsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BatchCreateTokenPoolsResponse) ProtoMessage() {}

func (x *BatchCreateTokenPoolsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BatchCreateTokenPoolsResponse.ProtoReflect.Descriptor instead.
func (*BatchCreateTokenPoolsResponse) Descriptor() ([]byte, []int) {
	return file_pie_dot_fun_v1_pie_program_proto_rawDescGZIP(), []int{15}
}

func (x *BatchCreateTokenPoolsResponse) GetTokenPools() []*TokenPool {
	if x != nil {
		return x.TokenPools
	}
	return nil
}

type TxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tx string `protobuf:"bytes,1,opt,name=tx,proto3" json:"tx,omitempty"`
}

func (x *TxResponse) Reset() {
	*x = TxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxResponse) ProtoMessage() {}

func (x *TxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxResponse.ProtoReflect.Descriptor instead.
func (*TxResponse) Descriptor() ([]byte, []int) {
	return file_pie_dot_fun_v1_pie_program_proto_rawDescGZIP(), []int{16}
}

func (x *TxResponse) GetTx() string {
	if x != nil {
		return x.Tx
	}
	return ""
}

type Basket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mint       string             `protobuf:"bytes,1,opt,name=mint,proto3" json:"mint,omitempty"`
	BasketId   uint64             `protobuf:"varint,2,opt,name=basket_id,json=basketId,proto3" json:"basket_id,omitempty"`
	Name       string             `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Symbol     string             `protobuf:"bytes,4,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Uri        string             `protobuf:"bytes,5,opt,name=uri,proto3" json:"uri,omitempty"`
	Components []*BasketComponent `protobuf:"bytes,6,rep,name=components,proto3" json:"components,omitempty"`
}

func (x *Basket) Reset() {
	*x = Basket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Basket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Basket) ProtoMessage() {}

func (x *Basket) ProtoReflect() protoreflect.Message {
	mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Basket.ProtoReflect.Descriptor instead.
func (*Basket) Descriptor() ([]byte, []int) {
	return file_pie_dot_fun_v1_pie_program_proto_rawDescGZIP(), []int{17}
}

func (x *Basket) GetMint() string {
	if x != nil {
		return x.Mint
	}
	return ""
}

func (x *Basket) GetBasketId() uint64 {
	if x != nil {
		return x.BasketId
	}
	return 0
}

func (x *Basket) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Basket) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Basket) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *Basket) GetComponents() []*BasketComponent {
	if x != nil {
		return x.Components
	}
	return nil
}

type TokenPool struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mint        string   `protobuf:"bytes,1,opt,name=mint,proto3" json:"mint,omitempty"`
	PoolType    PoolType `protobuf:"varint,2,opt,name=pool_type,json=poolType,proto3,enum=piedotfun.v1.PoolType" json:"pool_type,omitempty"`
	PoolId      string   `protobuf:"bytes,3,opt,name=pool_id,json=poolId,proto3" json:"pool_id,omitempty"`
	LookupTable string   `protobuf:"bytes,4,opt,name=lookup_table,json=lookupTable,proto3" json:"lookup_table,omitempty"`
}

func (x *TokenPool) Reset() {
	*x = TokenPool{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenPool) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenPool) ProtoMessage() {}

func (x *TokenPool) ProtoReflect() protoreflect.Message {
	mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenPool.ProtoReflect.Descriptor instead.
func (*TokenPool) Descriptor() ([]byte, []int) {
	return file_pie_dot_fun_v1_pie_program_proto_rawDescGZIP(), []int{18}
}

func (x *TokenPool) GetMint() string {
	if x != nil {
		return x.Mint
	}
	return ""
}

func (x *TokenPool) GetPoolType() PoolType {
	if x != nil {
		return x.PoolType
	}
	return PoolType_POOL_TYPE_UNSPECIFIED
}

func (x *TokenPool) GetPoolId() string {
	if x != nil {
		return x.PoolId
	}
	return ""
}

func (x *TokenPool) GetLookupTable() string {
	if x != nil {
		return x.LookupTable
	}
	return ""
}

type ProgramState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bump                    uint32 `protobuf:"varint,1,opt,name=bump,proto3" json:"bump,omitempty"`
	Admin                   string `protobuf:"bytes,2,opt,name=admin,proto3" json:"admin,omitempty"`
	PlatformFeeWallet       string `protobuf:"bytes,3,opt,name=platform_fee_wallet,json=platformFeeWallet,proto3" json:"platform_fee_wallet,omitempty"`
	BasketCounter           string `protobuf:"bytes,4,opt,name=basket_counter,json=basketCounter,proto3" json:"basket_counter,omitempty"`
	RebalanceMarginLamports string `protobuf:"bytes,5,opt,name=rebalance_margin_lamports,json=rebalanceMarginLamports,proto3" json:"rebalance_margin_lamports,omitempty"`
	CreatorFeePercentage    string `protobuf:"bytes,6,opt,name=creator_fee_percentage,json=creatorFeePercentage,proto3" json:"creator_fee_percentage,omitempty"`
	PlatformFeePercentage   string `protobuf:"bytes,7,opt,name=platform_fee_percentage,json=platformFeePercentage,proto3" json:"platform_fee_percentage,omitempty"`
	EnableCreator           bool   `protobuf:"varint,8,opt,name=enable_creator,json=enableCreator,proto3" json:"enable_creator,omitempty"`
	IsInitialized           bool   `protobuf:"varint,9,opt,name=is_initialized,json=isInitialized,proto3" json:"is_initialized,omitempty"`
}

func (x *ProgramState) Reset() {
	*x = ProgramState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProgramState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProgramState) ProtoMessage() {}

func (x *ProgramState) ProtoReflect() protoreflect.Message {
	mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProgramState.ProtoReflect.Descriptor instead.
func (*ProgramState) Descriptor() ([]byte, []int) {
	return file_pie_dot_fun_v1_pie_program_proto_rawDescGZIP(), []int{19}
}

func (x *ProgramState) GetBump() uint32 {
	if x != nil {
		return x.Bump
	}
	return 0
}

func (x *ProgramState) GetAdmin() string {
	if x != nil {
		return x.Admin
	}
	return ""
}

func (x *ProgramState) GetPlatformFeeWallet() string {
	if x != nil {
		return x.PlatformFeeWallet
	}
	return ""
}

func (x *ProgramState) GetBasketCounter() string {
	if x != nil {
		return x.BasketCounter
	}
	return ""
}

func (x *ProgramState) GetRebalanceMarginLamports() string {
	if x != nil {
		return x.RebalanceMarginLamports
	}
	return ""
}

func (x *ProgramState) GetCreatorFeePercentage() string {
	if x != nil {
		return x.CreatorFeePercentage
	}
	return ""
}

func (x *ProgramState) GetPlatformFeePercentage() string {
	if x != nil {
		return x.PlatformFeePercentage
	}
	return ""
}

func (x *ProgramState) GetEnableCreator() bool {
	if x != nil {
		return x.EnableCreator
	}
	return false
}

func (x *ProgramState) GetIsInitialized() bool {
	if x != nil {
		return x.IsInitialized
	}
	return false
}

type BasketConfig struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bump          uint32             `protobuf:"varint,1,opt,name=bump,proto3" json:"bump,omitempty"`
	Id            uint64             `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Creator       string             `protobuf:"bytes,3,opt,name=creator,proto3" json:"creator,omitempty"`
	Rebalancer    string             `protobuf:"bytes,4,opt,name=rebalancer,proto3" json:"rebalancer,omitempty"`
	Mint          string             `protobuf:"bytes,5,opt,name=mint,proto3" json:"mint,omitempty"`
	IsRebalancing bool               `protobuf:"varint,6,opt,name=is_rebalancing,json=isRebalancing,proto3" json:"is_rebalancing,omitempty"`
	Components    []*BasketComponent `protobuf:"bytes,7,rep,name=components,proto3" json:"components,omitempty"`
}

func (x *BasketConfig) Reset() {
	*x = BasketConfig{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasketConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasketConfig) ProtoMessage() {}

func (x *BasketConfig) ProtoReflect() protoreflect.Message {
	mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasketConfig.ProtoReflect.Descriptor instead.
func (*BasketConfig) Descriptor() ([]byte, []int) {
	return file_pie_dot_fun_v1_pie_program_proto_rawDescGZIP(), []int{20}
}

func (x *BasketConfig) GetBump() uint32 {
	if x != nil {
		return x.Bump
	}
	return 0
}

func (x *BasketConfig) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *BasketConfig) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *BasketConfig) GetRebalancer() string {
	if x != nil {
		return x.Rebalancer
	}
	return ""
}

func (x *BasketConfig) GetMint() string {
	if x != nil {
		return x.Mint
	}
	return ""
}

func (x *BasketConfig) GetIsRebalancing() bool {
	if x != nil {
		return x.IsRebalancing
	}
	return false
}

func (x *BasketConfig) GetComponents() []*BasketComponent {
	if x != nil {
		return x.Components
	}
	return nil
}

type BasketComponent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mint string `protobuf:"bytes,1,opt,name=mint,proto3" json:"mint,omitempty"`
	// In system raw amount
	Quantity uint64 `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"` // quantityInSysDecimal. quantity * 10^6
}

func (x *BasketComponent) Reset() {
	*x = BasketComponent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BasketComponent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BasketComponent) ProtoMessage() {}

func (x *BasketComponent) ProtoReflect() protoreflect.Message {
	mi := &file_pie_dot_fun_v1_pie_program_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BasketComponent.ProtoReflect.Descriptor instead.
func (*BasketComponent) Descriptor() ([]byte, []int) {
	return file_pie_dot_fun_v1_pie_program_proto_rawDescGZIP(), []int{21}
}

func (x *BasketComponent) GetMint() string {
	if x != nil {
		return x.Mint
	}
	return ""
}

func (x *BasketComponent) GetQuantity() uint64 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

var File_pie_dot_fun_v1_pie_program_proto protoreflect.FileDescriptor

var file_pie_dot_fun_v1_pie_program_proto_rawDesc = []byte{
	0x0a, 0x20, 0x70, 0x69, 0x65, 0x2d, 0x64, 0x6f, 0x74, 0x2d, 0x66, 0x75, 0x6e, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x69, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x0c, 0x70, 0x69, 0x65, 0x64, 0x6f, 0x74, 0x66, 0x75, 0x6e, 0x2e, 0x76, 0x31,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64,
	0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x70, 0x69, 0x65, 0x2d, 0x64, 0x6f, 0x74, 0x2d, 0x66, 0x75, 0x6e,
	0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x31,
	0x0a, 0x15, 0x47, 0x65, 0x74, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x56, 0x61, 0x75, 0x6c, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x04, 0x6d, 0x69, 0x6e, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x04, 0x6d, 0x69, 0x6e,
	0x74, 0x22, 0x50, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x56, 0x61,
	0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x36, 0x0a, 0x05, 0x76,
	0x61, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x69, 0x65,
	0x64, 0x6f, 0x74, 0x66, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74,
	0x56, 0x61, 0x75, 0x6c, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x76, 0x61,
	0x75, 0x6c, 0x74, 0x22, 0x42, 0x0a, 0x12, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x56, 0x61, 0x75,
	0x6c, 0x74, 0x45, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x69, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x69, 0x6e, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x22, 0x8c, 0x02, 0x0a, 0x0f, 0x52, 0x65, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0a, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x5f, 0x6d, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x4d, 0x69, 0x6e, 0x74,
	0x12, 0x25, 0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x6d, 0x69, 0x6e, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x0a, 0x6f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x4d, 0x69, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x69, 0x65,
	0x64, 0x6f, 0x74, 0x66, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x1c, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x39, 0x0a, 0x16, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x74, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x48, 0x00, 0x52, 0x14, 0x6f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x68, 0x72, 0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x88, 0x01, 0x01, 0x42, 0x19, 0x0a, 0x17, 0x5f,
	0x6f, 0x74, 0x68, 0x65, 0x72, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x74, 0x68, 0x72,
	0x65, 0x73, 0x68, 0x6f, 0x6c, 0x64, 0x22, 0x3b, 0x0a, 0x12, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x64, 0x54, 0x78, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x12, 0x25, 0x0a, 0x0e,
	0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x5f, 0x74, 0x78, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64,
	0x54, 0x78, 0x73, 0x22, 0xb6, 0x01, 0x0a, 0x17, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x62,
	0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x25, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x5f, 0x6d, 0x69, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x6b,
	0x65, 0x74, 0x4d, 0x69, 0x6e, 0x74, 0x12, 0x35, 0x0a, 0x13, 0x73, 0x6c, 0x69, 0x70, 0x70, 0x61,
	0x67, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x12, 0x73, 0x6c, 0x69, 0x70, 0x70,
	0x61, 0x67, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x3d, 0x0a,
	0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d,
	0x2e, 0x70, 0x69, 0x65, 0x64, 0x6f, 0x74, 0x66, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x52, 0x65,
	0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x04, 0xe2,
	0x41, 0x01, 0x02, 0x52, 0x07, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x99, 0x01, 0x0a,
	0x0b, 0x42, 0x75, 0x79, 0x53, 0x77, 0x61, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x18, 0x0a, 0x04,
	0x6d, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02,
	0x52, 0x04, 0x6d, 0x69, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x09, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x5f, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52,
	0x08, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x49, 0x6e, 0x12, 0x28, 0x0a, 0x0d, 0x6d, 0x61, 0x78,
	0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x49, 0x6e, 0x12, 0x23, 0x0a, 0x0a, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x5f, 0x6f, 0x75,
	0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x09, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x4f, 0x75, 0x74, 0x22, 0xb4, 0x02, 0x0a, 0x12, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x4d, 0x69, 0x6e, 0x74, 0x54, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x25, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x5f, 0x6d, 0x69, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x6b,
	0x65, 0x74, 0x4d, 0x69, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0b, 0x6d, 0x69, 0x6e, 0x74, 0x5f, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01,
	0x02, 0x52, 0x0a, 0x6d, 0x69, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a,
	0x0c, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x0b, 0x69, 0x6e, 0x70, 0x75, 0x74,
	0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29, 0x0a, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2,
	0x41, 0x01, 0x02, 0x52, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x12, 0x43, 0x0a, 0x0d, 0x62, 0x75, 0x79, 0x5f, 0x73, 0x77, 0x61, 0x70, 0x5f, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x70, 0x69, 0x65, 0x64, 0x6f,
	0x74, 0x66, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x79, 0x53, 0x77, 0x61, 0x70, 0x44,
	0x61, 0x74, 0x61, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x0b, 0x62, 0x75, 0x79, 0x53, 0x77,
	0x61, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x26, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x6c,
	0x69, 0x70, 0x70, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x0b,
	0x6d, 0x61, 0x78, 0x53, 0x6c, 0x69, 0x70, 0x70, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0f,
	0x0a, 0x0d, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x6c, 0x69, 0x70, 0x70, 0x61, 0x67, 0x65, 0x22,
	0xbf, 0x01, 0x0a, 0x14, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x54,
	0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0b, 0x62, 0x61, 0x73, 0x6b,
	0x65, 0x74, 0x5f, 0x6d, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2,
	0x41, 0x01, 0x02, 0x52, 0x0a, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x4d, 0x69, 0x6e, 0x74, 0x12,
	0x1c, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x29, 0x0a,
	0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x0c, 0x6f, 0x77, 0x6e, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x26, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f,
	0x73, 0x6c, 0x69, 0x70, 0x70, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00,
	0x52, 0x0b, 0x6d, 0x61, 0x78, 0x53, 0x6c, 0x69, 0x70, 0x70, 0x61, 0x67, 0x65, 0x88, 0x01, 0x01,
	0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x6c, 0x69, 0x70, 0x70, 0x61, 0x67,
	0x65, 0x22, 0x3f, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x21, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x08, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74,
	0x49, 0x64, 0x22, 0x3d, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x4d,
	0x69, 0x6e, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21,
	0x0a, 0x09, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x08, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x49,
	0x64, 0x22, 0x2f, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x4d, 0x69,
	0x6e, 0x74, 0x42, 0x79, 0x49, 0x44, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6d, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x69,
	0x6e, 0x74, 0x22, 0x1c, 0x0a, 0x1a, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x2c, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x04, 0x6d, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x04, 0x6d, 0x69, 0x6e, 0x74, 0x22, 0x5e,
	0x0a, 0x1c, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e,
	0x0a, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x69, 0x65, 0x64, 0x6f, 0x74, 0x66, 0x75, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x6f, 0x6f, 0x6c, 0x42, 0x04, 0xe2, 0x41,
	0x01, 0x02, 0x52, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x22, 0x59,
	0x0a, 0x1d, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x38, 0x0a, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x70, 0x6f, 0x6f, 0x6c, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x69, 0x65, 0x64, 0x6f, 0x74, 0x66, 0x75, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x6f, 0x6f, 0x6c, 0x52, 0x0a, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x22, 0x1c, 0x0a, 0x0a, 0x54, 0x78, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x78, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x78, 0x22, 0xce, 0x01, 0x0a, 0x06, 0x42, 0x61, 0x73, 0x6b,
	0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6d, 0x69, 0x6e, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x61, 0x73, 0x6b, 0x65,
	0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a,
	0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2,
	0x41, 0x01, 0x02, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x16, 0x0a, 0x03, 0x75,
	0x72, 0x69, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x03,
	0x75, 0x72, 0x69, 0x12, 0x43, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x69, 0x65, 0x64, 0x6f, 0x74,
	0x66, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x0a, 0x63, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xa2, 0x01, 0x0a, 0x09, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x50, 0x6f, 0x6f, 0x6c, 0x12, 0x18, 0x0a, 0x04, 0x6d, 0x69, 0x6e, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x04, 0x6d, 0x69, 0x6e, 0x74,
	0x12, 0x39, 0x0a, 0x09, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x70, 0x69, 0x65, 0x64, 0x6f, 0x74, 0x66, 0x75, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x50, 0x6f, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x42, 0x04, 0xe2, 0x41, 0x01,
	0x02, 0x52, 0x08, 0x70, 0x6f, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1d, 0x0a, 0x07, 0x70,
	0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41,
	0x01, 0x02, 0x52, 0x06, 0x70, 0x6f, 0x6f, 0x6c, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6c, 0x6f,
	0x6f, 0x6b, 0x75, 0x70, 0x5f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x22, 0x87, 0x03,
	0x0a, 0x0c, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x62, 0x75, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x62, 0x75,
	0x6d, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x12, 0x2e, 0x0a, 0x13, 0x70, 0x6c, 0x61, 0x74,
	0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x77, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x46,
	0x65, 0x65, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x62, 0x61, 0x73, 0x6b,
	0x65, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x65, 0x72, 0x12,
	0x3a, 0x0a, 0x19, 0x72, 0x65, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x5f, 0x6d, 0x61, 0x72,
	0x67, 0x69, 0x6e, 0x5f, 0x6c, 0x61, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x17, 0x72, 0x65, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x4d, 0x61, 0x72,
	0x67, 0x69, 0x6e, 0x4c, 0x61, 0x6d, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x34, 0x0a, 0x16, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x66, 0x65, 0x65, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x46, 0x65, 0x65, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67,
	0x65, 0x12, 0x36, 0x0a, 0x17, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x5f, 0x66, 0x65,
	0x65, 0x5f, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x15, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x46, 0x65, 0x65, 0x50,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x25, 0x0a, 0x0e, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x69, 0x7a,
	0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x49, 0x6e, 0x69, 0x74,
	0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x22, 0xe6, 0x01, 0x0a, 0x0c, 0x42, 0x61, 0x73, 0x6b,
	0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x75, 0x6d, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x62, 0x75, 0x6d, 0x70, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x62, 0x61,
	0x6c, 0x61, 0x6e, 0x63, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x69, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x69, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x73,
	0x5f, 0x72, 0x65, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x52, 0x65, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x69, 0x6e,
	0x67, 0x12, 0x3d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x69, 0x65, 0x64, 0x6f, 0x74, 0x66, 0x75,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x73,
	0x22, 0x41, 0x0a, 0x0f, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x69, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6d, 0x69, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x71, 0x75, 0x61, 0x6e, 0x74,
	0x69, 0x74, 0x79, 0x2a, 0x42, 0x0a, 0x08, 0x50, 0x6f, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x19, 0x0a, 0x15, 0x50, 0x4f, 0x4f, 0x4c, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4d,
	0x4d, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x43, 0x4c, 0x4d, 0x4d, 0x10, 0x02, 0x12, 0x08, 0x0a,
	0x04, 0x43, 0x50, 0x4d, 0x4d, 0x10, 0x03, 0x2a, 0x40, 0x0a, 0x08, 0x42, 0x61, 0x73, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x42, 0x41, 0x53, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x42, 0x41, 0x53, 0x45, 0x5f, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x42,
	0x41, 0x53, 0x45, 0x5f, 0x4f, 0x55, 0x54, 0x10, 0x02, 0x32, 0xfe, 0x0b, 0x0a, 0x11, 0x50, 0x69,
	0x65, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x64, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x1a, 0x2e, 0x70, 0x69, 0x65,
	0x64, 0x6f, 0x74, 0x66, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15,
	0x2f, 0x76, 0x31, 0x2f, 0x70, 0x69, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2f,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x9a, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x42, 0x61, 0x73,
	0x6b, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x79, 0x49, 0x44, 0x12, 0x28, 0x2e,
	0x70, 0x69, 0x65, 0x64, 0x6f, 0x74, 0x66, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x69, 0x65, 0x64, 0x6f, 0x74,
	0x66, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x22, 0x3d, 0xda, 0x41, 0x09, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x12, 0x29, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x69, 0x65,
	0x2d, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2f, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x2d,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x2f, 0x7b, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x5f, 0x69,
	0x64, 0x7d, 0x12, 0x70, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x12,
	0x1e, 0x2e, 0x70, 0x69, 0x65, 0x64, 0x6f, 0x74, 0x66, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x14, 0x2e, 0x70, 0x69, 0x65, 0x64, 0x6f, 0x74, 0x66, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42,
	0x61, 0x73, 0x6b, 0x65, 0x74, 0x22, 0x2d, 0xda, 0x41, 0x04, 0x6d, 0x69, 0x6e, 0x74, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x20, 0x12, 0x1e, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x69, 0x65, 0x2d, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2f, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x73, 0x2f, 0x7b, 0x6d,
	0x69, 0x6e, 0x74, 0x7d, 0x12, 0x89, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x73, 0x6b,
	0x65, 0x74, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x12, 0x23, 0x2e, 0x70, 0x69, 0x65, 0x64, 0x6f, 0x74,
	0x66, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74,
	0x56, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x70,
	0x69, 0x65, 0x64, 0x6f, 0x74, 0x66, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x42,
	0x61, 0x73, 0x6b, 0x65, 0x74, 0x56, 0x61, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x12, 0x24, 0x2f, 0x76, 0x31, 0x2f,
	0x70, 0x69, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2f, 0x62, 0x61, 0x73, 0x6b,
	0x65, 0x74, 0x73, 0x2d, 0x76, 0x61, 0x75, 0x6c, 0x74, 0x2f, 0x7b, 0x6d, 0x69, 0x6e, 0x74, 0x7d,
	0x12, 0xb2, 0x01, 0x0a, 0x15, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x12, 0x2a, 0x2e, 0x70, 0x69, 0x65,
	0x64, 0x6f, 0x74, 0x66, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x70, 0x69, 0x65, 0x64, 0x6f, 0x74, 0x66,
	0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x74, 0x63, 0x68, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x50, 0x6f, 0x6f, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x40, 0xda, 0x41, 0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x70, 0x6f,
	0x6f, 0x6c, 0x73, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x3a, 0x01, 0x2a, 0x22, 0x27, 0x2f, 0x76,
	0x31, 0x2f, 0x70, 0x69, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x2d, 0x70, 0x6f, 0x6f, 0x6c, 0x73, 0x2f, 0x62, 0x61, 0x74, 0x63, 0x68, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x99, 0x01, 0x0a, 0x10, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52,
	0x65, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x78, 0x12, 0x25, 0x2e, 0x70, 0x69, 0x65,
	0x64, 0x6f, 0x74, 0x66, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52,
	0x65, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x54, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x20, 0x2e, 0x70, 0x69, 0x65, 0x64, 0x6f, 0x74, 0x66, 0x75, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x54, 0x78, 0x42, 0x75, 0x6e,
	0x64, 0x6c, 0x65, 0x22, 0x3c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x36, 0x3a, 0x01, 0x2a, 0x22, 0x31,
	0x2f, 0x76, 0x31, 0x2f, 0x70, 0x69, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2f,
	0x62, 0x75, 0x69, 0x6c, 0x64, 0x2d, 0x74, 0x78, 0x2f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65,
	0x2d, 0x72, 0x65, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2d, 0x62, 0x61, 0x73, 0x6b, 0x65,
	0x74, 0x12, 0x82, 0x01, 0x0a, 0x0b, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x69, 0x6e, 0x74, 0x54,
	0x78, 0x12, 0x20, 0x2e, 0x70, 0x69, 0x65, 0x64, 0x6f, 0x74, 0x66, 0x75, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x4d, 0x69, 0x6e, 0x74, 0x54, 0x78, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70, 0x69, 0x65, 0x64, 0x6f, 0x74, 0x66, 0x75, 0x6e, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x54, 0x78, 0x42,
	0x75, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x2f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x29, 0x3a, 0x01, 0x2a,
	0x22, 0x24, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x69, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x2d, 0x74, 0x78, 0x2f, 0x6d, 0x69, 0x6e, 0x74, 0x2d,
	0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x12, 0x88, 0x01, 0x0a, 0x0d, 0x42, 0x75, 0x69, 0x6c, 0x64,
	0x52, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x54, 0x78, 0x12, 0x22, 0x2e, 0x70, 0x69, 0x65, 0x64, 0x6f,
	0x74, 0x66, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x52, 0x65, 0x64,
	0x65, 0x65, 0x6d, 0x54, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x70,
	0x69, 0x65, 0x64, 0x6f, 0x74, 0x66, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x54, 0x78, 0x42, 0x75, 0x6e, 0x64, 0x6c, 0x65, 0x22, 0x31,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x3a, 0x01, 0x2a, 0x22, 0x26, 0x2f, 0x76, 0x31, 0x2f, 0x70,
	0x69, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2f, 0x62, 0x75, 0x69, 0x6c, 0x64,
	0x2d, 0x74, 0x78, 0x2f, 0x72, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x2d, 0x62, 0x61, 0x73, 0x6b, 0x65,
	0x74, 0x12, 0x73, 0x0a, 0x13, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x12, 0x14, 0x2e, 0x70, 0x69, 0x65, 0x64, 0x6f,
	0x74, 0x66, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x1a, 0x14,
	0x2e, 0x70, 0x69, 0x65, 0x64, 0x6f, 0x74, 0x66, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61,
	0x73, 0x6b, 0x65, 0x74, 0x22, 0x30, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2a, 0x3a, 0x01, 0x2a, 0x22,
	0x25, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x69, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2d,
	0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x12, 0x88, 0x01, 0x0a, 0x1b, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x52, 0x65, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65,
	0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x12, 0x14, 0x2e, 0x70, 0x69, 0x65, 0x64, 0x6f, 0x74, 0x66,
	0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x1a, 0x18, 0x2e, 0x70,
	0x69, 0x65, 0x64, 0x6f, 0x74, 0x66, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x78, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x3a, 0x01,
	0x2a, 0x22, 0x2e, 0x2f, 0x76, 0x31, 0x2f, 0x70, 0x69, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2f, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x2d, 0x72, 0x65, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x2d, 0x62, 0x61, 0x73, 0x6b, 0x65,
	0x74, 0x12, 0x86, 0x01, 0x0a, 0x1a, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x6f,
	0x70, 0x52, 0x65, 0x62, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x42, 0x61, 0x73, 0x6b, 0x65, 0x74,
	0x12, 0x14, 0x2e, 0x70, 0x69, 0x65, 0x64, 0x6f, 0x74, 0x66, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x42, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x1a, 0x18, 0x2e, 0x70, 0x69, 0x65, 0x64, 0x6f, 0x74, 0x66,
	0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x38, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x32, 0x3a, 0x01, 0x2a, 0x22, 0x2d, 0x2f, 0x76, 0x31,
	0x2f, 0x70, 0x69, 0x65, 0x2d, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x2f, 0x73, 0x74, 0x6f, 0x70, 0x2d, 0x72, 0x65, 0x62, 0x61, 0x6c, 0x61,
	0x6e, 0x63, 0x65, 0x2d, 0x62, 0x61, 0x73, 0x6b, 0x65, 0x74, 0x42, 0x3e, 0x5a, 0x3c, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6f, 0x2d, 0x6c, 0x61, 0x62, 0x73,
	0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x62, 0x61, 0x72, 0x2d, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x67,
	0x6f, 0x2f, 0x70, 0x69, 0x65, 0x2d, 0x64, 0x6f, 0x74, 0x2d, 0x66, 0x75, 0x6e, 0x2f, 0x76, 0x31,
	0x3b, 0x70, 0x69, 0x65, 0x64, 0x6f, 0x74, 0x66, 0x75, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_pie_dot_fun_v1_pie_program_proto_rawDescOnce sync.Once
	file_pie_dot_fun_v1_pie_program_proto_rawDescData = file_pie_dot_fun_v1_pie_program_proto_rawDesc
)

func file_pie_dot_fun_v1_pie_program_proto_rawDescGZIP() []byte {
	file_pie_dot_fun_v1_pie_program_proto_rawDescOnce.Do(func() {
		file_pie_dot_fun_v1_pie_program_proto_rawDescData = protoimpl.X.CompressGZIP(file_pie_dot_fun_v1_pie_program_proto_rawDescData)
	})
	return file_pie_dot_fun_v1_pie_program_proto_rawDescData
}

var file_pie_dot_fun_v1_pie_program_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_pie_dot_fun_v1_pie_program_proto_msgTypes = make([]protoimpl.MessageInfo, 22)
var file_pie_dot_fun_v1_pie_program_proto_goTypes = []interface{}{
	(PoolType)(0),                         // 0: piedotfun.v1.PoolType
	(BaseType)(0),                         // 1: piedotfun.v1.BaseType
	(*GetBasketVaultRequest)(nil),         // 2: piedotfun.v1.GetBasketVaultRequest
	(*GetBasketVaultResponse)(nil),        // 3: piedotfun.v1.GetBasketVaultResponse
	(*BasketVaultElement)(nil),            // 4: piedotfun.v1.BasketVaultElement
	(*RebalanceAction)(nil),               // 5: piedotfun.v1.RebalanceAction
	(*SerializedTxBundle)(nil),            // 6: piedotfun.v1.SerializedTxBundle
	(*BuildRebalanceTxRequest)(nil),       // 7: piedotfun.v1.BuildRebalanceTxRequest
	(*BuySwapData)(nil),                   // 8: piedotfun.v1.BuySwapData
	(*BuildMintTxRequest)(nil),            // 9: piedotfun.v1.BuildMintTxRequest
	(*BuildRedeemTxRequest)(nil),          // 10: piedotfun.v1.BuildRedeemTxRequest
	(*GetBasketConfigByIDRequest)(nil),    // 11: piedotfun.v1.GetBasketConfigByIDRequest
	(*GetBasketMintByIDRequest)(nil),      // 12: piedotfun.v1.GetBasketMintByIDRequest
	(*GetBasketMintByIDResponse)(nil),     // 13: piedotfun.v1.GetBasketMintByIDResponse
	(*CommandCreateBasketRequest)(nil),    // 14: piedotfun.v1.CommandCreateBasketRequest
	(*GetBasketRequest)(nil),              // 15: piedotfun.v1.GetBasketRequest
	(*BatchCreateTokenPoolsRequest)(nil),  // 16: piedotfun.v1.BatchCreateTokenPoolsRequest
	(*BatchCreateTokenPoolsResponse)(nil), // 17: piedotfun.v1.BatchCreateTokenPoolsResponse
	(*TxResponse)(nil),                    // 18: piedotfun.v1.TxResponse
	(*Basket)(nil),                        // 19: piedotfun.v1.Basket
	(*TokenPool)(nil),                     // 20: piedotfun.v1.TokenPool
	(*ProgramState)(nil),                  // 21: piedotfun.v1.ProgramState
	(*BasketConfig)(nil),                  // 22: piedotfun.v1.BasketConfig
	(*BasketComponent)(nil),               // 23: piedotfun.v1.BasketComponent
	(*emptypb.Empty)(nil),                 // 24: google.protobuf.Empty
}
var file_pie_dot_fun_v1_pie_program_proto_depIdxs = []int32{
	4,  // 0: piedotfun.v1.GetBasketVaultResponse.vault:type_name -> piedotfun.v1.BasketVaultElement
	1,  // 1: piedotfun.v1.RebalanceAction.base_type:type_name -> piedotfun.v1.BaseType
	5,  // 2: piedotfun.v1.BuildRebalanceTxRequest.actions:type_name -> piedotfun.v1.RebalanceAction
	8,  // 3: piedotfun.v1.BuildMintTxRequest.buy_swap_data:type_name -> piedotfun.v1.BuySwapData
	20, // 4: piedotfun.v1.BatchCreateTokenPoolsRequest.token_pools:type_name -> piedotfun.v1.TokenPool
	20, // 5: piedotfun.v1.BatchCreateTokenPoolsResponse.token_pools:type_name -> piedotfun.v1.TokenPool
	23, // 6: piedotfun.v1.Basket.components:type_name -> piedotfun.v1.BasketComponent
	0,  // 7: piedotfun.v1.TokenPool.pool_type:type_name -> piedotfun.v1.PoolType
	23, // 8: piedotfun.v1.BasketConfig.components:type_name -> piedotfun.v1.BasketComponent
	24, // 9: piedotfun.v1.PieProgramService.GetProgramState:input_type -> google.protobuf.Empty
	11, // 10: piedotfun.v1.PieProgramService.GetBasketConfigByID:input_type -> piedotfun.v1.GetBasketConfigByIDRequest
	15, // 11: piedotfun.v1.PieProgramService.GetBasket:input_type -> piedotfun.v1.GetBasketRequest
	2,  // 12: piedotfun.v1.PieProgramService.GetBasketVault:input_type -> piedotfun.v1.GetBasketVaultRequest
	16, // 13: piedotfun.v1.PieProgramService.BatchCreateTokenPools:input_type -> piedotfun.v1.BatchCreateTokenPoolsRequest
	7,  // 14: piedotfun.v1.PieProgramService.BuildRebalanceTx:input_type -> piedotfun.v1.BuildRebalanceTxRequest
	9,  // 15: piedotfun.v1.PieProgramService.BuildMintTx:input_type -> piedotfun.v1.BuildMintTxRequest
	10, // 16: piedotfun.v1.PieProgramService.BuildRedeemTx:input_type -> piedotfun.v1.BuildRedeemTxRequest
	19, // 17: piedotfun.v1.PieProgramService.CommandCreateBasket:input_type -> piedotfun.v1.Basket
	19, // 18: piedotfun.v1.PieProgramService.CommandStartRebalanceBasket:input_type -> piedotfun.v1.Basket
	19, // 19: piedotfun.v1.PieProgramService.CommandStopRebalanceBasket:input_type -> piedotfun.v1.Basket
	21, // 20: piedotfun.v1.PieProgramService.GetProgramState:output_type -> piedotfun.v1.ProgramState
	22, // 21: piedotfun.v1.PieProgramService.GetBasketConfigByID:output_type -> piedotfun.v1.BasketConfig
	19, // 22: piedotfun.v1.PieProgramService.GetBasket:output_type -> piedotfun.v1.Basket
	3,  // 23: piedotfun.v1.PieProgramService.GetBasketVault:output_type -> piedotfun.v1.GetBasketVaultResponse
	17, // 24: piedotfun.v1.PieProgramService.BatchCreateTokenPools:output_type -> piedotfun.v1.BatchCreateTokenPoolsResponse
	6,  // 25: piedotfun.v1.PieProgramService.BuildRebalanceTx:output_type -> piedotfun.v1.SerializedTxBundle
	6,  // 26: piedotfun.v1.PieProgramService.BuildMintTx:output_type -> piedotfun.v1.SerializedTxBundle
	6,  // 27: piedotfun.v1.PieProgramService.BuildRedeemTx:output_type -> piedotfun.v1.SerializedTxBundle
	19, // 28: piedotfun.v1.PieProgramService.CommandCreateBasket:output_type -> piedotfun.v1.Basket
	18, // 29: piedotfun.v1.PieProgramService.CommandStartRebalanceBasket:output_type -> piedotfun.v1.TxResponse
	18, // 30: piedotfun.v1.PieProgramService.CommandStopRebalanceBasket:output_type -> piedotfun.v1.TxResponse
	20, // [20:31] is the sub-list for method output_type
	9,  // [9:20] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_pie_dot_fun_v1_pie_program_proto_init() }
func file_pie_dot_fun_v1_pie_program_proto_init() {
	if File_pie_dot_fun_v1_pie_program_proto != nil {
		return
	}
	file_pie_dot_fun_v1_auth_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_pie_dot_fun_v1_pie_program_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBasketVaultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pie_dot_fun_v1_pie_program_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBasketVaultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pie_dot_fun_v1_pie_program_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasketVaultElement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pie_dot_fun_v1_pie_program_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RebalanceAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pie_dot_fun_v1_pie_program_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SerializedTxBundle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pie_dot_fun_v1_pie_program_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildRebalanceTxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pie_dot_fun_v1_pie_program_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuySwapData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pie_dot_fun_v1_pie_program_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildMintTxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pie_dot_fun_v1_pie_program_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuildRedeemTxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pie_dot_fun_v1_pie_program_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBasketConfigByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pie_dot_fun_v1_pie_program_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBasketMintByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pie_dot_fun_v1_pie_program_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBasketMintByIDResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pie_dot_fun_v1_pie_program_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommandCreateBasketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pie_dot_fun_v1_pie_program_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBasketRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pie_dot_fun_v1_pie_program_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateTokenPoolsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pie_dot_fun_v1_pie_program_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BatchCreateTokenPoolsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pie_dot_fun_v1_pie_program_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pie_dot_fun_v1_pie_program_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Basket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pie_dot_fun_v1_pie_program_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenPool); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pie_dot_fun_v1_pie_program_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProgramState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pie_dot_fun_v1_pie_program_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasketConfig); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pie_dot_fun_v1_pie_program_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BasketComponent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_pie_dot_fun_v1_pie_program_proto_msgTypes[3].OneofWrappers = []interface{}{}
	file_pie_dot_fun_v1_pie_program_proto_msgTypes[7].OneofWrappers = []interface{}{}
	file_pie_dot_fun_v1_pie_program_proto_msgTypes[8].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pie_dot_fun_v1_pie_program_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   22,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pie_dot_fun_v1_pie_program_proto_goTypes,
		DependencyIndexes: file_pie_dot_fun_v1_pie_program_proto_depIdxs,
		EnumInfos:         file_pie_dot_fun_v1_pie_program_proto_enumTypes,
		MessageInfos:      file_pie_dot_fun_v1_pie_program_proto_msgTypes,
	}.Build()
	File_pie_dot_fun_v1_pie_program_proto = out.File
	file_pie_dot_fun_v1_pie_program_proto_rawDesc = nil
	file_pie_dot_fun_v1_pie_program_proto_goTypes = nil
	file_pie_dot_fun_v1_pie_program_proto_depIdxs = nil
}

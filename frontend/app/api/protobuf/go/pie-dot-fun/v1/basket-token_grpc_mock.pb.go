// Code generated by protoc-gen-go-grpc-mock. DO NOT EDIT.
// source: pie-dot-fun/v1/basket-token.proto

package piedotfun

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	grpc "google.golang.org/grpc"
)

// MockBasketTokenServiceClient is a mock of BasketTokenServiceClient interface.
type MockBasketTokenServiceClient struct {
	ctrl     *gomock.Controller
	recorder *MockBasketTokenServiceClientMockRecorder
}

// MockBasketTokenServiceClientMockRecorder is the mock recorder for MockBasketTokenServiceClient.
type MockBasketTokenServiceClientMockRecorder struct {
	mock *MockBasketTokenServiceClient
}

// NewMockBasketTokenServiceClient creates a new mock instance.
func NewMockBasketTokenServiceClient(ctrl *gomock.Controller) *MockBasketTokenServiceClient {
	mock := &MockBasketTokenServiceClient{ctrl: ctrl}
	mock.recorder = &MockBasketTokenServiceClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBasketTokenServiceClient) EXPECT() *MockBasketTokenServiceClientMockRecorder {
	return m.recorder
}

// GetBasketToken mocks base method.
func (m *MockBasketTokenServiceClient) GetBasketToken(ctx context.Context, in *GetBasketTokenRequest, opts ...grpc.CallOption) (*BasketToken, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetBasketToken", varargs...)
	ret0, _ := ret[0].(*BasketToken)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBasketToken indicates an expected call of GetBasketToken.
func (mr *MockBasketTokenServiceClientMockRecorder) GetBasketToken(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBasketToken", reflect.TypeOf((*MockBasketTokenServiceClient)(nil).GetBasketToken), varargs...)
}

// ListBasketTokenRebalancingHistories mocks base method.
func (m *MockBasketTokenServiceClient) ListBasketTokenRebalancingHistories(ctx context.Context, in *ListRebalancingHistoriesRequest, opts ...grpc.CallOption) (*ListRebalancingHistoriesResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListBasketTokenRebalancingHistories", varargs...)
	ret0, _ := ret[0].(*ListRebalancingHistoriesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListBasketTokenRebalancingHistories indicates an expected call of ListBasketTokenRebalancingHistories.
func (mr *MockBasketTokenServiceClientMockRecorder) ListBasketTokenRebalancingHistories(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListBasketTokenRebalancingHistories", reflect.TypeOf((*MockBasketTokenServiceClient)(nil).ListBasketTokenRebalancingHistories), varargs...)
}

// ListBasketTokens mocks base method.
func (m *MockBasketTokenServiceClient) ListBasketTokens(ctx context.Context, in *ListBasketTokensRequest, opts ...grpc.CallOption) (*ListBasketTokensResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListBasketTokens", varargs...)
	ret0, _ := ret[0].(*ListBasketTokensResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListBasketTokens indicates an expected call of ListBasketTokens.
func (mr *MockBasketTokenServiceClientMockRecorder) ListBasketTokens(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListBasketTokens", reflect.TypeOf((*MockBasketTokenServiceClient)(nil).ListBasketTokens), varargs...)
}

// MockBasketTokenServiceServer is a mock of BasketTokenServiceServer interface.
type MockBasketTokenServiceServer struct {
	ctrl     *gomock.Controller
	recorder *MockBasketTokenServiceServerMockRecorder
}

// MockBasketTokenServiceServerMockRecorder is the mock recorder for MockBasketTokenServiceServer.
type MockBasketTokenServiceServerMockRecorder struct {
	mock *MockBasketTokenServiceServer
}

// NewMockBasketTokenServiceServer creates a new mock instance.
func NewMockBasketTokenServiceServer(ctrl *gomock.Controller) *MockBasketTokenServiceServer {
	mock := &MockBasketTokenServiceServer{ctrl: ctrl}
	mock.recorder = &MockBasketTokenServiceServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBasketTokenServiceServer) EXPECT() *MockBasketTokenServiceServerMockRecorder {
	return m.recorder
}

// GetBasketToken mocks base method.
func (m *MockBasketTokenServiceServer) GetBasketToken(ctx context.Context, in *GetBasketTokenRequest) (*BasketToken, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBasketToken", ctx, in)
	ret0, _ := ret[0].(*BasketToken)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBasketToken indicates an expected call of GetBasketToken.
func (mr *MockBasketTokenServiceServerMockRecorder) GetBasketToken(ctx, in interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBasketToken", reflect.TypeOf((*MockBasketTokenServiceServer)(nil).GetBasketToken), ctx, in)
}

// ListBasketTokenRebalancingHistories mocks base method.
func (m *MockBasketTokenServiceServer) ListBasketTokenRebalancingHistories(ctx context.Context, in *ListRebalancingHistoriesRequest) (*ListRebalancingHistoriesResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListBasketTokenRebalancingHistories", ctx, in)
	ret0, _ := ret[0].(*ListRebalancingHistoriesResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListBasketTokenRebalancingHistories indicates an expected call of ListBasketTokenRebalancingHistories.
func (mr *MockBasketTokenServiceServerMockRecorder) ListBasketTokenRebalancingHistories(ctx, in interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListBasketTokenRebalancingHistories", reflect.TypeOf((*MockBasketTokenServiceServer)(nil).ListBasketTokenRebalancingHistories), ctx, in)
}

// ListBasketTokens mocks base method.
func (m *MockBasketTokenServiceServer) ListBasketTokens(ctx context.Context, in *ListBasketTokensRequest) (*ListBasketTokensResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListBasketTokens", ctx, in)
	ret0, _ := ret[0].(*ListBasketTokensResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListBasketTokens indicates an expected call of ListBasketTokens.
func (mr *MockBasketTokenServiceServerMockRecorder) ListBasketTokens(ctx, in interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListBasketTokens", reflect.TypeOf((*MockBasketTokenServiceServer)(nil).ListBasketTokens), ctx, in)
}

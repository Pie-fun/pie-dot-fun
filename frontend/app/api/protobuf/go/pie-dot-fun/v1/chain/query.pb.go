// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: pie-dot-fun/v1/chain/query.proto

package chain

import (
	_ "github.com/ao-labs/spacebar-apis/go/pie-dot-fun/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/fieldmaskpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type QueryFungibleTokenDecimalsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FungibleToken string `protobuf:"bytes,1,opt,name=fungible_token,json=fungibleToken,proto3" json:"fungible_token,omitempty"`
}

func (x *QueryFungibleTokenDecimalsRequest) Reset() {
	*x = QueryFungibleTokenDecimalsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pie_dot_fun_v1_chain_query_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFungibleTokenDecimalsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFungibleTokenDecimalsRequest) ProtoMessage() {}

func (x *QueryFungibleTokenDecimalsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pie_dot_fun_v1_chain_query_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFungibleTokenDecimalsRequest.ProtoReflect.Descriptor instead.
func (*QueryFungibleTokenDecimalsRequest) Descriptor() ([]byte, []int) {
	return file_pie_dot_fun_v1_chain_query_proto_rawDescGZIP(), []int{0}
}

func (x *QueryFungibleTokenDecimalsRequest) GetFungibleToken() string {
	if x != nil {
		return x.FungibleToken
	}
	return ""
}

type QueryFungibleTokenDecimalsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Decimals int32 `protobuf:"varint,1,opt,name=decimals,proto3" json:"decimals,omitempty"`
}

func (x *QueryFungibleTokenDecimalsResponse) Reset() {
	*x = QueryFungibleTokenDecimalsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pie_dot_fun_v1_chain_query_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFungibleTokenDecimalsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFungibleTokenDecimalsResponse) ProtoMessage() {}

func (x *QueryFungibleTokenDecimalsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pie_dot_fun_v1_chain_query_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFungibleTokenDecimalsResponse.ProtoReflect.Descriptor instead.
func (*QueryFungibleTokenDecimalsResponse) Descriptor() ([]byte, []int) {
	return file_pie_dot_fun_v1_chain_query_proto_rawDescGZIP(), []int{1}
}

func (x *QueryFungibleTokenDecimalsResponse) GetDecimals() int32 {
	if x != nil {
		return x.Decimals
	}
	return 0
}

type QueryFungibleTokenMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FungibleToken string `protobuf:"bytes,1,opt,name=fungible_token,json=fungibleToken,proto3" json:"fungible_token,omitempty"`
}

func (x *QueryFungibleTokenMetadataRequest) Reset() {
	*x = QueryFungibleTokenMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pie_dot_fun_v1_chain_query_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFungibleTokenMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFungibleTokenMetadataRequest) ProtoMessage() {}

func (x *QueryFungibleTokenMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pie_dot_fun_v1_chain_query_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFungibleTokenMetadataRequest.ProtoReflect.Descriptor instead.
func (*QueryFungibleTokenMetadataRequest) Descriptor() ([]byte, []int) {
	return file_pie_dot_fun_v1_chain_query_proto_rawDescGZIP(), []int{2}
}

func (x *QueryFungibleTokenMetadataRequest) GetFungibleToken() string {
	if x != nil {
		return x.FungibleToken
	}
	return ""
}

type QueryFungibleTokenMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uri      string    `protobuf:"bytes,1,opt,name=uri,proto3" json:"uri,omitempty"`
	Metadata *Metadata `protobuf:"bytes,2,opt,name=metadata,proto3" json:"metadata,omitempty"`
}

func (x *QueryFungibleTokenMetadataResponse) Reset() {
	*x = QueryFungibleTokenMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pie_dot_fun_v1_chain_query_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryFungibleTokenMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryFungibleTokenMetadataResponse) ProtoMessage() {}

func (x *QueryFungibleTokenMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pie_dot_fun_v1_chain_query_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryFungibleTokenMetadataResponse.ProtoReflect.Descriptor instead.
func (*QueryFungibleTokenMetadataResponse) Descriptor() ([]byte, []int) {
	return file_pie_dot_fun_v1_chain_query_proto_rawDescGZIP(), []int{3}
}

func (x *QueryFungibleTokenMetadataResponse) GetUri() string {
	if x != nil {
		return x.Uri
	}
	return ""
}

func (x *QueryFungibleTokenMetadataResponse) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Symbol      string `protobuf:"bytes,2,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Image       string `protobuf:"bytes,3,opt,name=image,proto3" json:"image,omitempty"`
	Description string `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	OneLiner    string `protobuf:"bytes,5,opt,name=one_liner,json=oneLiner,proto3" json:"one_liner,omitempty"`
	Website     string `protobuf:"bytes,6,opt,name=website,proto3" json:"website,omitempty"`
	Email       string `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	Twitter     string `protobuf:"bytes,8,opt,name=twitter,proto3" json:"twitter,omitempty"`
	Telegram    string `protobuf:"bytes,9,opt,name=telegram,proto3" json:"telegram,omitempty"`
	Discord     string `protobuf:"bytes,10,opt,name=discord,proto3" json:"discord,omitempty"`
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pie_dot_fun_v1_chain_query_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_pie_dot_fun_v1_chain_query_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_pie_dot_fun_v1_chain_query_proto_rawDescGZIP(), []int{4}
}

func (x *Metadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Metadata) GetSymbol() string {
	if x != nil {
		return x.Symbol
	}
	return ""
}

func (x *Metadata) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Metadata) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Metadata) GetOneLiner() string {
	if x != nil {
		return x.OneLiner
	}
	return ""
}

func (x *Metadata) GetWebsite() string {
	if x != nil {
		return x.Website
	}
	return ""
}

func (x *Metadata) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *Metadata) GetTwitter() string {
	if x != nil {
		return x.Twitter
	}
	return ""
}

func (x *Metadata) GetTelegram() string {
	if x != nil {
		return x.Telegram
	}
	return ""
}

func (x *Metadata) GetDiscord() string {
	if x != nil {
		return x.Discord
	}
	return ""
}

var File_pie_dot_fun_v1_chain_query_proto protoreflect.FileDescriptor

var file_pie_dot_fun_v1_chain_query_proto_rawDesc = []byte{
	0x0a, 0x20, 0x70, 0x69, 0x65, 0x2d, 0x64, 0x6f, 0x74, 0x2d, 0x66, 0x75, 0x6e, 0x2f, 0x76, 0x31,
	0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x12, 0x70, 0x69, 0x65, 0x64, 0x6f, 0x74, 0x66, 0x75, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61,
	0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61,
	0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70,
	0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x70, 0x69, 0x65, 0x2d, 0x64,
	0x6f, 0x74, 0x2d, 0x66, 0x75, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x7d, 0x0a, 0x21, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x75, 0x6e,
	0x67, 0x69, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61,
	0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x58, 0x0a, 0x0e, 0x66, 0x75, 0x6e,
	0x67, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x31, 0xe2, 0x41, 0x01, 0x02, 0xfa, 0x41, 0x2a, 0x0a, 0x28, 0x70, 0x69, 0x65, 0x64,
	0x6f, 0x74, 0x66, 0x75, 0x6e, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x62, 0x61, 0x72, 0x61, 0x70,
	0x69, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x2f, 0x46, 0x75, 0x6e, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x0d, 0x66, 0x75, 0x6e, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x40, 0x0a, 0x22, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x75, 0x6e, 0x67,
	0x69, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x63,
	0x69, 0x6d, 0x61, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64, 0x65, 0x63,
	0x69, 0x6d, 0x61, 0x6c, 0x73, 0x22, 0x7d, 0x0a, 0x21, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x75,
	0x6e, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x58, 0x0a, 0x0e, 0x66, 0x75,
	0x6e, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x31, 0xe2, 0x41, 0x01, 0x02, 0xfa, 0x41, 0x2a, 0x0a, 0x28, 0x70, 0x69, 0x65,
	0x64, 0x6f, 0x74, 0x66, 0x75, 0x6e, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x62, 0x61, 0x72, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x2f, 0x46, 0x75, 0x6e, 0x67, 0x69, 0x62, 0x6c, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x0d, 0x66, 0x75, 0x6e, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x70, 0x0a, 0x22, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x75, 0x6e,
	0x67, 0x69, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x38, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c,
	0x2e, 0x70, 0x69, 0x65, 0x64, 0x6f, 0x74, 0x66, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x22, 0x8b, 0x02, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x6e, 0x65, 0x5f, 0x6c,
	0x69, 0x6e, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x6e, 0x65, 0x4c,
	0x69, 0x6e, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65,
	0x6d, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x12, 0x1a,
	0x0a, 0x08, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x74, 0x65, 0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69,
	0x73, 0x63, 0x6f, 0x72, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x69, 0x73,
	0x63, 0x6f, 0x72, 0x64, 0x32, 0xc9, 0x03, 0x0a, 0x11, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0xd8, 0x01, 0x0a, 0x1a, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x46, 0x75, 0x6e, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0x35, 0x2e, 0x70, 0x69, 0x65, 0x64,
	0x6f, 0x74, 0x66, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x46, 0x75, 0x6e, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x36, 0x2e, 0x70, 0x69, 0x65, 0x64, 0x6f, 0x74, 0x66, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x75, 0x6e, 0x67, 0x69,
	0x62, 0x6c, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4b, 0xda, 0x41, 0x0e, 0x66, 0x75, 0x6e,
	0x67, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0xb5, 0x18, 0x01, 0x98,
	0xb5, 0x18, 0x01, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2c, 0x3a, 0x01, 0x2a, 0x22, 0x27, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x3a, 0x66, 0x75,
	0x6e, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x64, 0x65, 0x63,
	0x69, 0x6d, 0x61, 0x6c, 0x73, 0x12, 0xd8, 0x01, 0x0a, 0x1a, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46,
	0x75, 0x6e, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x12, 0x35, 0x2e, 0x70, 0x69, 0x65, 0x64, 0x6f, 0x74, 0x66, 0x75, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46,
	0x75, 0x6e, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x36, 0x2e, 0x70, 0x69,
	0x65, 0x64, 0x6f, 0x74, 0x66, 0x75, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x46, 0x75, 0x6e, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x4b, 0xda, 0x41, 0x0e, 0x66, 0x75, 0x6e, 0x67, 0x69, 0x62, 0x6c, 0x65,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x88, 0xb5, 0x18, 0x01, 0x98, 0xb5, 0x18, 0x01, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x2c, 0x3a, 0x01, 0x2a, 0x22, 0x27, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x2f, 0x71, 0x75, 0x65, 0x72, 0x79, 0x3a, 0x66, 0x75, 0x6e, 0x67, 0x69, 0x62, 0x6c,
	0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x42, 0x40, 0x5a, 0x3e, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61,
	0x6f, 0x2d, 0x6c, 0x61, 0x62, 0x73, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x62, 0x61, 0x72, 0x2d,
	0x61, 0x70, 0x69, 0x73, 0x2f, 0x67, 0x6f, 0x2f, 0x70, 0x69, 0x65, 0x2d, 0x64, 0x6f, 0x74, 0x2d,
	0x66, 0x75, 0x6e, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x3b, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pie_dot_fun_v1_chain_query_proto_rawDescOnce sync.Once
	file_pie_dot_fun_v1_chain_query_proto_rawDescData = file_pie_dot_fun_v1_chain_query_proto_rawDesc
)

func file_pie_dot_fun_v1_chain_query_proto_rawDescGZIP() []byte {
	file_pie_dot_fun_v1_chain_query_proto_rawDescOnce.Do(func() {
		file_pie_dot_fun_v1_chain_query_proto_rawDescData = protoimpl.X.CompressGZIP(file_pie_dot_fun_v1_chain_query_proto_rawDescData)
	})
	return file_pie_dot_fun_v1_chain_query_proto_rawDescData
}

var file_pie_dot_fun_v1_chain_query_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_pie_dot_fun_v1_chain_query_proto_goTypes = []interface{}{
	(*QueryFungibleTokenDecimalsRequest)(nil),  // 0: piedotfun.v1.chain.QueryFungibleTokenDecimalsRequest
	(*QueryFungibleTokenDecimalsResponse)(nil), // 1: piedotfun.v1.chain.QueryFungibleTokenDecimalsResponse
	(*QueryFungibleTokenMetadataRequest)(nil),  // 2: piedotfun.v1.chain.QueryFungibleTokenMetadataRequest
	(*QueryFungibleTokenMetadataResponse)(nil), // 3: piedotfun.v1.chain.QueryFungibleTokenMetadataResponse
	(*Metadata)(nil), // 4: piedotfun.v1.chain.Metadata
}
var file_pie_dot_fun_v1_chain_query_proto_depIdxs = []int32{
	4, // 0: piedotfun.v1.chain.QueryFungibleTokenMetadataResponse.metadata:type_name -> piedotfun.v1.chain.Metadata
	0, // 1: piedotfun.v1.chain.ChainQueryService.QueryFungibleTokenDecimals:input_type -> piedotfun.v1.chain.QueryFungibleTokenDecimalsRequest
	2, // 2: piedotfun.v1.chain.ChainQueryService.QueryFungibleTokenMetadata:input_type -> piedotfun.v1.chain.QueryFungibleTokenMetadataRequest
	1, // 3: piedotfun.v1.chain.ChainQueryService.QueryFungibleTokenDecimals:output_type -> piedotfun.v1.chain.QueryFungibleTokenDecimalsResponse
	3, // 4: piedotfun.v1.chain.ChainQueryService.QueryFungibleTokenMetadata:output_type -> piedotfun.v1.chain.QueryFungibleTokenMetadataResponse
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_pie_dot_fun_v1_chain_query_proto_init() }
func file_pie_dot_fun_v1_chain_query_proto_init() {
	if File_pie_dot_fun_v1_chain_query_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pie_dot_fun_v1_chain_query_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFungibleTokenDecimalsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pie_dot_fun_v1_chain_query_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFungibleTokenDecimalsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pie_dot_fun_v1_chain_query_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFungibleTokenMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pie_dot_fun_v1_chain_query_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryFungibleTokenMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pie_dot_fun_v1_chain_query_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pie_dot_fun_v1_chain_query_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pie_dot_fun_v1_chain_query_proto_goTypes,
		DependencyIndexes: file_pie_dot_fun_v1_chain_query_proto_depIdxs,
		MessageInfos:      file_pie_dot_fun_v1_chain_query_proto_msgTypes,
	}.Build()
	File_pie_dot_fun_v1_chain_query_proto = out.File
	file_pie_dot_fun_v1_chain_query_proto_rawDesc = nil
	file_pie_dot_fun_v1_chain_query_proto_goTypes = nil
	file_pie_dot_fun_v1_chain_query_proto_depIdxs = nil
}

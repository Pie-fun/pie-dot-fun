// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: ethereum/v1/chain/sign.proto

package chain

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/fieldmaskpb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SignWKeyMintRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EoaAddress string `protobuf:"bytes,1,opt,name=eoa_address,json=eoaAddress,proto3" json:"eoa_address,omitempty"`
}

func (x *SignWKeyMintRequest) Reset() {
	*x = SignWKeyMintRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ethereum_v1_chain_sign_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignWKeyMintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignWKeyMintRequest) ProtoMessage() {}

func (x *SignWKeyMintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ethereum_v1_chain_sign_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignWKeyMintRequest.ProtoReflect.Descriptor instead.
func (*SignWKeyMintRequest) Descriptor() ([]byte, []int) {
	return file_ethereum_v1_chain_sign_proto_rawDescGZIP(), []int{0}
}

func (x *SignWKeyMintRequest) GetEoaAddress() string {
	if x != nil {
		return x.EoaAddress
	}
	return ""
}

type SignKeyMintRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This field will be injected from the auth token by Gateway, which means web client do not need to pass this field.
	ProfileContractAddress *string `protobuf:"bytes,1,opt,name=profile_contract_address,json=profileContractAddress,proto3,oneof" json:"profile_contract_address,omitempty"`
	// This field will be injected from the auth token by Gateway, which means web client do not need to pass this field.
	ProfileTokenId *string `protobuf:"bytes,2,opt,name=profile_token_id,json=profileTokenId,proto3,oneof" json:"profile_token_id,omitempty"`
	// This field will be injected from the auth token by Gateway, which means web client do not need to pass this field.
	SpaceshipTokenId *string `protobuf:"bytes,3,opt,name=spaceship_token_id,json=spaceshipTokenId,proto3,oneof" json:"spaceship_token_id,omitempty"`
	KeyTokenId       string  `protobuf:"bytes,4,opt,name=key_token_id,json=keyTokenId,proto3" json:"key_token_id,omitempty"`
	EthContribution  string  `protobuf:"bytes,5,opt,name=eth_contribution,json=ethContribution,proto3" json:"eth_contribution,omitempty"`
}

func (x *SignKeyMintRequest) Reset() {
	*x = SignKeyMintRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ethereum_v1_chain_sign_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignKeyMintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignKeyMintRequest) ProtoMessage() {}

func (x *SignKeyMintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ethereum_v1_chain_sign_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignKeyMintRequest.ProtoReflect.Descriptor instead.
func (*SignKeyMintRequest) Descriptor() ([]byte, []int) {
	return file_ethereum_v1_chain_sign_proto_rawDescGZIP(), []int{1}
}

func (x *SignKeyMintRequest) GetProfileContractAddress() string {
	if x != nil && x.ProfileContractAddress != nil {
		return *x.ProfileContractAddress
	}
	return ""
}

func (x *SignKeyMintRequest) GetProfileTokenId() string {
	if x != nil && x.ProfileTokenId != nil {
		return *x.ProfileTokenId
	}
	return ""
}

func (x *SignKeyMintRequest) GetSpaceshipTokenId() string {
	if x != nil && x.SpaceshipTokenId != nil {
		return *x.SpaceshipTokenId
	}
	return ""
}

func (x *SignKeyMintRequest) GetKeyTokenId() string {
	if x != nil {
		return x.KeyTokenId
	}
	return ""
}

func (x *SignKeyMintRequest) GetEthContribution() string {
	if x != nil {
		return x.EthContribution
	}
	return ""
}

type SignScoreMintRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProfileAddress string `protobuf:"bytes,1,opt,name=profile_address,json=profileAddress,proto3" json:"profile_address,omitempty"`
	ScoreId        string `protobuf:"bytes,2,opt,name=score_id,json=scoreId,proto3" json:"score_id,omitempty"`
}

func (x *SignScoreMintRequest) Reset() {
	*x = SignScoreMintRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ethereum_v1_chain_sign_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignScoreMintRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignScoreMintRequest) ProtoMessage() {}

func (x *SignScoreMintRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ethereum_v1_chain_sign_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignScoreMintRequest.ProtoReflect.Descriptor instead.
func (*SignScoreMintRequest) Descriptor() ([]byte, []int) {
	return file_ethereum_v1_chain_sign_proto_rawDescGZIP(), []int{2}
}

func (x *SignScoreMintRequest) GetProfileAddress() string {
	if x != nil {
		return x.ProfileAddress
	}
	return ""
}

func (x *SignScoreMintRequest) GetScoreId() string {
	if x != nil {
		return x.ScoreId
	}
	return ""
}

type SignMessageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SignMessageRequest) Reset() {
	*x = SignMessageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ethereum_v1_chain_sign_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignMessageRequest) ProtoMessage() {}

func (x *SignMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ethereum_v1_chain_sign_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignMessageRequest.ProtoReflect.Descriptor instead.
func (*SignMessageRequest) Descriptor() ([]byte, []int) {
	return file_ethereum_v1_chain_sign_proto_rawDescGZIP(), []int{3}
}

func (x *SignMessageRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SignatureResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Message   string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *SignatureResponse) Reset() {
	*x = SignatureResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ethereum_v1_chain_sign_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignatureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignatureResponse) ProtoMessage() {}

func (x *SignatureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ethereum_v1_chain_sign_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignatureResponse.ProtoReflect.Descriptor instead.
func (*SignatureResponse) Descriptor() ([]byte, []int) {
	return file_ethereum_v1_chain_sign_proto_rawDescGZIP(), []int{4}
}

func (x *SignatureResponse) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *SignatureResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type SignatureTypedResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signature string            `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	Message   map[string]string `protobuf:"bytes,2,rep,name=message,proto3" json:"message,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *SignatureTypedResponse) Reset() {
	*x = SignatureTypedResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ethereum_v1_chain_sign_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignatureTypedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignatureTypedResponse) ProtoMessage() {}

func (x *SignatureTypedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ethereum_v1_chain_sign_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignatureTypedResponse.ProtoReflect.Descriptor instead.
func (*SignatureTypedResponse) Descriptor() ([]byte, []int) {
	return file_ethereum_v1_chain_sign_proto_rawDescGZIP(), []int{5}
}

func (x *SignatureTypedResponse) GetSignature() string {
	if x != nil {
		return x.Signature
	}
	return ""
}

func (x *SignatureTypedResponse) GetMessage() map[string]string {
	if x != nil {
		return x.Message
	}
	return nil
}

var File_ethereum_v1_chain_sign_proto protoreflect.FileDescriptor

var file_ethereum_v1_chain_sign_proto_rawDesc = []byte{
	0x0a, 0x1c, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68,
	0x61, 0x69, 0x6e, 0x2f, 0x73, 0x69, 0x67, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11,
	0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0x3c, 0x0a, 0x13, 0x53, 0x69, 0x67, 0x6e, 0x57, 0x4b, 0x65, 0x79,
	0x4d, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0b, 0x65,
	0x6f, 0x61, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x0a, 0x65, 0x6f, 0x61, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x22, 0xd7, 0x02, 0x0a, 0x12, 0x53, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79, 0x4d, 0x69,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x18, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x16, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x88, 0x01, 0x01, 0x12, 0x2d, 0x0a, 0x10, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x48, 0x01, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x31, 0x0a, 0x12, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x73, 0x68, 0x69, 0x70, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x02, 0x52, 0x10, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12, 0x26, 0x0a, 0x0c, 0x6b, 0x65,
	0x79, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x0a, 0x6b, 0x65, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x49, 0x64, 0x12, 0x2f, 0x0a, 0x10, 0x65, 0x74, 0x68, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41,
	0x01, 0x02, 0x52, 0x0f, 0x65, 0x74, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x1b, 0x0a, 0x19, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x42, 0x13, 0x0a, 0x11, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x69, 0x64, 0x42, 0x15, 0x0a, 0x13, 0x5f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73,
	0x68, 0x69, 0x70, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x22, 0x66, 0x0a, 0x14,
	0x53, 0x69, 0x67, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x0f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2,
	0x41, 0x01, 0x02, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x1f, 0x0a, 0x08, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52, 0x07, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x49, 0x64, 0x22, 0x34, 0x0a, 0x12, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01,
	0x02, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4b, 0x0a, 0x11, 0x53, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xc4, 0x01, 0x0a, 0x16, 0x53, 0x69, 0x67, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x50, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x36, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x1a, 0x3a, 0x0a, 0x0c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x32, 0x9a,
	0x04, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x53, 0x69, 0x67, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x7f, 0x0a, 0x0c, 0x53, 0x69, 0x67, 0x6e, 0x57, 0x6b, 0x65, 0x79, 0x4d,
	0x69, 0x6e, 0x74, 0x12, 0x26, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x57, 0x4b, 0x65, 0x79,
	0x4d, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x65, 0x74,
	0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a, 0x01, 0x2a, 0x22, 0x16, 0x2f, 0x76,
	0x31, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x3a, 0x73, 0x69, 0x67, 0x6e, 0x57, 0x4b, 0x65, 0x79,
	0x4d, 0x69, 0x6e, 0x74, 0x12, 0x81, 0x01, 0x0a, 0x0b, 0x53, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79,
	0x4d, 0x69, 0x6e, 0x74, 0x12, 0x25, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x4b, 0x65, 0x79,
	0x4d, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x65, 0x74,
	0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e,
	0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x54, 0x79, 0x70, 0x65, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01,
	0x2a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x3a, 0x73, 0x69, 0x67,
	0x6e, 0x4b, 0x65, 0x79, 0x4d, 0x69, 0x6e, 0x74, 0x12, 0x82, 0x01, 0x0a, 0x0d, 0x53, 0x69, 0x67,
	0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x69, 0x6e, 0x74, 0x12, 0x27, 0x2e, 0x65, 0x74, 0x68,
	0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x53,
	0x69, 0x67, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x22, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x3a,
	0x73, 0x69, 0x67, 0x6e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x4d, 0x69, 0x6e, 0x74, 0x12, 0x7c, 0x0a,
	0x0b, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x25, 0x2e, 0x65,
	0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x2e, 0x53, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x76,
	0x31, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1a, 0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x3a,
	0x73, 0x69, 0x67, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x42, 0x3d, 0x5a, 0x3b, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6f, 0x2d, 0x6c, 0x61, 0x62,
	0x73, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x62, 0x61, 0x72, 0x2d, 0x61, 0x70, 0x69, 0x73, 0x2f,
	0x67, 0x6f, 0x2f, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x68, 0x61, 0x69, 0x6e, 0x3b, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_ethereum_v1_chain_sign_proto_rawDescOnce sync.Once
	file_ethereum_v1_chain_sign_proto_rawDescData = file_ethereum_v1_chain_sign_proto_rawDesc
)

func file_ethereum_v1_chain_sign_proto_rawDescGZIP() []byte {
	file_ethereum_v1_chain_sign_proto_rawDescOnce.Do(func() {
		file_ethereum_v1_chain_sign_proto_rawDescData = protoimpl.X.CompressGZIP(file_ethereum_v1_chain_sign_proto_rawDescData)
	})
	return file_ethereum_v1_chain_sign_proto_rawDescData
}

var file_ethereum_v1_chain_sign_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_ethereum_v1_chain_sign_proto_goTypes = []interface{}{
	(*SignWKeyMintRequest)(nil),    // 0: ethereum.v1.chain.SignWKeyMintRequest
	(*SignKeyMintRequest)(nil),     // 1: ethereum.v1.chain.SignKeyMintRequest
	(*SignScoreMintRequest)(nil),   // 2: ethereum.v1.chain.SignScoreMintRequest
	(*SignMessageRequest)(nil),     // 3: ethereum.v1.chain.SignMessageRequest
	(*SignatureResponse)(nil),      // 4: ethereum.v1.chain.SignatureResponse
	(*SignatureTypedResponse)(nil), // 5: ethereum.v1.chain.SignatureTypedResponse
	nil,                            // 6: ethereum.v1.chain.SignatureTypedResponse.MessageEntry
}
var file_ethereum_v1_chain_sign_proto_depIdxs = []int32{
	6, // 0: ethereum.v1.chain.SignatureTypedResponse.message:type_name -> ethereum.v1.chain.SignatureTypedResponse.MessageEntry
	0, // 1: ethereum.v1.chain.ChainSignService.SignWkeyMint:input_type -> ethereum.v1.chain.SignWKeyMintRequest
	1, // 2: ethereum.v1.chain.ChainSignService.SignKeyMint:input_type -> ethereum.v1.chain.SignKeyMintRequest
	2, // 3: ethereum.v1.chain.ChainSignService.SignScoreMint:input_type -> ethereum.v1.chain.SignScoreMintRequest
	3, // 4: ethereum.v1.chain.ChainSignService.SignMessage:input_type -> ethereum.v1.chain.SignMessageRequest
	4, // 5: ethereum.v1.chain.ChainSignService.SignWkeyMint:output_type -> ethereum.v1.chain.SignatureResponse
	5, // 6: ethereum.v1.chain.ChainSignService.SignKeyMint:output_type -> ethereum.v1.chain.SignatureTypedResponse
	4, // 7: ethereum.v1.chain.ChainSignService.SignScoreMint:output_type -> ethereum.v1.chain.SignatureResponse
	4, // 8: ethereum.v1.chain.ChainSignService.SignMessage:output_type -> ethereum.v1.chain.SignatureResponse
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_ethereum_v1_chain_sign_proto_init() }
func file_ethereum_v1_chain_sign_proto_init() {
	if File_ethereum_v1_chain_sign_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ethereum_v1_chain_sign_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignWKeyMintRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ethereum_v1_chain_sign_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignKeyMintRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ethereum_v1_chain_sign_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignScoreMintRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ethereum_v1_chain_sign_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignMessageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ethereum_v1_chain_sign_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignatureResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ethereum_v1_chain_sign_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignatureTypedResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ethereum_v1_chain_sign_proto_msgTypes[1].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ethereum_v1_chain_sign_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ethereum_v1_chain_sign_proto_goTypes,
		DependencyIndexes: file_ethereum_v1_chain_sign_proto_depIdxs,
		MessageInfos:      file_ethereum_v1_chain_sign_proto_msgTypes,
	}.Build()
	File_ethereum_v1_chain_sign_proto = out.File
	file_ethereum_v1_chain_sign_proto_rawDesc = nil
	file_ethereum_v1_chain_sign_proto_goTypes = nil
	file_ethereum_v1_chain_sign_proto_depIdxs = nil
}

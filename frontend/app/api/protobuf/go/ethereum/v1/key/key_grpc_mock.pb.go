// Code generated by protoc-gen-go-grpc-mock. DO NOT EDIT.
// source: ethereum/v1/key/key.proto

package key

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	grpc "google.golang.org/grpc"
)

// MockKeyServiceClient is a mock of KeyServiceClient interface.
type MockKeyServiceClient struct {
	ctrl     *gomock.Controller
	recorder *MockKeyServiceClientMockRecorder
}

// MockKeyServiceClientMockRecorder is the mock recorder for MockKeyServiceClient.
type MockKeyServiceClientMockRecorder struct {
	mock *MockKeyServiceClient
}

// NewMockKeyServiceClient creates a new mock instance.
func NewMockKeyServiceClient(ctrl *gomock.Controller) *MockKeyServiceClient {
	mock := &MockKeyServiceClient{ctrl: ctrl}
	mock.recorder = &MockKeyServiceClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKeyServiceClient) EXPECT() *MockKeyServiceClientMockRecorder {
	return m.recorder
}

// ListKeyValueObjects mocks base method.
func (m *MockKeyServiceClient) ListKeyValueObjects(ctx context.Context, in *ListKeyVOsRequest, opts ...grpc.CallOption) (*ListKeyVOsResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListKeyValueObjects", varargs...)
	ret0, _ := ret[0].(*ListKeyVOsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListKeyValueObjects indicates an expected call of ListKeyValueObjects.
func (mr *MockKeyServiceClientMockRecorder) ListKeyValueObjects(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListKeyValueObjects", reflect.TypeOf((*MockKeyServiceClient)(nil).ListKeyValueObjects), varargs...)
}

// ListKeys mocks base method.
func (m *MockKeyServiceClient) ListKeys(ctx context.Context, in *ListKeysRequest, opts ...grpc.CallOption) (*ListKeysResponse, error) {
	m.ctrl.T.Helper()
	varargs := []interface{}{ctx, in}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "ListKeys", varargs...)
	ret0, _ := ret[0].(*ListKeysResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListKeys indicates an expected call of ListKeys.
func (mr *MockKeyServiceClientMockRecorder) ListKeys(ctx, in interface{}, opts ...interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]interface{}{ctx, in}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListKeys", reflect.TypeOf((*MockKeyServiceClient)(nil).ListKeys), varargs...)
}

// MockKeyServiceServer is a mock of KeyServiceServer interface.
type MockKeyServiceServer struct {
	ctrl     *gomock.Controller
	recorder *MockKeyServiceServerMockRecorder
}

// MockKeyServiceServerMockRecorder is the mock recorder for MockKeyServiceServer.
type MockKeyServiceServerMockRecorder struct {
	mock *MockKeyServiceServer
}

// NewMockKeyServiceServer creates a new mock instance.
func NewMockKeyServiceServer(ctrl *gomock.Controller) *MockKeyServiceServer {
	mock := &MockKeyServiceServer{ctrl: ctrl}
	mock.recorder = &MockKeyServiceServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKeyServiceServer) EXPECT() *MockKeyServiceServerMockRecorder {
	return m.recorder
}

// ListKeyValueObjects mocks base method.
func (m *MockKeyServiceServer) ListKeyValueObjects(ctx context.Context, in *ListKeyVOsRequest) (*ListKeyVOsResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListKeyValueObjects", ctx, in)
	ret0, _ := ret[0].(*ListKeyVOsResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListKeyValueObjects indicates an expected call of ListKeyValueObjects.
func (mr *MockKeyServiceServerMockRecorder) ListKeyValueObjects(ctx, in interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListKeyValueObjects", reflect.TypeOf((*MockKeyServiceServer)(nil).ListKeyValueObjects), ctx, in)
}

// ListKeys mocks base method.
func (m *MockKeyServiceServer) ListKeys(ctx context.Context, in *ListKeysRequest) (*ListKeysResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListKeys", ctx, in)
	ret0, _ := ret[0].(*ListKeysResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListKeys indicates an expected call of ListKeys.
func (mr *MockKeyServiceServerMockRecorder) ListKeys(ctx, in interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListKeys", reflect.TypeOf((*MockKeyServiceServer)(nil).ListKeys), ctx, in)
}

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        (unknown)
// source: ethereum/v1/station/spaceship.proto

package station

import (
	_ "github.com/ao-labs/spacebar-apis/go/ethereum/v1/outpost"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/emptypb"
	fieldmaskpb "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SpaceshipState
type SpaceshipState int32

const (
	// default value. this value is unused.
	SpaceshipState_STATE_UNSPECIFIED SpaceshipState = 0
	SpaceshipState_RENTED SpaceshipState = 1
	SpaceshipState_BURNED SpaceshipState = 2
	// means upgraded to ownership
	SpaceshipState_UPGRADED SpaceshipState = 3
)

// Enum value maps for SpaceshipState.
var (
	SpaceshipState_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "RENTED",
		2: "BURNED",
		3: "UPGRADED",
	}
	SpaceshipState_value = map[string]int32{
		"STATE_UNSPECIFIED": 0,
		"RENTED":            1,
		"BURNED":            2,
		"UPGRADED":          3,
	}
)

func (x SpaceshipState) Enum() *SpaceshipState {
	p := new(SpaceshipState)
	*p = x
	return p
}

func (x SpaceshipState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SpaceshipState) Descriptor() protoreflect.EnumDescriptor {
	return file_ethereum_v1_station_spaceship_proto_enumTypes[0].Descriptor()
}

func (SpaceshipState) Type() protoreflect.EnumType {
	return &file_ethereum_v1_station_spaceship_proto_enumTypes[0]
}

func (x SpaceshipState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SpaceshipState.Descriptor instead.
func (SpaceshipState) EnumDescriptor() ([]byte, []int) {
	return file_ethereum_v1_station_spaceship_proto_rawDescGZIP(), []int{0}
}

// SpaceshipType
type SpaceshipType int32

const (
	// default value. this value is unused.
	SpaceshipType_TYPE_UNSPECIFIED SpaceshipType = 0
	SpaceshipType_PROTOSHIP SpaceshipType = 1
	// Semantic lock for rent.
	SpaceshipType_OWNERSHIP SpaceshipType = 2
)

// Enum value maps for SpaceshipType.
var (
	SpaceshipType_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "PROTOSHIP",
		2: "OWNERSHIP",
	}
	SpaceshipType_value = map[string]int32{
		"TYPE_UNSPECIFIED": 0,
		"PROTOSHIP":        1,
		"OWNERSHIP":        2,
	}
)

func (x SpaceshipType) Enum() *SpaceshipType {
	p := new(SpaceshipType)
	*p = x
	return p
}

func (x SpaceshipType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SpaceshipType) Descriptor() protoreflect.EnumDescriptor {
	return file_ethereum_v1_station_spaceship_proto_enumTypes[1].Descriptor()
}

func (SpaceshipType) Type() protoreflect.EnumType {
	return &file_ethereum_v1_station_spaceship_proto_enumTypes[1]
}

func (x SpaceshipType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SpaceshipType.Descriptor instead.
func (SpaceshipType) EnumDescriptor() ([]byte, []int) {
	return file_ethereum_v1_station_spaceship_proto_rawDescGZIP(), []int{1}
}

// CreateSpaceshipRequest
type CreateSpaceshipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// spaceship to create
	Spaceship *Spaceship `protobuf:"bytes,1,opt,name=spaceship,proto3" json:"spaceship,omitempty"`
}

func (x *CreateSpaceshipRequest) Reset() {
	*x = CreateSpaceshipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ethereum_v1_station_spaceship_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateSpaceshipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateSpaceshipRequest) ProtoMessage() {}

func (x *CreateSpaceshipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ethereum_v1_station_spaceship_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateSpaceshipRequest.ProtoReflect.Descriptor instead.
func (*CreateSpaceshipRequest) Descriptor() ([]byte, []int) {
	return file_ethereum_v1_station_spaceship_proto_rawDescGZIP(), []int{0}
}

func (x *CreateSpaceshipRequest) GetSpaceship() *Spaceship {
	if x != nil {
		return x.Spaceship
	}
	return nil
}

// GetSpaceshipRequest
type GetSpaceshipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The name of the spaceship to retrieve.
	// Format: spaceships/{spaceship}
	Spaceship string `protobuf:"bytes,1,opt,name=spaceship,proto3" json:"spaceship,omitempty"`
}

func (x *GetSpaceshipRequest) Reset() {
	*x = GetSpaceshipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ethereum_v1_station_spaceship_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSpaceshipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSpaceshipRequest) ProtoMessage() {}

func (x *GetSpaceshipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ethereum_v1_station_spaceship_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSpaceshipRequest.ProtoReflect.Descriptor instead.
func (*GetSpaceshipRequest) Descriptor() ([]byte, []int) {
	return file_ethereum_v1_station_spaceship_proto_rawDescGZIP(), []int{1}
}

func (x *GetSpaceshipRequest) GetSpaceship() string {
	if x != nil {
		return x.Spaceship
	}
	return ""
}

// UpdateSpaceshipRequest
type UpdateSpaceshipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// spaceship to update
	Spaceship *Spaceship `protobuf:"bytes,1,opt,name=spaceship,proto3" json:"spaceship,omitempty"`
	// Field mask that specifies the fields to update.
	// If no field mask is set, all fields will be updated.
	// Wildcards are supported.
	// Examples
	// ["*"]
	// ["nft.metadata[left_wing]"]
	// ["nickname", "nft.metadata"]
	UpdateMask *fieldmaskpb.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
}

func (x *UpdateSpaceshipRequest) Reset() {
	*x = UpdateSpaceshipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ethereum_v1_station_spaceship_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateSpaceshipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateSpaceshipRequest) ProtoMessage() {}

func (x *UpdateSpaceshipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ethereum_v1_station_spaceship_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateSpaceshipRequest.ProtoReflect.Descriptor instead.
func (*UpdateSpaceshipRequest) Descriptor() ([]byte, []int) {
	return file_ethereum_v1_station_spaceship_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateSpaceshipRequest) GetSpaceship() *Spaceship {
	if x != nil {
		return x.Spaceship
	}
	return nil
}

func (x *UpdateSpaceshipRequest) GetUpdateMask() *fieldmaskpb.FieldMask {
	if x != nil {
		return x.UpdateMask
	}
	return nil
}

// GetSpaceshipRequest
type MintSpaceshipRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MintSpaceshipRequest) Reset() {
	*x = MintSpaceshipRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ethereum_v1_station_spaceship_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MintSpaceshipRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MintSpaceshipRequest) ProtoMessage() {}

func (x *MintSpaceshipRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ethereum_v1_station_spaceship_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MintSpaceshipRequest.ProtoReflect.Descriptor instead.
func (*MintSpaceshipRequest) Descriptor() ([]byte, []int) {
	return file_ethereum_v1_station_spaceship_proto_rawDescGZIP(), []int{3}
}

// ListSpaceshipsRequest payload
// (-- api-linter: core::0158::request-page-token-field=disabled
//
//	aip.dev/not-precedent: We need to do this because reasons. --)
//
// (-- api-linter: core::0132::request-unknown-fields=disabled
//
//	aip.dev/not-precedent: We really need this field because reasons. --)
type ListSpaceshipsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The maximum number of spaceships to return. The service may return fewer than
	// this value.
	// If unspecified, at most 50 rows will be returned.
	// The maximum value is 1024; values above 1024 will be coerced to 1024.
	PageSize int32 `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Token of the page to retrieve. If not specified, the first
	// page of results will be returned. Use the value obtained from
	// `next_page_token` in the previous response in order to request
	// the next page of results.
	//
	// When paginating, all other parameters provided to `ListSpaceships` must match
	// the call that provided the page token.
	PageToken string `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Available Sequence and Operator
	// * name
	//   - `equal`
	//
	// * profile
	//   - `equal`
	//
	// * create_time
	//   - `>`
	//
	// * title
	//   - `contains`
	//
	// * state
	//   - `equal`
	//
	// * type
	//   - `equal`
	//
	// * is_upgraded
	//   - `negation`
	//
	// Examples
	// * filter=profile="profiles/0x927c3Ba1B0F8300E1Cc5DcA825411d756A8D4001"
	// * filter=state=RENT_WAITING
	// * filter=NOT rentable
	// * filter=rentable
	Filter string `protobuf:"bytes,3,opt,name=filter,proto3" json:"filter,omitempty"`
}

func (x *ListSpaceshipsRequest) Reset() {
	*x = ListSpaceshipsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ethereum_v1_station_spaceship_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSpaceshipsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSpaceshipsRequest) ProtoMessage() {}

func (x *ListSpaceshipsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ethereum_v1_station_spaceship_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSpaceshipsRequest.ProtoReflect.Descriptor instead.
func (*ListSpaceshipsRequest) Descriptor() ([]byte, []int) {
	return file_ethereum_v1_station_spaceship_proto_rawDescGZIP(), []int{4}
}

func (x *ListSpaceshipsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListSpaceshipsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *ListSpaceshipsRequest) GetFilter() string {
	if x != nil {
		return x.Filter
	}
	return ""
}

// ListSpaceshipsResponse
// (-- api-linter: core::0158::response-next-page-token-field=disabled
//
//	aip.dev/not-precedent: We need to do this because reasons. --)
type ListSpaceshipsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The list of rows that matched the query.
	Spaceships []*Spaceship `protobuf:"bytes,1,rep,name=spaceships,proto3" json:"spaceships,omitempty"`
	// Pagination token used to retrieve the next page of results.
	// Pass the content of this string as the `page_token` attribute of
	// the next request. `next_page_token` is not returned for the last
	// page.
	NextPageToken string `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
}

func (x *ListSpaceshipsResponse) Reset() {
	*x = ListSpaceshipsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ethereum_v1_station_spaceship_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSpaceshipsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSpaceshipsResponse) ProtoMessage() {}

func (x *ListSpaceshipsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ethereum_v1_station_spaceship_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSpaceshipsResponse.ProtoReflect.Descriptor instead.
func (*ListSpaceshipsResponse) Descriptor() ([]byte, []int) {
	return file_ethereum_v1_station_spaceship_proto_rawDescGZIP(), []int{5}
}

func (x *ListSpaceshipsResponse) GetSpaceships() []*Spaceship {
	if x != nil {
		return x.Spaceships
	}
	return nil
}

func (x *ListSpaceshipsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

// Spaceship is type of Spaceship
type Spaceship struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resource name of Spaceship.
	// Format: spaceships/{address}
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// 6551 address of Spaceship NFT
	Address string `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	// The owner address of Spaceship.
	// This address can be PFP NFT TBA or EOA.
	// This field will be empty if the Spaceship is burned.
	OwnerAddress string `protobuf:"bytes,3,opt,name=owner_address,json=ownerAddress,proto3" json:"owner_address,omitempty"`
	// The created time of Spaceship
	// RFC3339 format e.g. "2006-01-02T15:04:05Z07:00"
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// The last updated time of Spaceship
	// RFC3339 format e.g. "2006-01-02T15:04:05Z07:00"
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// The nickname of Spaceship.
	// Internship has null value.
	// This field is optional
	Nickname *string `protobuf:"bytes,6,opt,name=nickname,proto3,oneof" json:"nickname,omitempty"`
	// state of Spaceship
	State SpaceshipState `protobuf:"varint,7,opt,name=state,proto3,enum=ethereum.v1.station.SpaceshipState" json:"state,omitempty"`
	Type  SpaceshipType  `protobuf:"varint,8,opt,name=type,proto3,enum=ethereum.v1.station.SpaceshipType" json:"type,omitempty"`
	// Whether the Spaceship is upgraded to Ownership
	IsUpgraded bool `protobuf:"varint,9,opt,name=is_upgraded,json=isUpgraded,proto3" json:"is_upgraded,omitempty"`
	// NFT of Spaceship
	Nft *SpaceshipNFT `protobuf:"bytes,10,opt,name=nft,proto3" json:"nft,omitempty"`
}

func (x *Spaceship) Reset() {
	*x = Spaceship{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ethereum_v1_station_spaceship_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Spaceship) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Spaceship) ProtoMessage() {}

func (x *Spaceship) ProtoReflect() protoreflect.Message {
	mi := &file_ethereum_v1_station_spaceship_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Spaceship.ProtoReflect.Descriptor instead.
func (*Spaceship) Descriptor() ([]byte, []int) {
	return file_ethereum_v1_station_spaceship_proto_rawDescGZIP(), []int{6}
}

func (x *Spaceship) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Spaceship) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Spaceship) GetOwnerAddress() string {
	if x != nil {
		return x.OwnerAddress
	}
	return ""
}

func (x *Spaceship) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Spaceship) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *Spaceship) GetNickname() string {
	if x != nil && x.Nickname != nil {
		return *x.Nickname
	}
	return ""
}

func (x *Spaceship) GetState() SpaceshipState {
	if x != nil {
		return x.State
	}
	return SpaceshipState_STATE_UNSPECIFIED
}

func (x *Spaceship) GetType() SpaceshipType {
	if x != nil {
		return x.Type
	}
	return SpaceshipType_TYPE_UNSPECIFIED
}

func (x *Spaceship) GetIsUpgraded() bool {
	if x != nil {
		return x.IsUpgraded
	}
	return false
}

func (x *Spaceship) GetNft() *SpaceshipNFT {
	if x != nil {
		return x.Nft
	}
	return nil
}

// SpaceshipNFT message represents an Spaceship's NFT.
type SpaceshipNFT struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The resource name of the NFT asset.
	// Format: nfts/{chain_type}/{contract_address}/{token_id}
	// Examples: nfts/ETHEREUM/0x1f9090aaE28b8a3dCeaDf281B0F12828e676c326/1
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Token ID of the NFT asset.
	TokenId string `protobuf:"bytes,2,opt,name=token_id,json=tokenId,proto3" json:"token_id,omitempty"`
	// The URI of the NFT asset's image.
	// This URI can be cached version of image original URI
	// e.g. "https://i.seadn.io/gcs/files/f3564ef33373939b024fb791f21ec37b.png?w=500&auto=format"
	ImageUri string `protobuf:"bytes,3,opt,name=image_uri,json=imageUri,proto3" json:"image_uri,omitempty"`
	// The Metadata URI of the NFT asset.
	MetadataUri string `protobuf:"bytes,4,opt,name=metadata_uri,json=metadataUri,proto3" json:"metadata_uri,omitempty"`
}

func (x *SpaceshipNFT) Reset() {
	*x = SpaceshipNFT{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ethereum_v1_station_spaceship_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SpaceshipNFT) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpaceshipNFT) ProtoMessage() {}

func (x *SpaceshipNFT) ProtoReflect() protoreflect.Message {
	mi := &file_ethereum_v1_station_spaceship_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpaceshipNFT.ProtoReflect.Descriptor instead.
func (*SpaceshipNFT) Descriptor() ([]byte, []int) {
	return file_ethereum_v1_station_spaceship_proto_rawDescGZIP(), []int{7}
}

func (x *SpaceshipNFT) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SpaceshipNFT) GetTokenId() string {
	if x != nil {
		return x.TokenId
	}
	return ""
}

func (x *SpaceshipNFT) GetImageUri() string {
	if x != nil {
		return x.ImageUri
	}
	return ""
}

func (x *SpaceshipNFT) GetMetadataUri() string {
	if x != nil {
		return x.MetadataUri
	}
	return ""
}

var File_ethereum_v1_station_spaceship_proto protoreflect.FileDescriptor

var file_ethereum_v1_station_spaceship_proto_rawDesc = []byte{
	0x0a, 0x23, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e,
	0x76, 0x31, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x65, 0x6c, 0x64, 0x5f, 0x62, 0x65, 0x68, 0x61, 0x76,
	0x69, 0x6f, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x20, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x66, 0x69, 0x65, 0x6c,
	0x64, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x19, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1d, 0x65,
	0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2f, 0x76, 0x31, 0x2f, 0x6f, 0x75, 0x74, 0x70, 0x6f,
	0x73, 0x74, 0x2f, 0x6e, 0x66, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x5c, 0x0a, 0x16,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73,
	0x68, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x74, 0x68, 0x65,
	0x72, 0x65, 0x75, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02, 0x52,
	0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x22, 0x60, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x49, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x2b, 0xe2, 0x41, 0x01, 0x02, 0xfa, 0x41, 0x24, 0x0a, 0x22, 0x73,
	0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x62, 0x61, 0x72, 0x61,
	0x70, 0x69, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x2f, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69,
	0x70, 0x52, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x22, 0x99, 0x01, 0x0a,
	0x16, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x42, 0x0a, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x73, 0x68, 0x69, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65, 0x74, 0x68,
	0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x02,
	0x52, 0x09, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x12, 0x3b, 0x0a, 0x0b, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x61, 0x73, 0x6b, 0x52, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4d, 0x61, 0x73, 0x6b, 0x22, 0x16, 0x0a, 0x14, 0x4d, 0x69, 0x6e, 0x74,
	0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x6b, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69,
	0x70, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x67, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x22, 0x80, 0x01,
	0x0a, 0x16, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0a, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x73, 0x68, 0x69, 0x70, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x65,
	0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x52, 0x0a, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x73, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74,
	0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0xe5, 0x04, 0x0a, 0x09, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x03, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x4e, 0x0a, 0x0d, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x61, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x29, 0xe2, 0x41, 0x01, 0x03, 0xfa,
	0x41, 0x22, 0x0a, 0x20, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x62, 0x61, 0x72, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x2f, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x52, 0x0c, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x41, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x41, 0x0a, 0x0b, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x03, 0x52, 0x0a, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x6e, 0x69,
	0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x88, 0x01, 0x01, 0x12, 0x3f, 0x0a, 0x05, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72,
	0x65, 0x75, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x04, 0xe2,
	0x41, 0x01, 0x03, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3c, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72,
	0x65, 0x75, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53,
	0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65, 0x42, 0x04, 0xe2, 0x41,
	0x01, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x25, 0x0a, 0x0b, 0x69, 0x73, 0x5f, 0x75,
	0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x42, 0x04, 0xe2,
	0x41, 0x01, 0x03, 0x52, 0x0a, 0x69, 0x73, 0x55, 0x70, 0x67, 0x72, 0x61, 0x64, 0x65, 0x64, 0x12,
	0x39, 0x0a, 0x03, 0x6e, 0x66, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x65,
	0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x4e, 0x46, 0x54, 0x42,
	0x04, 0xe2, 0x41, 0x01, 0x03, 0x52, 0x03, 0x6e, 0x66, 0x74, 0x3a, 0x3f, 0xea, 0x41, 0x3c, 0x0a,
	0x22, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x70, 0x61, 0x63, 0x65, 0x62, 0x61,
	0x72, 0x61, 0x70, 0x69, 0x73, 0x2e, 0x78, 0x79, 0x7a, 0x2f, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73,
	0x68, 0x69, 0x70, 0x12, 0x16, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x73, 0x2f,
	0x7b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x7d, 0x42, 0x0b, 0x0a, 0x09, 0x5f,
	0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x95, 0x01, 0x0a, 0x0c, 0x53, 0x70, 0x61,
	0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x4e, 0x46, 0x54, 0x12, 0x18, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x03, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x08, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x03, 0x52, 0x07, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72,
	0x69, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2, 0x41, 0x01, 0x03, 0x52, 0x08, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x69, 0x12, 0x27, 0x0a, 0x0c, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x75, 0x72, 0x69, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x04, 0xe2,
	0x41, 0x01, 0x03, 0x52, 0x0b, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x55, 0x72, 0x69,
	0x2a, 0x4d, 0x0a, 0x0e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x54, 0x41, 0x54, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50,
	0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x4e,
	0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x42, 0x55, 0x52, 0x4e, 0x45, 0x44, 0x10,
	0x02, 0x12, 0x0c, 0x0a, 0x08, 0x55, 0x50, 0x47, 0x52, 0x41, 0x44, 0x45, 0x44, 0x10, 0x03, 0x2a,
	0x43, 0x0a, 0x0d, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49,
	0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x52, 0x4f, 0x54, 0x4f, 0x53,
	0x48, 0x49, 0x50, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x4f, 0x57, 0x4e, 0x45, 0x52, 0x53, 0x48,
	0x49, 0x50, 0x10, 0x02, 0x32, 0xd5, 0x03, 0x0a, 0x10, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68,
	0x69, 0x70, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x84, 0x01, 0x0a, 0x0e, 0x4c, 0x69,
	0x73, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x73, 0x12, 0x2a, 0x2e, 0x65,
	0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72,
	0x65, 0x75, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x19, 0xda, 0x41, 0x00, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10,
	0x12, 0x0e, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x73,
	0x12, 0x8a, 0x01, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69,
	0x70, 0x12, 0x28, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x70, 0x61, 0x63, 0x65,
	0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x65, 0x74,
	0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x22, 0x30, 0xda, 0x41, 0x09,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x12,
	0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x7b, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x3d,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x73, 0x2f, 0x2a, 0x7d, 0x12, 0xac, 0x01,
	0x0a, 0x0f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69,
	0x70, 0x12, 0x2b, 0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x76, 0x31, 0x2e,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e,
	0x2e, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x73, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x53, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x22, 0x4c,
	0xda, 0x41, 0x15, 0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x2c, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x5f, 0x6d, 0x61, 0x73, 0x6b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x2e, 0x3a, 0x09,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x32, 0x21, 0x2f, 0x76, 0x31, 0x2f, 0x7b,
	0x73, 0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x73, 0x68, 0x69, 0x70, 0x73, 0x2f, 0x2a, 0x7d, 0x42, 0x41, 0x5a, 0x3f,
	0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6f, 0x2d, 0x6c, 0x61,
	0x62, 0x73, 0x2f, 0x73, 0x70, 0x61, 0x63, 0x65, 0x62, 0x61, 0x72, 0x2d, 0x61, 0x70, 0x69, 0x73,
	0x2f, 0x67, 0x6f, 0x2f, 0x65, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3b, 0x73, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ethereum_v1_station_spaceship_proto_rawDescOnce sync.Once
	file_ethereum_v1_station_spaceship_proto_rawDescData = file_ethereum_v1_station_spaceship_proto_rawDesc
)

func file_ethereum_v1_station_spaceship_proto_rawDescGZIP() []byte {
	file_ethereum_v1_station_spaceship_proto_rawDescOnce.Do(func() {
		file_ethereum_v1_station_spaceship_proto_rawDescData = protoimpl.X.CompressGZIP(file_ethereum_v1_station_spaceship_proto_rawDescData)
	})
	return file_ethereum_v1_station_spaceship_proto_rawDescData
}

var file_ethereum_v1_station_spaceship_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_ethereum_v1_station_spaceship_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_ethereum_v1_station_spaceship_proto_goTypes = []interface{}{
	(SpaceshipState)(0),            // 0: ethereum.v1.station.SpaceshipState
	(SpaceshipType)(0),             // 1: ethereum.v1.station.SpaceshipType
	(*CreateSpaceshipRequest)(nil), // 2: ethereum.v1.station.CreateSpaceshipRequest
	(*GetSpaceshipRequest)(nil),    // 3: ethereum.v1.station.GetSpaceshipRequest
	(*UpdateSpaceshipRequest)(nil), // 4: ethereum.v1.station.UpdateSpaceshipRequest
	(*MintSpaceshipRequest)(nil),   // 5: ethereum.v1.station.MintSpaceshipRequest
	(*ListSpaceshipsRequest)(nil),  // 6: ethereum.v1.station.ListSpaceshipsRequest
	(*ListSpaceshipsResponse)(nil), // 7: ethereum.v1.station.ListSpaceshipsResponse
	(*Spaceship)(nil),              // 8: ethereum.v1.station.Spaceship
	(*SpaceshipNFT)(nil),           // 9: ethereum.v1.station.SpaceshipNFT
	(*fieldmaskpb.FieldMask)(nil),  // 10: google.protobuf.FieldMask
	(*timestamppb.Timestamp)(nil),  // 11: google.protobuf.Timestamp
}
var file_ethereum_v1_station_spaceship_proto_depIdxs = []int32{
	8,  // 0: ethereum.v1.station.CreateSpaceshipRequest.spaceship:type_name -> ethereum.v1.station.Spaceship
	8,  // 1: ethereum.v1.station.UpdateSpaceshipRequest.spaceship:type_name -> ethereum.v1.station.Spaceship
	10, // 2: ethereum.v1.station.UpdateSpaceshipRequest.update_mask:type_name -> google.protobuf.FieldMask
	8,  // 3: ethereum.v1.station.ListSpaceshipsResponse.spaceships:type_name -> ethereum.v1.station.Spaceship
	11, // 4: ethereum.v1.station.Spaceship.create_time:type_name -> google.protobuf.Timestamp
	11, // 5: ethereum.v1.station.Spaceship.update_time:type_name -> google.protobuf.Timestamp
	0,  // 6: ethereum.v1.station.Spaceship.state:type_name -> ethereum.v1.station.SpaceshipState
	1,  // 7: ethereum.v1.station.Spaceship.type:type_name -> ethereum.v1.station.SpaceshipType
	9,  // 8: ethereum.v1.station.Spaceship.nft:type_name -> ethereum.v1.station.SpaceshipNFT
	6,  // 9: ethereum.v1.station.SpaceshipService.ListSpaceships:input_type -> ethereum.v1.station.ListSpaceshipsRequest
	3,  // 10: ethereum.v1.station.SpaceshipService.GetSpaceship:input_type -> ethereum.v1.station.GetSpaceshipRequest
	4,  // 11: ethereum.v1.station.SpaceshipService.UpdateSpaceship:input_type -> ethereum.v1.station.UpdateSpaceshipRequest
	7,  // 12: ethereum.v1.station.SpaceshipService.ListSpaceships:output_type -> ethereum.v1.station.ListSpaceshipsResponse
	8,  // 13: ethereum.v1.station.SpaceshipService.GetSpaceship:output_type -> ethereum.v1.station.Spaceship
	8,  // 14: ethereum.v1.station.SpaceshipService.UpdateSpaceship:output_type -> ethereum.v1.station.Spaceship
	12, // [12:15] is the sub-list for method output_type
	9,  // [9:12] is the sub-list for method input_type
	9,  // [9:9] is the sub-list for extension type_name
	9,  // [9:9] is the sub-list for extension extendee
	0,  // [0:9] is the sub-list for field type_name
}

func init() { file_ethereum_v1_station_spaceship_proto_init() }
func file_ethereum_v1_station_spaceship_proto_init() {
	if File_ethereum_v1_station_spaceship_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ethereum_v1_station_spaceship_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateSpaceshipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ethereum_v1_station_spaceship_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSpaceshipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ethereum_v1_station_spaceship_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateSpaceshipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ethereum_v1_station_spaceship_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MintSpaceshipRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ethereum_v1_station_spaceship_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSpaceshipsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ethereum_v1_station_spaceship_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSpaceshipsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ethereum_v1_station_spaceship_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Spaceship); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ethereum_v1_station_spaceship_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SpaceshipNFT); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ethereum_v1_station_spaceship_proto_msgTypes[6].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ethereum_v1_station_spaceship_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ethereum_v1_station_spaceship_proto_goTypes,
		DependencyIndexes: file_ethereum_v1_station_spaceship_proto_depIdxs,
		EnumInfos:         file_ethereum_v1_station_spaceship_proto_enumTypes,
		MessageInfos:      file_ethereum_v1_station_spaceship_proto_msgTypes,
	}.Build()
	File_ethereum_v1_station_spaceship_proto = out.File
	file_ethereum_v1_station_spaceship_proto_rawDesc = nil
	file_ethereum_v1_station_spaceship_proto_goTypes = nil
	file_ethereum_v1_station_spaceship_proto_depIdxs = nil
}

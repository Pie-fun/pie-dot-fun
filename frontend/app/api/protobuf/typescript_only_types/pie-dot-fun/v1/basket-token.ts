// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               unknown
// source: pie-dot-fun/v1/basket-token.proto

/* eslint-disable */
import { type ChainType, type Percentage, type Quantity } from "./common";

export const protobufPackage = "piedotfun.v1";

export enum BasketTokenState {
  BASKET_TOKEN_STATE_UNSPECIFIED = "BASKET_TOKEN_STATE_UNSPECIFIED",
  /** CREATED - 온체인 상에서만 생성되고, 아직 우리 서비스에서 리스팅은 되지 않은 상태 */
  CREATED = "CREATED",
  /** LISTED - 우리 서비스에서 리스팅된 상태 */
  LISTED = "LISTED",
}

export enum TokenStrategy {
  TOKEN_STRATEGY_UNSPECIFIED = "TOKEN_STRATEGY_UNSPECIFIED",
  MARKET_CAP_WEIGHTED = "MARKET_CAP_WEIGHTED",
  EQUAL_WEIGHTED = "EQUAL_WEIGHTED",
  FACTOR_WEIGHTED = "FACTOR_WEIGHTED",
  FUNDAMENTAL_WEIGHTED = "FUNDAMENTAL_WEIGHTED",
  RISK_WEIGHTED = "RISK_WEIGHTED",
  MOMENTUM_WEIGHTED = "MOMENTUM_WEIGHTED",
  CUSTOM_WEIGHTED = "CUSTOM_WEIGHTED",
}

export enum RebalanceFrequency {
  REBALANCE_FREQUENCY_UNSPECIFIED = "REBALANCE_FREQUENCY_UNSPECIFIED",
  MANUAL = "MANUAL",
  DAILY = "DAILY",
  WEEKLY = "WEEKLY",
  MONTHLY = "MONTHLY",
}

export interface GetBasketTokenRequest {
  /**
   * The name of the basket token to retrieve.
   * Format : "basketTokens/{chain}/{token_address}"
   */
  basketToken: string;
}

/**
 * ListBasketTokensRequest payload
 * (-- api-linter: core::0158::request-page-token-field=disabled
 *     aip.dev/not-precedent: We need to do this because reasons. --)
 * (-- api-linter: core::0132::request-unknown-fields=disabled
 *     aip.dev/not-precedent: We really need this field because reasons. --)
 */
export interface ListBasketTokensRequest {
  /**
   * The maximum number of basket tokens to return. The service may return fewer than
   * this value.
   * If unspecified, at most 50 rows will be returned.
   * The maximum value is 1024; values above 1024 will be coerced to 1024.
   */
  pageSize: number;
  /**
   * Token of the page to retrieve. If not specified, the first
   * page of results will be returned. Use the value obtained from
   * `next_page_token` in the previous response in order to request
   * the next page of results.
   *
   * When paginating, all other parameters provided to `ListBasketTokens` must match
   * the call that provided the page token.
   */
  pageToken: string;
  /**
   * Available Sequence and Operator
   * * name
   *   * `=`
   * * chain
   *   * `=`
   * * display_name
   *   * `=`
   * * symbol
   *   * `=`
   * * state
   *   * `=` (CREATED, LISTED)
   * * onchain_id
   *   * `=`
   * * market_cap_sol
   *   * `=`, `>`, `<`, `>=`, `<=`
   * * market_cap_usdc
   *   * `=`, `>`, `<`, `>=`, `<=`
   *
   * Examples
   * * name="basketTokens/SOLANA/FZ4MT1HYJHd9GK8D5mJ9f3r7irLaDL5NxBNLjGqrLqs9"
   * * chain=SOLANA
   * * symbol="MURAD"
   * * state=LISTED
   * * onchain_id="10"
   * * market_cap_sol>=1000000
   */
  filter: string;
  /**
   * One or more fields to compare and use to sort the output. (optional)
   * Default order for a field is descending by id
   * To specify ascending or descending order, append " asc" or " desc" to the field name. If not specified, the order is ascending.
   *
   * Reference
   * * https://google.aip.dev/132#ordering.
   *
   * Supported Fields
   * * "create_time", "market_cap_sol", "market_cap_usdc"
   *
   * Examples
   * * order_by=create_time desc
   * * order_by=market_cap_sol desc
   */
  orderBy: string;
}

export interface ListBasketTokensResponse {
  basketTokens: BasketToken[];
  /**
   * Pagination token used to retrieve the next page of results.
   * Pass the content of this string as the `page_token` attribute of
   * the next request. `next_page_token` is not returned for the last
   * page.
   */
  nextPageToken: string;
}

export interface ListRebalancingHistoriesRequest {
  /**
   * The name of the basket token to retrieve.
   * Format : "basketTokens/{chain}/{token_address}"
   */
  basketToken: string;
  /**
   * The maximum number of histories to return. The service may return fewer than
   * this value.
   * If unspecified, at most 50 rows will be returned.
   * The maximum value is 1024; values above 1024 will be coerced to 1024.
   */
  pageSize: number;
  /**
   * Token of the page to retrieve. If not specified, the first
   * page of results will be returned. Use the value obtained from
   * `next_page_token` in the previous response in order to request
   * the next page of results.
   *
   * When paginating, all other parameters provided to `ListUsers` must match
   * the call that provided the page token.
   */
  pageToken: string;
  /**
   * Available Sequence and Operator
   * * components_changed
   *   * `negation`
   *
   * Examples
   * * filter=components_changed
   * * filter=NOT components_changed
   */
  filter: string;
}

export interface ListRebalancingHistoriesResponse {
  rebalancingHistories: BasketTokenRebanlancingHistory[];
  /**
   * Pagination token used to retrieve the next page of results.
   * Pass the content of this string as the `page_token` attribute of
   * the next request. `next_page_token` is not returned for the last
   * page.
   */
  nextPageToken: string;
}

export interface BasketToken {
  /** Format : "basketTokens/{chain}/{token_address}" */
  name: string;
  chain: ChainType;
  address: string;
  displayName: string;
  symbol: string;
  iconImageUri: string;
  description: string;
  oneLineDescription: string;
  state: BasketTokenState;
  strategy: TokenStrategy;
  rebalanceFrequency: RebalanceFrequency;
  isRebalancing: boolean;
  components: Component[];
  /**
   * The creator of the basket token
   * Format : "users/{user_id}"
   */
  creator: string;
  createTime: string | undefined;
  expireTime: string | undefined;
  lastRebalanceTime: string | undefined;
  totalSupply: Quantity | undefined;
  totalHolders: number;
  onchainId: string;
}

export interface Component {
  /** Format : "fungibleTokens/{chain}/{token_address}" */
  fungibleToken: string;
  chain: ChainType;
  address: string;
  /**
   * The weight of the component in the basket token.
   * The weight is a percentage of the total value within the basket token. (0.0 ~ 100.0 %)
   */
  weight: Percentage | undefined;
}

export interface BasketTokenRebanlancingHistory {
  txSignatures: string[];
  beforeComponents: Component[];
  afterComponents: Component[];
  rebalanceTime: string | undefined;
  componentsChanged: boolean;
}

/** BasketTokenService contains the function to interact with the BasketToken of the spacebar */
export interface BasketTokenService {
  GetBasketToken(request: GetBasketTokenRequest): Promise<BasketToken>;
  ListBasketTokens(request: ListBasketTokensRequest): Promise<ListBasketTokensResponse>;
  ListBasketTokenRebalancingHistories(
    request: ListRebalancingHistoriesRequest,
  ): Promise<ListRebalancingHistoriesResponse>;
}

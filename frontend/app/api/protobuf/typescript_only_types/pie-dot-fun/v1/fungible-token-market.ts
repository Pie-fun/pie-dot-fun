// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               unknown
// source: pie-dot-fun/v1/fungible-token-market.proto

/* eslint-disable */
import { type Currency, type Money, type PriceChangesByPeriod } from "./common";

export const protobufPackage = "piedotfun.v1";

/** FungibleTokenMarket contains the market data for a fungible token. */
export interface FungibleTokenMarket {
  name: string;
  fungibleToken: string;
  displayName: string;
  symbol: string;
  /**
   * Native token symbol of the chain the fungible-token belongs to.
   * Not dollar(USDT, USDC),
   * and the prices and market cap fields will display dollar values together.
   */
  nativeCurrency: Currency;
  /**
   * Key is the `Currency` enum string,
   * value is the price with the `Currency`.
   *
   * @deprecated
   */
  prices: { [key: string]: Money };
  /**
   * Key is the `Currency` enum string,
   * value is the market cap with the `Currency`.
   *
   * @deprecated
   */
  marketCaps: { [key: string]: Money };
  /**
   * Key is the `Currency` enum string,
   * value is the price changes with the `Currency`.
   * {
   *   "CURRENCY_USDC": {
   *     "PRICE_CHANGE_PERIOD_1_HOUR": {
   *       "nominal_value": {
   *         "currency": "CURRENCY_USDC",
   *         "amount": 0.0001
   *       },
   *       "percentage_change": {
   *         "value": 0.0001
   *       },
   *       "period": "PRICE_CHANGE_PERIOD_1_HOUR"
   *     },
   *     "CURRENCY_SOL": { ... }
   * }
   * Support Periods
   * * PRICE_CHANGE_PERIOD_7_DAY
   *
   * @deprecated
   */
  priceChanges: { [key: string]: PriceChangesByPeriod };
  /** current price */
  price:
    | Money
    | undefined;
  /**
   * market cap
   *
   * @deprecated
   */
  marketCap:
    | Money
    | undefined;
  /**
   * Example
   * {
   *   "PRICE_CHANGE_PERIOD_7_DAY": {
   *       "nominal_value": {
   *           "currency": "CURRENCY_USDC",
   *           "amount": 0.0001
   *       },
   *       "percentage_change": {
   *           "value": 0.0001
   *       },
   *       "period": "PRICE_CHANGE_PERIOD_7_DAY"
   *   }
   *   ...
   * }
   * Support Periods
   * * PRICE_CHANGE_PERIOD_7_DAY
   */
  priceChange:
    | PriceChangesByPeriod
    | undefined;
  /**
   * Fully Diluted Valuations
   * Key is the `Currency` enum string,
   * value is the market cap with the `Currency`.
   */
  fdvs: { [key: string]: Money };
}

export interface FungibleTokenMarket_PricesEntry {
  key: string;
  value: Money | undefined;
}

export interface FungibleTokenMarket_MarketCapsEntry {
  key: string;
  value: Money | undefined;
}

export interface FungibleTokenMarket_PriceChangesEntry {
  key: string;
  value: PriceChangesByPeriod | undefined;
}

export interface FungibleTokenMarket_FdvsEntry {
  key: string;
  value: Money | undefined;
}

export interface GetFungibleTokenMarketRequest {
  /**
   * The name of the market  to retrieve.
   * Format : "fungibleTokens/{chain}/{token_address}/market"
   */
  fungibleTokenMarket: string;
  /** Display the price in this currency. Default is USD. */
  currency: Currency;
}

export interface ListFungibleTokensMarketsRequest {
  /**
   * If unspecified, at most 50 books will be returned.
   * The maximum value is 1000; values above 1000 will be coerced to 1000.
   */
  pageSize: number;
  /**
   * Token of the page to retrieve. If not specified, the first
   * page of results will be returned. Use the value obtained from
   * `next_page_token` in the previous response in order to request
   * the next page of results.
   */
  pageToken: string;
  /**
   * Available Sequence and Operator
   * * name
   *   * `=`
   *
   * Examples
   * * name="fungibleTokens/SOLANA/FZ4MT1HYJHd9GK8D5mJ9f3r7irLaDL5NxBNLjGqrLqs9/market"
   */
  filter: string;
  /**
   * One or more fields to compare and use to sort the output.
   * To specify ascending or descending order, append " asc" or " desc" to the field name. If not specified, the order is ascending.
   *
   * Reference
   * * https://google.aip.dev/132#ordering.
   *
   * Supported Fields
   * *
   *
   * Examples
   * *
   */
  orderBy: string;
  /** Display the price in this currency. Default is USD. */
  currency: Currency;
}

export interface ListFungibleTokensMarketsResponse {
  fungibleTokenMarkets: FungibleTokenMarket[];
  /**
   * Pagination token used to retrieve the next page of results.
   * Pass the content of this string as the `page_token` attribute of
   * the next request. `next_page_token` is not returned for the last
   * page.
   */
  nextPageToken: string;
}

/** FungibleTokenMarketService is the service for managing fungible token markets. */
export interface FungibleTokenMarketService {
  /** GetFungibleTokenMarket returns the market for the given fungible token. */
  GetFungibleTokenMarket(request: GetFungibleTokenMarketRequest): Promise<FungibleTokenMarket>;
  GetOrCreateFungibleTokenMarket(request: GetFungibleTokenMarketRequest): Promise<FungibleTokenMarket>;
  /** ListFungibleTokenMarkets returns the list of markets for the given fungible tokens. */
  ListFungibleTokenMarkets(request: ListFungibleTokensMarketsRequest): Promise<ListFungibleTokensMarketsResponse>;
}

// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               unknown
// source: pie-dot-fun/v1/holding.proto

/* eslint-disable */
import {
  type ChainType,
  type Currency,
  type Money,
  type Percentage,
  type PnL,
  type PnLsByPeriod,
  type Quantity,
} from "./common";

export const protobufPackage = "piedotfun.v1";

export interface GetHoldingRequest {
  /**
   * The name of the holding to retrieve.
   * Format : "holdings/{chain}/basketTokens/{token_address}/holdingWallets/{holding_wallet_address}"
   */
  holding: string;
  /**
   * Display the value in this currency. Default is USD.
   *
   * @deprecated
   */
  currency: Currency;
}

export interface ListHoldingsRequest {
  /**
   * The maximum number of holdings to return. The service may return fewer than
   * this value.
   * If unspecified, at most 50 rows will be returned.
   * The maximum value is 1024; values above 1024 will be coerced to 1024.
   */
  pageSize: number;
  /**
   * Token of the page to retrieve. If not specified, the first
   * page of results will be returned. Use the value obtained from
   * `next_page_token` in the previous response in order to request
   * the next page of results.
   *
   * When paginating, all other parameters provided to `ListHoldings` must match
   * the call that provided the page token.
   */
  pageToken: string;
  /**
   * Available Sequence and Operator
   * * basket_token
   *   * `=`
   * * holding_wallet
   *   * `=`
   * * formatted_quantity, quantity (alias of formatted_quantity)
   *   * `>=`, `<=`, `>`, `<`
   * * raw_quantity
   *   * `>=`, `<=`, `>`, `<`
   * * market_value_sol
   *   * `>=`, `<=`, `>`, `<`
   * * market_value_usdc
   *   * `>=`, `<=`, `>`, `<`
   *
   * At least one filter is required. If none is provided, the service will return an error.
   * Examples
   * * basket_token="basketTokens/SOLANA/FZ4MT1HYJHd9GK8D5mJ9f3r7irLaDL5NxBNLjGqrLqs9"
   * * holding_wallet="holdingWallets/SVM/9b3b4b4b-1b1b-4b4b-9b9b-1b1b4b4b4b4b"
   * * quantity>"0"
   * * market_value_sol>="100"
   */
  filter: string;
  /**
   * One or more fields to compare and use to sort the output. (optional)
   * Default order for a field is descending by id
   * To specify ascending or descending order, append " asc" or " desc" to the field name. If not specified, the order is ascending.
   *
   * Reference
   * * https://google.aip.dev/132#ordering.
   *
   * Supported Fields
   * * "market_value"
   *
   * Examples
   * * order_by=market_value desc
   */
  orderBy: string;
  /**
   * Display the value in this currency. Default is USD.
   *
   * @deprecated
   */
  currency: Currency;
}

export interface ListHoldingsResponse {
  holdings: Holding[];
  /**
   * Pagination token used to retrieve the next page of results.
   * Pass the content of this string as the `page_token` attribute of
   * the next request. `next_page_token` is not returned for the last
   * page.
   */
  nextPageToken: string;
}

export interface GetHoldingsStatisticsRequest {
  /**
   * Available Sequence and Operator
   * * basket_token
   *   * `=`
   * * holding_wallet
   *   * `=`
   * * user
   *   * `=`
   * * symbol
   *   * `=`
   * * market_value_sol
   *   * `>=`, `<=`, `>`, `<`
   * * market_value_usdc
   *   * `>=`, `<=`, `>`, `<`
   *
   * At least one filter is required. If none is provided, the service will return an error.
   * Examples
   * * basket_token="basketTokens/SOLANA/FZ4MT1HYJHd9GK8D5mJ9f3r7irLaDL5NxBNLjGqrLqs9"
   * * holding_wallet="holdingWallets/SOLANA/9b3b4b4b-1b1b-4b4b-9b9b-1b1b4b4b4b4b"
   * * user="users/1"
   * * symbol="MURAD"
   * * market_value_sol>=10
   */
  filter: string;
}

export interface GetHoldingsStatisticsResponse {
  count: number;
  totalMarketValues: Money[];
  totalPnls: PnL[];
}

export interface Holding {
  /** Format : "holdings/{chain}/basketTokens/{token_address}/holdingWallets/{holding_wallet_address}" */
  name: string;
  chain: ChainType;
  basketToken: string;
  holdingWallet: string;
  quantity:
    | Quantity
    | undefined;
  /** map from currency to average buy price */
  averageBuyPrices: { [key: string]: Money };
  /** map from currency to market value */
  marketValues: { [key: string]: Money };
  /** map from currency to PnLsByPeriod */
  pnls: { [key: string]: PnLsByPeriod };
  /** Percentage of holding value in the basket token */
  ownershipPercentage: Percentage | undefined;
  createTime: string | undefined;
  updateTime:
    | string
    | undefined;
  /** @deprecated */
  averageBuyPrice:
    | Money
    | undefined;
  /** @deprecated */
  marketValue:
    | Money
    | undefined;
  /** @deprecated */
  pnl: PnLsByPeriod | undefined;
}

export interface Holding_AverageBuyPricesEntry {
  key: string;
  value: Money | undefined;
}

export interface Holding_MarketValuesEntry {
  key: string;
  value: Money | undefined;
}

export interface Holding_PnlsEntry {
  key: string;
  value: PnLsByPeriod | undefined;
}

/** HoldingService contains the function to interact with the Holding of the spacebar */
export interface HoldingService {
  GetHolding(request: GetHoldingRequest): Promise<Holding>;
  ListHoldings(request: ListHoldingsRequest): Promise<ListHoldingsResponse>;
  /** GetHoldingsStatistics ListHoldings 와 같은 필터를 기준으로 Total Count, Total Market Value in USDC, Total Market Value in SOL 을 반환합니다. */
  GetHoldingsStatistics(request: GetHoldingsStatisticsRequest): Promise<GetHoldingsStatisticsResponse>;
}

// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               unknown
// source: blast/v1/staking/staking.proto

/* eslint-disable */

export const protobufPackage = "blast.v1.staking";

export enum StakingCurrency {
  /** CURRENCY_UNSPECIFIED - default value. this value is unused. */
  CURRENCY_UNSPECIFIED = "CURRENCY_UNSPECIFIED",
  ETH = "ETH",
}

/** The state of staking */
export enum StakingState {
  /** STATE_UNSPECIFIED - default value. this value is unused. */
  STATE_UNSPECIFIED = "STATE_UNSPECIFIED",
  /** ACTIVE -  */
  ACTIVE = "ACTIVE",
  /** INACTIVE -  */
  INACTIVE = "INACTIVE",
}

export interface GetStakingRequest {
  /**
   * The name of the staking to retrieve.
   * Format: users/{user_address}/stakings
   */
  staking: string;
}

/**
 * ListStakingsRequest payload
 * (-- api-linter: core::0158::request-page-token-field=disabled
 *     aip.dev/not-precedent: We need to do this because reasons. --)
 * (-- api-linter: core::0132::request-unknown-fields=disabled
 *     aip.dev/not-precedent: We really need this field because reasons. --)
 */
export interface ListStakingsRequest {
  /**
   * The maximum number of points to return. The service may return fewer than
   * this value.
   * If unspecified, at most 50 rows will be returned.
   * The maximum value is 1024; values above 1024 will be coerced to 1024.
   */
  pageSize: number;
  /**
   * Token of the page to retrieve. If not specified, the first
   * page of results will be returned. Use the value obtained from
   * `next_page_token` in the previous response in order to request
   * the next page of results.
   *
   * When paginating, all other parameters provided to `ListStakings` must match
   * the call that provided the page token.
   */
  pageToken: string;
  /**
   * Available Sequence and Operator
   * * name
   *   * `Equal`
   * * user_address
   *   * Equal`
   *
   * Examples
   * * name="users/0x6F11EF2c07f2E381CbE514198DdE87A0c0a19442/stakings"
   * * user_address="0x6F11EF2c07f2E381CbE514198DdE87A0c0a19442"
   */
  filter: string;
}

/**
 * ListStakingsResponse
 * (-- api-linter: core::0158::response-next-page-token-field=disabled
 *     aip.dev/not-precedent: We need to do this because reasons. --)
 */
export interface ListStakingsResponse {
  /** The list of rows that matched the query. */
  stakings: Staking[];
  /**
   * Pagination token used to retrieve the next page of results.
   * Pass the content of this string as the `page_token` attribute of
   * the next request. `next_page_token` is not returned for the last
   * page.
   */
  nextPageToken: string;
}

export interface GetStakingTotalAmountRequest {
}

export interface GetStakingTotalAmountResponse {
  /** The total amount of the staking. */
  totalAmount: number;
}

export interface Staking {
  /**
   * The resource name of the Staking.
   * Format: users/{user_address}/stakings
   */
  name: string;
  /**  */
  userAddress: string;
  /**  */
  currency: StakingCurrency;
  /**  */
  amount: number;
  /**  */
  state: StakingState;
}

/** StakingService contains the function to interact with the Staking of the spacebar */
export interface StakingService {
  /** GetStaking will return Staking. */
  GetStaking(request: GetStakingRequest): Promise<Staking>;
  /**
   * ListStakings will return Stakings.
   * reads across collections, reference: https://google.aip.dev/159
   */
  ListStakings(request: ListStakingsRequest): Promise<ListStakingsResponse>;
  /** GetStakingTotalAmount will return total amount of all user's staking. */
  GetStakingTotalAmount(request: GetStakingTotalAmountRequest): Promise<GetStakingTotalAmountResponse>;
}

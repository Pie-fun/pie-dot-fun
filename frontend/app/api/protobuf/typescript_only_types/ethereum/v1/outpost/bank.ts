// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               unknown
// source: ethereum/v1/outpost/bank.proto

/* eslint-disable */

export const protobufPackage = "ethereum.v1.outpost";

/** SymbolType enum represents the symbol of a currency. */
export enum Symbol {
  SYMBOL_UNSPECIFIED = "SYMBOL_UNSPECIFIED",
  /** STAR - STAR */
  STAR = "STAR",
}

/** TransferRequest */
export interface TransferRequest {
  /** transfer star token from whom */
  account: string;
  /** transfer star token to whom */
  to: string;
  /** amount of star token to transfer */
  amount: number;
  /**
   * etag determine whether a resource has changed since the last request.
   * This checksum is computed by the server based on the value of other
   * fields, and may be sent on requests to ensure the
   * client has an up-to-date value before proceeding.
   * If the ETag does not match, send a 412 Precondition Failed response
   */
  etag: string;
}

/** WithdrawOptimisticRequest */
export interface WithdrawOptimisticRequest {
  /** The account to withdraw from. */
  account: string;
  /** amount of star token to supply */
  amount: number;
}

/** DepositOptimisticRequest */
export interface DepositOptimisticRequest {
  /** The account to deposit star token */
  account: string;
  /** amount of star token to absob */
  amount: number;
}

/** GetStarTokenBalanceRequest */
export interface GetAccountRequest {
  /**
   * The name of the account to retrieve.
   * Format: accounts/{address}
   */
  account: string;
}

/**
 * ListAccountsRequest payload
 * (-- api-linter: core::0158::request-page-token-field=disabled
 *     aip.dev/not-precedent: We need to do this because reasons. --)
 * (-- api-linter: core::0132::request-unknown-fields=disabled
 *     aip.dev/not-precedent: We really need this field because reasons. --)
 */
export interface ListAccountsRequest {
  /**
   * The maximum number of accounts to return. The service may return fewer than
   * this value.
   * If unspecified, at most 50 rows will be returned.
   * The maximum value is 1024; values above 1024 will be coerced to 1024.
   */
  pageSize: number;
  /**
   * Token of the page to retrieve. If not specified, the first
   * page of results will be returned. Use the value obtained from
   * `next_page_token` in the previous response in order to request
   * the next page of results.
   *
   * When paginating, all other parameters provided to `ListAccounts` must match
   * the call that provided the page token.
   */
  pageToken: string;
}

/**
 * ListAccountsResponse
 * (-- api-linter: core::0158::response-next-page-token-field=disabled
 *     aip.dev/not-precedent: We need to do this because reasons. --)
 */
export interface ListAccountsResponse {
  /** The list of rows that matched the query. */
  accounts: Account[];
  /**
   * Pagination token used to retrieve the next page of results.
   * Pass the content of this string as the `page_token` attribute of
   * the next request. `next_page_token` is not returned for the last
   * page.
   */
  nextPageToken: string;
}

/** Account message represents a Account. */
export interface Account {
  /**
   * name
   * format: accounts/{address}
   */
  name: string;
  /** The address of the account. */
  address: string;
  /** The balance of the account. */
  balance:
    | Balance
    | undefined;
  /** The list of transactions associated with the account. */
  lastTransactions: Transaction[];
  /**
   * The create time of the account.
   * RFC3339 format e.g. "2006-01-02T15:04:05Z07:00"
   */
  createTime:
    | string
    | undefined;
  /**
   * The update time of the account.
   * RFC3339 format e.g. "2006-01-02T15:04:05Z07:00"
   */
  updateTime: string | undefined;
}

/** Balance message represents a currency. */
export interface Balance {
  /** The currency symbol. */
  symbol: Symbol;
  /** The amount of currency. */
  amount: number;
  /** The cumulative total of currency. */
  cumulativeTotal: number;
}

/** Money message represents a currency. */
export interface Money {
  /** The currency symbol. */
  symbol: Symbol;
  /** The amount of currency. */
  amount: number;
}

/** Transaction message represents a financial transaction. */
export interface Transaction {
  /** The ID of the transaction. */
  id: number;
  /** The type of the transaction. */
  type: Transaction_Type;
  /** The amount of currency involved in the transaction. */
  money:
    | Money
    | undefined;
  /**
   * The destination of the transaction.
   * This field is optional
   */
  recipient?:
    | string
    | undefined;
  /** The create time of the transaction. */
  createTime: string | undefined;
}

/** Type enum represents the type of a transaction. */
export enum Transaction_Type {
  TYPE_UNSPECIFIED = "TYPE_UNSPECIFIED",
  DEPOSIT = "DEPOSIT",
  WITHDRAWAL = "WITHDRAWAL",
  TRANSFER = "TRANSFER",
}

/** BankService contains the function to interact with the StarToken of the spacebar */
export interface BankService {
  DepositStarTokenOptimistic(request: DepositOptimisticRequest): Promise<Account>;
  WithdrawStarTokenOptimistic(request: WithdrawOptimisticRequest): Promise<Account>;
  GetAccount(request: GetAccountRequest): Promise<Account>;
  ListAccounts(request: ListAccountsRequest): Promise<ListAccountsResponse>;
}

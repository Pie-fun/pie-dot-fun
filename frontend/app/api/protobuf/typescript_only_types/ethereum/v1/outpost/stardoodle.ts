// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               unknown
// source: ethereum/v1/outpost/stardoodle.proto

/* eslint-disable */

export const protobufPackage = "ethereum.v1.outpost";

export enum StarDoodleAction {
  /** TYPE_UNSPECIFIED - default value. this value is unused. */
  TYPE_UNSPECIFIED = "TYPE_UNSPECIFIED",
  /** DOODLE -  */
  DOODLE = "DOODLE",
  /** MINE -  */
  MINE = "MINE",
}

/**
 * Request message for ListStarDoodles.
 * If location filter is not specified, the server will return an error.
 */
export interface ListStarDoodlesRequest {
  /**
   * Available Sequence and Operator
   * * location
   *   * `Equal`
   *
   * Examples
   * * filter=location="SQUARE"
   * * filter=location="BACKSPACE/0x06fAfC5d2fe61fF8d15A5Ca55FD6D3cf6069E2aB"
   */
  filter: string;
}

/** Response message for ListStarDoodles. */
export interface ListStarDoodlesResponse {
  /** The list of StarDoodle messages that match the filters. */
  starDoodles: StarDoodle[];
}

/** StarDoodle message represents the star doodle */
export interface StarDoodle {
  /**
   * The profile name of doodle the star
   * Format: profiles/{wallet_address}
   */
  doodler: string;
  /** To where the star is doodled. */
  locationType: StarDoodle_LocationType;
  /** The coordinates of the star doodle. */
  position: Position | undefined;
}

export enum StarDoodle_LocationType {
  /** TYPE_UNSPECIFIED - default value. this value is unused. */
  TYPE_UNSPECIFIED = "TYPE_UNSPECIFIED",
  /** SQUARE -  */
  SQUARE = "SQUARE",
  /** BACKSPACE -  */
  BACKSPACE = "BACKSPACE",
}

export interface Position {
  /** The x coordinate of the star doodle. */
  x: number;
  /** The y coordinate of the star doodle. */
  y: number;
}

export interface Star {
  color: Star_StarColor;
}

export enum Star_StarColor {
  /** COLOR_UNSPECIFIED - default value. this value is unused. */
  COLOR_UNSPECIFIED = "COLOR_UNSPECIFIED",
  /** YELLOW -  */
  YELLOW = "YELLOW",
  /** RED -  */
  RED = "RED",
  GREEN = "GREEN",
  BLUE = "BLUE",
}

/** StarDoodleService contains the function to interact with the StarDoodle of the spacebar */
export interface StarDoodleService {
  ListStarDoodles(request: ListStarDoodlesRequest): Promise<ListStarDoodlesResponse>;
}

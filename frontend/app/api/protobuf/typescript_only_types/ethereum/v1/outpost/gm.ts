// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.178.0
//   protoc               unknown
// source: ethereum/v1/outpost/gm.proto

/* eslint-disable */

export const protobufPackage = "ethereum.v1.outpost";

/** SendGMRequest message represents the request to send a GM message. */
export interface SendGMRequest {
  /**
   * The profile whom the GM should be sent from.
   * Format: profiles/{address}
   * Resource name alias for the sender, "profiles/me" is supported.
   */
  profile: string;
  /**
   * The profile whom the GM should be sent to.
   * Format: profiles/{address}
   */
  to: string;
}

/**
 * Request message for ListGMs.
 * At least one of the following fields must be set
 * if both "from" and "to" are empty, the server will return an error
 */
export interface ListGMsRequest {
  /**
   * The maximum number of gms to return. The service may return fewer than
   * this value.
   * If unspecified, at most 50 rows will be returned.
   * The maximum value is 1024; values above 1024 will be coerced to 1024.
   */
  pageSize: number;
  /**
   * Token of the page to retrieve. If not specified, the first
   * page of results will be returned. Use the value obtained from
   * `next_page_token` in the previous response in order to request
   * the next page of results.
   *
   * When paginating, all other parameters provided to `ListGMs` must match
   * the call that provided the page token.
   */
  pageToken: string;
  /**
   * Optional. The resource name of the profile to list GM messages from.
   * Format: profiles/{address}
   */
  from: string;
  /**
   * Optional. The resource name of the profile to list GM messages to.
   * Format: profiles/{address}
   */
  to: string;
}

/** Response message for ListGMs. */
export interface ListGMsResponse {
  /** The list of GM messages that match the filters. */
  gms: GM[];
  /** Pagination token used to retrieve the next page of results. */
  nextPageToken: string;
}

/** GMStats message represents the statistics of a profile's profile. */
export interface GMStats {
  /**
   * The resource name of the profile.
   * Format: profiles/{address}/gm_statistics
   */
  name: string;
  /** The profile name. */
  profile: string;
  /** The number of messages sent by the profile. */
  sentCount: number;
  /** The number of messages received by the profile. */
  receivedCount: number;
  /** The list of messages sent by the profile. */
  sentGms: GM[];
  /** The list of messages received by the profile. */
  receivedGms: GM[];
}

/** GM message represents a message sent or received by a profile. */
export interface GM {
  /** The resource name of the GM message. */
  name: string;
  /** The profile name of the sender. */
  from: string;
  /** The profile name of the receiver. */
  to: string;
  /** The time when the message was sent or received. */
  createTime: string | undefined;
}

/** GMService contains the function to interact with the GM of the spacebar */
export interface GMService {
  /** SendGM send GM to another Profile. */
  SendGM(request: SendGMRequest): Promise<GM>;
  /** Lists GM messages based on "from" and/or "to" filters. */
  ListGMs(request: ListGMsRequest): Promise<ListGMsResponse>;
}

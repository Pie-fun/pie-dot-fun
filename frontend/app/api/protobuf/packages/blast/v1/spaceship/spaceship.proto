syntax = "proto3";

package blast.v1.spaceship;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/empty.proto";
import "google/api/resource.proto";
import "google/api/client.proto";

import "blast/v1/nft/nft.proto";

option go_package = "github.com/ao-labs/spacebar-apis/go/blast/v1/spaceship;spaceship";

// SpaceshipService contains the function to interact with the Spaceship of the spacebar
service SpaceshipService {
  rpc GetSpaceship(GetSpaceshipRequest) returns (Spaceship) {
    option (google.api.http) = {
      get: "/v1/{spaceship=spaceships/*}"
    };
    option (google.api.method_signature) = "";
  }

}

message ListSpaceshipsRequest {
  // The maximum number of spaceships to return. The service may return fewer than
  // this value.
  // If unspecified, at most 50 rows will be returned.
  // The maximum value is 1024; values above 1024 will be coerced to 1024.
  int32 page_size = 1;

  // Token of the page to retrieve. If not specified, the first
  // page of results will be returned. Use the value obtained from
  // `next_page_token` in the previous response in order to request
  // the next page of results.
  //
  // When paginating, all other parameters provided to `ListSpaceships` must match
  // the call that provided the page token.
  string page_token = 2;

  // Available Sequence and Operator
  // * name
  //   * `Equal`
  // * create_time
  //   * `>`
  // * identified
  //   * Equal`
  //
  // Examples
  // * name="spaceships/0x6F11EF2c07f2E381CbE514198DdE87A0c0a19442"
  // * create_time>"2020-04-21T11:30:00Z"
  // * identifed
  string filter = 3;
}

message GetSpaceshipRequest {
  // The name of the spaceship to retrieve.
  // Format: spaceships/{address}
  // Alias "spaceships/me" is supported.
  string spaceship = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "station.spacebarapis.xyz/Spaceship"
    }];
}


// ListSpaceshipsResponse
// (-- api-linter: core::0158::response-next-page-token-field=disabled
//     aip.dev/not-precedent: We need to do this because reasons. --)
message ListSpaceshipsResponse {
  // The list of rows that matched the query.
  repeated Spaceship spaceships = 1;

  // Pagination token used to retrieve the next page of results.
  // Pass the content of this string as the `page_token` attribute of
  // the next request. `next_page_token` is not returned for the last
  // page.
  string next_page_token = 2;
}

message UpdateSpaceshipRequest {
  // Spaceship to update
  // Format: spaceships/{address}
  Spaceship spaceship = 1 [
    (google.api.field_behavior) = REQUIRED
  ];

  // Field mask that specifies the fields to update.
  // If no field mask is set, all fields will be updated.
  // Wildcards are supported.
  // Examples
  // ["*"]
  // ["nickname"]
  google.protobuf.FieldMask update_mask = 2;
}

// The state of spaceship
enum SpaceshipType {
  // default value. this value is unused.
  TYPE_UNSPECIFIED = 0;

  //
  PROTOSHIP = 1;

  //
  OWNERSHIP = 2;

}

message Spaceship {
  option (google.api.resource) = {
    type: "station.spacebarapis.xyz/Spaceship",
    pattern: "spaceships/{address}"
  };
  // The resource name of the Spaceship.
  // Format: spaceships/{address}
  string name = 1;

  // EIP-6551 TBA Address of the Spaceship NFT.
  string address = 2 [
    (google.api.field_behavior) = OUTPUT_ONLY
  ];

  //
  string owner_address = 3 [
    (google.api.field_behavior) = OUTPUT_ONLY
  ];

  //
  SpaceshipType type = 4;

  // The created time of Spaceship.
  // RFC3339 format e.g. "2006-01-02T15:04:05Z07:00"
  google.protobuf.Timestamp create_time = 5 [
    (google.api.field_behavior) = OUTPUT_ONLY
  ];

  // The updated time of Spaceship.
  SpaceshipNFT nft = 6 [
    (google.api.field_behavior) = OUTPUT_ONLY
  ];

}

message SpaceshipNFT {
  // Token ID of the NFT asset.
  string token_id = 1 [
    (google.api.field_behavior) = OUTPUT_ONLY
  ];

  // The URI of the NFT asset's image.
  // This URI is cached version of image original URI
  // e.g. "https://cdn.spacebar.xyz/nfts/ethereum/0x79fcdef22feed20eddacbb2587640e45491b757f/609"
  string image_uri = 2 [
    (google.api.field_behavior) = OUTPUT_ONLY
  ];

  // The URI of the NFT asset's metadata.
  string metadata_uri = 3 [
    (google.api.field_behavior) = OUTPUT_ONLY
  ];
}
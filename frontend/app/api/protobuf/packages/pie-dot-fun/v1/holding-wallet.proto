syntax = "proto3";

package piedotfun.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/empty.proto";
import "google/api/resource.proto";
import "google/api/client.proto";

import "pie-dot-fun/v1/auth.proto";
import "pie-dot-fun/v1/common.proto";

option go_package = "github.com/ao-labs/spacebar-apis/go/pie-dot-fun/v1;piedotfun";

// HoldingWalletService contains the function to interact with the HoldingWallet of the spacebar
service HoldingWalletService {
  rpc GetHoldingWallet(GetHoldingWalletRequest) returns (HoldingWallet) {
    option (google.api.http) = {
      get: "/v1/{holding_wallet=holdingWallets/*/*}"
    };
    option (google.api.method_signature) = "holding_wallet";
    option (gateway_registered) = true;
    option (allow_unauthenticated) = true;
    option (external) = true;
  }

  rpc ListHoldingWallets(ListHoldingWalletsRequest) returns (ListHoldingWalletsResponse) {
    option (google.api.http) = {
      get: "/v1/holdingWallets"
    };
    option (gateway_registered) = true;
    option (allow_unauthenticated) = true;
    option (external) = true;
  }
}

message GetHoldingWalletRequest {
  // The name of the holding_wallet to retrieve.
  // Format: holdingWallets/{vm_type}/{address}
  string holding_wallet = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "piedotfun.spacebarapis.xyz/HoldingWallet"
    }
  ];
}

message ListHoldingWalletsRequest {
  // The maximum number of holdings to return. The service may return fewer than
  // this value.
  // If unspecified, at most 50 rows will be returned.
  // The maximum value is 1024; values above 1024 will be coerced to 1024.
  int32 page_size = 1;

  // Token of the page to retrieve. If not specified, the first
  // page of results will be returned. Use the value obtained from
  // `next_page_token` in the previous response in order to request
  // the next page of results.
  //
  // When paginating, all other parameters provided to `ListHoldingWallets` must match
  // the call that provided the page token.
  string page_token = 2;

  // Available Sequence and Operator
  // * user
  //   * `=`
  //
  // * user="users/1"
  // * market_value_sol>=10
  string filter = 3 [
    (google.api.field_behavior) = REQUIRED
  ];
}

message ListHoldingWalletsResponse {
  repeated HoldingWallet holding_wallets = 1;

  // Pagination token used to retrieve the next page of results.
  // Pass the content of this string as the `page_token` attribute of
  // the next request. `next_page_token` is not returned for the last
  // page.
  string next_page_token = 2;
}


message HoldingWallet {
  option (google.api.resource) = {
    type: "piedotfun.spacebarapis.xyz/HoldingWallet",
    pattern: "holdingWallets/{vm_type}/{address}"
  };

  // The name of the holding_wallet.
  // Format: holdingWallets/{vm_type}/{address}
  string name = 1;

  VMType vm_type = 2;

  string address = 3;

  optional string user = 4;

}


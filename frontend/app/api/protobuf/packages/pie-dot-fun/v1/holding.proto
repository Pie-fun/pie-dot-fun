syntax = "proto3";

package piedotfun.v1;

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/empty.proto";
import "google/api/resource.proto";
import "google/api/client.proto";

import "pie-dot-fun/v1/auth.proto";
import "pie-dot-fun/v1/common.proto";

option go_package = "github.com/ao-labs/spacebar-apis/go/pie-dot-fun/v1;piedotfun";

// HoldingService contains the function to interact with the Holding of the spacebar
service HoldingService {
  rpc GetHolding(GetHoldingRequest) returns (Holding) {
    option (google.api.http) = {
      get: "/v1/{holding=holdings/*/basketTokens/*/holdingWallets/*}"
    };
    option (google.api.method_signature) = "holding";
    option (gateway_registered) = true;
    option (allow_unauthenticated) = true;
    option (external) = true;
  }

  rpc ListHoldings(ListHoldingsRequest) returns (ListHoldingsResponse) {
    option (google.api.http) = {
      get: "/v1/holdings"
    };
    option (gateway_registered) = true;
    option (allow_unauthenticated) = true;
    option (external) = true;
  }

  // GetHoldingsStatistics ListHoldings 와 같은 필터를 기준으로 Total Count, Total Market Value in USDC, Total Market Value in SOL 을 반환합니다.
  rpc GetHoldingsStatistics(GetHoldingsStatisticsRequest) returns (GetHoldingsStatisticsResponse) {
    option (google.api.http) = {
      get: "/v1/holdings:statistics"
    };
    option (gateway_registered) = true;
    option (allow_unauthenticated) = true;
    option (external) = true;
  }
}

message GetHoldingRequest {
  // The name of the holding to retrieve.
  // Format : "holdings/{chain}/basketTokens/{token_address}/holdingWallets/{holding_wallet_address}"
  string holding = 1 [
    (google.api.field_behavior) = REQUIRED,
    (google.api.resource_reference) = {
      type: "piedotfun.spacebarapis.xyz/Holding"
    }
  ];

  // Display the value in this currency. Default is USD.
  Currency currency = 2 [
    deprecated = true
  ];
}

message ListHoldingsRequest {
  // The maximum number of holdings to return. The service may return fewer than
  // this value.
  // If unspecified, at most 50 rows will be returned.
  // The maximum value is 1024; values above 1024 will be coerced to 1024.
  int32 page_size = 1;

  // Token of the page to retrieve. If not specified, the first
  // page of results will be returned. Use the value obtained from
  // `next_page_token` in the previous response in order to request
  // the next page of results.
  //
  // When paginating, all other parameters provided to `ListHoldings` must match
  // the call that provided the page token.
  string page_token = 2;

  // Available Sequence and Operator
  // * basket_token
  //   * `=`
  // * holding_wallet
  //   * `=`
  // * formatted_quantity, quantity (alias of formatted_quantity)
  //   * `>=`, `<=`, `>`, `<`
  // * raw_quantity
  //   * `>=`, `<=`, `>`, `<`
  // * market_value_sol
  //   * `>=`, `<=`, `>`, `<`
  // * market_value_usdc
  //   * `>=`, `<=`, `>`, `<`
  //
  // At least one filter is required. If none is provided, the service will return an error.
  // Examples
  // * basket_token="basketTokens/SOLANA/FZ4MT1HYJHd9GK8D5mJ9f3r7irLaDL5NxBNLjGqrLqs9"
  // * holding_wallet="holdingWallets/SVM/9b3b4b4b-1b1b-4b4b-9b9b-1b1b4b4b4b4b"
  // * quantity>"0"
  // * market_value_sol>="100"
  string filter = 3 [
    (google.api.field_behavior) = REQUIRED
  ];

  // One or more fields to compare and use to sort the output. (optional)
  // Default order for a field is descending by id
  // To specify ascending or descending order, append " asc" or " desc" to the field name. If not specified, the order is ascending.
  //
  // Reference
  // * https://google.aip.dev/132#ordering.
  //
  // Supported Fields
  // * "market_value"
  //
  // Examples
  // * order_by=market_value desc
  string order_by = 4;

  // Display the value in this currency. Default is USD.
  Currency currency = 5 [
    deprecated = true
  ];
}

message ListHoldingsResponse {
  repeated Holding holdings = 1;

  // Pagination token used to retrieve the next page of results.
  // Pass the content of this string as the `page_token` attribute of
  // the next request. `next_page_token` is not returned for the last
  // page.
  string next_page_token = 2;
}

message GetHoldingsStatisticsRequest {
  // Available Sequence and Operator
  // * basket_token
  //   * `=`
  // * holding_wallet
  //   * `=`
  // * user
  //   * `=`
  // * symbol
  //   * `=`
  // * market_value_sol
  //   * `>=`, `<=`, `>`, `<`
  // * market_value_usdc
  //   * `>=`, `<=`, `>`, `<`
  //
  // At least one filter is required. If none is provided, the service will return an error.
  // Examples
  // * basket_token="basketTokens/SOLANA/FZ4MT1HYJHd9GK8D5mJ9f3r7irLaDL5NxBNLjGqrLqs9"
  // * holding_wallet="holdingWallets/SOLANA/9b3b4b4b-1b1b-4b4b-9b9b-1b1b4b4b4b4b"
  // * user="users/1"
  // * symbol="MURAD"
  // * market_value_sol>=10
  string filter = 1 [
    (google.api.field_behavior) = REQUIRED
  ];
}

message GetHoldingsStatisticsResponse {
  int32 count = 1;

  repeated Money total_market_values = 2;

  repeated PnL total_pnls = 3;
}

message Holding {
  option (google.api.resource) = {
    type: "piedotfun.spacebarapis.xyz/Holding",
    pattern: "holdings/{chain}/basketTokens/{token_address}/holdingWallets/{holding_wallet_address}"
  };

  // Format : "holdings/{chain}/basketTokens/{token_address}/holdingWallets/{holding_wallet_address}"
  string name = 1;

  ChainType chain = 2;

  string basket_token = 3 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (google.api.resource_reference) = {
      type: "piedotfun.spacebarapis.xyz/BasketToken"
    }
  ];

  string holding_wallet = 4 [
    (google.api.field_behavior) = OUTPUT_ONLY,
    (google.api.resource_reference) = {
      type: "piedotfun.spacebarapis.xyz/HoldingWallet"
    }
  ];

  Quantity quantity = 5 [
    (google.api.field_behavior) = OUTPUT_ONLY
  ];

  // map from currency to average buy price
  map<string, Money> average_buy_prices = 6 [
    (google.api.field_behavior) = OUTPUT_ONLY
  ];

  // map from currency to market value
  map<string, Money> market_values = 7 [
    (google.api.field_behavior) = OUTPUT_ONLY
  ];

  // map from currency to PnLsByPeriod
  map<string, PnLsByPeriod> pnls = 8 [
    (google.api.field_behavior) = OUTPUT_ONLY
  ];

  // Percentage of holding value in the basket token
  Percentage ownership_percentage = 9 [
    (google.api.field_behavior) = OUTPUT_ONLY
  ];

  google.protobuf.Timestamp create_time = 11 [
    (google.api.field_behavior) = OUTPUT_ONLY
  ];

  google.protobuf.Timestamp update_time = 12 [
    (google.api.field_behavior) = OUTPUT_ONLY
  ];

  Money average_buy_price = 13 [
    deprecated = true,
    (google.api.field_behavior) = OUTPUT_ONLY
  ];

  Money market_value = 14 [
    deprecated = true,
    (google.api.field_behavior) = OUTPUT_ONLY
  ];

  PnLsByPeriod pnl = 15 [
    deprecated = true,
    (google.api.field_behavior) = OUTPUT_ONLY
  ];
}


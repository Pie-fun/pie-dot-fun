{
  "swagger": "2.0",
  "info": {
    "title": "blast/v1/time/time.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "TimeService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/currentFullWeekBasedMonth": {
      "get": {
        "summary": "GetCurrentFullWeekBasedMonth",
        "operationId": "TimeService_GetCurrentFullWeekBasedMonth2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/timeGetCurrentFullWeekBasedMonthResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "TimeService"
        ]
      }
    },
    "/currentFullWeekBasedWeek": {
      "get": {
        "summary": "GetCurrentFullWeekBasedWeek",
        "operationId": "TimeService_GetCurrentFullWeekBasedWeek2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/timeGetCurrentFullWeekBasedWeekResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "TimeService"
        ]
      }
    },
    "/currentWeek": {
      "get": {
        "summary": "GetCurrentWeek",
        "operationId": "TimeService_GetCurrentWeek2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/timeGetCurrentWeekResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "TimeService"
        ]
      }
    },
    "/v1/time/currentFullWeekBasedMonth": {
      "get": {
        "summary": "GetCurrentFullWeekBasedMonth",
        "operationId": "TimeService_GetCurrentFullWeekBasedMonth",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/timeGetCurrentFullWeekBasedMonthResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "TimeService"
        ]
      }
    },
    "/v1/time/currentFullWeekBasedWeek": {
      "get": {
        "summary": "GetCurrentFullWeekBasedWeek",
        "operationId": "TimeService_GetCurrentFullWeekBasedWeek",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/timeGetCurrentFullWeekBasedWeekResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "TimeService"
        ]
      }
    },
    "/v1/time/currentTime": {
      "get": {
        "summary": "GetCurrentTime",
        "operationId": "TimeService_GetCurrentTime",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/timeGetCurrentTimeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "TimeService"
        ]
      }
    },
    "/v1/time/currentWeek": {
      "get": {
        "summary": "GetCurrentWeek",
        "operationId": "TimeService_GetCurrentWeek",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/timeGetCurrentWeekResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "TimeService"
        ]
      }
    },
    "/v1/time/spacebarWeeks/{week}": {
      "get": {
        "summary": "GetSpacebarWeek",
        "operationId": "TimeService_GetSpacebarWeek",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/timeSpacebarWeek"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "week",
            "description": "week",
            "in": "path",
            "required": true,
            "type": "integer",
            "format": "int64",
            "pattern": "[^/]+"
          }
        ],
        "tags": [
          "TimeService"
        ]
      }
    },
    "/v1/time/spacebarWeeks:getByDate": {
      "post": {
        "summary": "GetSpacebarWeekByDate",
        "operationId": "TimeService_GetSpacebarWeekByDate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/timeSpacebarWeek"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/timeGetSpacebarWeekByDateRequest"
            }
          }
        ],
        "tags": [
          "TimeService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "timeGetCurrentFullWeekBasedMonthResponse": {
      "type": "object",
      "properties": {
        "currentMonth": {
          "type": "string",
          "title": "Format: yyyy-MM. Example: 2021-01"
        },
        "previousMonth": {
          "type": "string",
          "title": "Format: yyyy-MM. Example: 2021-01"
        }
      },
      "title": "GetCurrentFullWeekBasedMonthResponse"
    },
    "timeGetCurrentFullWeekBasedWeekResponse": {
      "type": "object",
      "properties": {
        "currentWeek": {
          "type": "string",
          "title": "Format: {year}-{month}-{week}. Example: 2021-01-W1"
        },
        "previousWeek": {
          "type": "string",
          "title": "Format: {year}-{month}-{week}. Example: 2021-01-W1"
        }
      },
      "title": "GetCurrentFullWeekBasedWeekResponse"
    },
    "timeGetCurrentTimeResponse": {
      "type": "object",
      "properties": {
        "time": {
          "type": "string",
          "format": "date-time",
          "title": "time",
          "readOnly": true
        }
      },
      "title": "GetCurrentTimeResponse"
    },
    "timeGetCurrentWeekResponse": {
      "type": "object",
      "properties": {
        "week": {
          "type": "integer",
          "format": "int64",
          "title": "week"
        }
      },
      "title": "GetCurrentWeekResponse"
    },
    "timeGetSpacebarWeekByDateRequest": {
      "type": "object",
      "properties": {
        "date": {
          "$ref": "#/definitions/typeDate",
          "title": "date\nif null, it's today (UTC)"
        }
      },
      "title": "GetSpacebarWeekByDateRequest"
    },
    "timeSpacebarWeek": {
      "type": "object",
      "properties": {
        "week": {
          "type": "integer",
          "format": "int64",
          "description": "week. incremental value."
        },
        "startDate": {
          "$ref": "#/definitions/typeDate",
          "title": "date. [start_date, end_date]\nstart_date. It's monday"
        },
        "endDate": {
          "$ref": "#/definitions/typeDate",
          "title": "end_date. It's sunday"
        },
        "fullWeekBasedYear": {
          "type": "integer",
          "format": "int64",
          "title": "full_week_based_year"
        },
        "fullWeekBasedMonth": {
          "type": "integer",
          "format": "int64",
          "title": "full_week_based_year"
        },
        "fullWeekBasedWeek": {
          "type": "integer",
          "format": "int64",
          "title": "full_week_based_week"
        },
        "fullWeekBasedWeekString": {
          "type": "string",
          "title": "full_week_based_week_string\nFormat: {year}-{month}-{week}. Example: 2021-01-W1"
        },
        "fullWeekBasedMonthString": {
          "type": "string",
          "title": "full_week_based_month_string\nFormat: yyyy-MM. Example: 2021-01"
        }
      },
      "title": "SpacebarWeek has the service-based incremental week number.\n2024/02/19 ~ 2024/02/25 =\u003e 1"
    },
    "typeDate": {
      "type": "object",
      "properties": {
        "year": {
          "type": "integer",
          "format": "int32",
          "description": "Year of the date. Must be from 1 to 9999, or 0 to specify a date without\na year."
        },
        "month": {
          "type": "integer",
          "format": "int32",
          "description": "Month of a year. Must be from 1 to 12, or 0 to specify a year without a\nmonth and day."
        },
        "day": {
          "type": "integer",
          "format": "int32",
          "description": "Day of a month. Must be from 1 to 31 and valid for the year and month, or 0\nto specify a year by itself or a year and month where the day isn't\nsignificant."
        }
      },
      "description": "* A full date, with non-zero year, month, and day values\n* A month and day value, with a zero year, such as an anniversary\n* A year on its own, with zero month and day values\n* A year and month value, with a zero day, such as a credit card expiration\ndate\n\nRelated types are [google.type.TimeOfDay][google.type.TimeOfDay] and\n`google.protobuf.Timestamp`.",
      "title": "Represents a whole or partial calendar date, such as a birthday. The time of\nday and time zone are either specified elsewhere or are insignificant. The\ndate is relative to the Gregorian Calendar. This can represent one of the\nfollowing:"
    }
  }
}

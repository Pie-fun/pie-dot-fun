{
  "swagger": "2.0",
  "info": {
    "title": "blast/v1/staking/staking.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "StakingService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/users/-/stakings": {
      "get": {
        "summary": "ListStakings will return Stakings.\nreads across collections, reference: https://google.aip.dev/159",
        "operationId": "StakingService_ListStakings",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/stakingListStakingsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pageSize",
            "description": "The maximum number of points to return. The service may return fewer than\nthis value.\nIf unspecified, at most 50 rows will be returned.\nThe maximum value is 1024; values above 1024 will be coerced to 1024.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "description": "Token of the page to retrieve. If not specified, the first\npage of results will be returned. Use the value obtained from\n`next_page_token` in the previous response in order to request\nthe next page of results.\n\nWhen paginating, all other parameters provided to `ListStakings` must match\nthe call that provided the page token.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "description": "Available Sequence and Operator\n* name\n  * `Equal`\n* user_address\n  * Equal`\n\nExamples\n* name=\"users/0x6F11EF2c07f2E381CbE514198DdE87A0c0a19442/stakings\"\n* user_address=\"0x6F11EF2c07f2E381CbE514198DdE87A0c0a19442\"",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "StakingService"
        ]
      }
    },
    "/v1/users/-/stakings/totalAmount": {
      "get": {
        "summary": "GetStakingTotalAmount will return total amount of all user's staking.",
        "operationId": "StakingService_GetStakingTotalAmount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/stakingGetStakingTotalAmountResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "StakingService"
        ]
      }
    },
    "/v1/{staking}": {
      "get": {
        "summary": "GetStaking will return Staking.",
        "operationId": "StakingService_GetStaking",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/stakingStaking"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "staking",
            "description": "The name of the staking to retrieve.\nFormat: users/{user_address}/stakings",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "users/[^/]+/stakings"
          }
        ],
        "tags": [
          "StakingService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "stakingGetStakingTotalAmountResponse": {
      "type": "object",
      "properties": {
        "totalAmount": {
          "type": "number",
          "format": "float",
          "description": "The total amount of the staking."
        }
      }
    },
    "stakingListStakingsResponse": {
      "type": "object",
      "properties": {
        "stakings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/stakingStaking"
          },
          "description": "The list of rows that matched the query."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Pagination token used to retrieve the next page of results.\nPass the content of this string as the `page_token` attribute of\nthe next request. `next_page_token` is not returned for the last\npage."
        }
      },
      "title": "ListStakingsResponse\n(-- api-linter: core::0158::response-next-page-token-field=disabled\n    aip.dev/not-precedent: We need to do this because reasons. --)"
    },
    "stakingStaking": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The resource name of the Staking.\nFormat: users/{user_address}/stakings"
        },
        "userAddress": {
          "type": "string",
          "readOnly": true
        },
        "currency": {
          "$ref": "#/definitions/stakingStakingCurrency"
        },
        "amount": {
          "type": "number",
          "format": "float"
        },
        "state": {
          "$ref": "#/definitions/stakingStakingState"
        }
      }
    },
    "stakingStakingCurrency": {
      "type": "string",
      "enum": [
        "CURRENCY_UNSPECIFIED",
        "ETH"
      ],
      "default": "CURRENCY_UNSPECIFIED",
      "description": " - CURRENCY_UNSPECIFIED: default value. this value is unused."
    },
    "stakingStakingState": {
      "type": "string",
      "enum": [
        "STATE_UNSPECIFIED",
        "ACTIVE",
        "INACTIVE"
      ],
      "default": "STATE_UNSPECIFIED",
      "description": "- STATE_UNSPECIFIED: default value. this value is unused.",
      "title": "The state of staking"
    }
  }
}

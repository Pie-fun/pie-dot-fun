{
  "swagger": "2.0",
  "info": {
    "title": "blast/v1/blastpoints/blastpoints.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "PointsService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/blastGoldReservations": {
      "get": {
        "summary": "ListBlastGoldReservations",
        "operationId": "PointsService_ListBlastGoldReservations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/blastpointsListBlastGoldReservationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "pageSize",
            "description": "The maximum number of BlastGoldReservations to return. The service may return fewer than\nthis value.\nIf unspecified, at most 100 rows will be returned.\nThe maximum value is 1000.",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageToken",
            "description": "Token of the page to retrieve. If not specified, the first\npage of results will be returned. Use the value obtained from\n`next_page_token` in the previous response in order to request\nthe next page of results.\n\nWhen paginating, all other parameters provided to `ListBlastGoldReservationsRequest` must match\nthe call that provided the page token.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "filter",
            "description": "filter",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "orderBy",
            "description": "One or more fields to compare and use to sort the output. (optional)\nDefault order for a field is ascending by create_time\nTo specify ascending or descending order, append \" asc\" or \" desc\" to the field name. If not specified, the order is ascending.\n\nReference\n* https://google.aip.dev/132#ordering.\n\nSupported Fields\n* \"create_time\"\n\nExamples\n* order_by=create_time desc",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "PointsService"
        ]
      }
    },
    "/v1/blastGoldReservations:batchCreate": {
      "post": {
        "summary": "BatchCreateBlastGoldReservations",
        "operationId": "PointsService_BatchCreateBlastGoldReservations",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/blastpointsBatchCreateBlastGoldReservationsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/blastpointsBatchCreateBlastGoldReservationsRequest"
            }
          }
        ],
        "tags": [
          "PointsService"
        ]
      }
    },
    "/v1/blastGoldReservations:transfer": {
      "post": {
        "summary": "TransferReservedBlastGolds\nTransfer gold by the reservations.\nadmin api, not public",
        "operationId": "PointsService_TransferReservedBlastGolds",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/blastpointsTransferReservedBlastGoldsResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/blastpointsTransferReservedBlastGoldsRequest"
            }
          }
        ],
        "tags": [
          "PointsService"
        ]
      }
    },
    "/v1/{blastBalance}": {
      "get": {
        "summary": "GetBlastBalances",
        "operationId": "PointsService_GetBlastBalances",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/blastpointsBlastBalance"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "blastBalance",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "users/[^/]+/blastBalances"
          },
          {
            "name": "contractAddress",
            "description": "The contract address of the token.\nThis field is required if the blast_balance has skipped the blast_points field.",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "phase",
            "description": "Which phase of blast points API",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          }
        ],
        "tags": [
          "PointsService"
        ]
      }
    },
    "/v1/{blastPoints_1}": {
      "get": {
        "summary": "GetBlastPoints",
        "operationId": "PointsService_GetBlastPoints2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/blastpointsBlastPoints"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "blastPoints_1",
            "description": "The name of the points to retrieve.\nFormat: users/{address}/blastPoints",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "users/[^/]+/blastPoints"
          }
        ],
        "tags": [
          "PointsService"
        ]
      }
    },
    "/v1/{blastPoints}": {
      "get": {
        "summary": "GetBlastPoints",
        "operationId": "PointsService_GetBlastPoints",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/blastpointsBlastPoints"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "blastPoints",
            "description": "The name of the points to retrieve.\nFormat: users/{address}/blastPoints",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "users/[^/]+/blastPoints"
          }
        ],
        "tags": [
          "PointsService"
        ]
      }
    },
    "/v1/{blastPoints}/blast_transfer_batches": {
      "get": {
        "summary": "ListAllPendingTransferBatches",
        "operationId": "PointsService_ListAllPendingTransfers2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/blastpointsListAllPendingTransfersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "blastPoints",
            "description": "The name of the points to retrieve.\nFormat: users/{address}/blastPoints",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "users/[^/]+/blastPoints"
          },
          {
            "name": "pointsType",
            "description": "The type of the points to retrieve.\nIF not set, it will return LIQUIDITY points.\n\n - TYPE_UNSPECIFIED: default value. this value is unused.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "TYPE_UNSPECIFIED",
              "LIQUIDITY",
              "DEVELOPER"
            ],
            "default": "TYPE_UNSPECIFIED"
          }
        ],
        "tags": [
          "PointsService"
        ]
      }
    },
    "/v1/{blastPoints}/transfers": {
      "get": {
        "summary": "ListAllPendingTransferBatches",
        "operationId": "PointsService_ListAllPendingTransfers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/blastpointsListAllPendingTransfersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "blastPoints",
            "description": "The name of the points to retrieve.\nFormat: users/{address}/blastPoints",
            "in": "path",
            "required": true,
            "type": "string",
            "pattern": "users/[^/]+/blastPoints"
          },
          {
            "name": "pointsType",
            "description": "The type of the points to retrieve.\nIF not set, it will return LIQUIDITY points.\n\n - TYPE_UNSPECIFIED: default value. this value is unused.",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "TYPE_UNSPECIFIED",
              "LIQUIDITY",
              "DEVELOPER"
            ],
            "default": "TYPE_UNSPECIFIED"
          }
        ],
        "tags": [
          "PointsService"
        ]
      }
    }
  },
  "definitions": {
    "blastpointsBalance": {
      "type": "object",
      "properties": {
        "available": {
          "type": "string"
        },
        "pendingSent": {
          "type": "string"
        },
        "earnedCumulative": {
          "type": "string"
        },
        "receivedCumulative": {
          "type": "string"
        },
        "finalizedSentCumulative": {
          "type": "string"
        }
      }
    },
    "blastpointsBatchCreateBlastGoldReservationsRequest": {
      "type": "object",
      "properties": {
        "requests": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/blastpointsCreateBlastGoldReservationRequest"
          }
        }
      },
      "title": "BatchCreateBlastGoldReservationsRequest",
      "required": [
        "requests"
      ]
    },
    "blastpointsBatchCreateBlastGoldReservationsResponse": {
      "type": "object",
      "properties": {
        "reservations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/blastpointsBlastGoldReservation"
          }
        }
      },
      "title": "BatchCreateBlastGoldReservationsResponse"
    },
    "blastpointsBlastBalance": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "liquidity": {
          "$ref": "#/definitions/blastpointsBalance"
        },
        "developer": {
          "$ref": "#/definitions/blastpointsBalance"
        }
      }
    },
    "blastpointsBlastGoldReservation": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The resource name of the BlastGoldReservation.\nFormat: blastGoldReservations/{blast_gold_reservation}",
          "readOnly": true
        },
        "userAddress": {
          "type": "string",
          "description": "The user address of the user to reserve the points."
        },
        "amount": {
          "type": "string",
          "description": "The amount of points to reserve."
        },
        "reservationType": {
          "$ref": "#/definitions/blastpointsReservationType",
          "description": "The type of the reservation."
        },
        "state": {
          "$ref": "#/definitions/blastpointsReservationState",
          "description": "The state of the reservation.",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "format": "date-time",
          "description": "The create time of the reservation.",
          "readOnly": true
        },
        "transferTime": {
          "type": "string",
          "format": "date-time",
          "description": "The transfer time of the reservation.",
          "readOnly": true
        }
      },
      "title": "BlastGoldReservation"
    },
    "blastpointsBlastPoints": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "title": "The resource name of the Points.\nFormat: users/{address}/blastPoints"
        },
        "userAddress": {
          "type": "string",
          "readOnly": true
        },
        "liquidityPoints": {
          "type": "number",
          "format": "float",
          "title": "DEPRECATED in favor of phase1.liquidity_points",
          "readOnly": true
        },
        "developerPoints": {
          "type": "number",
          "format": "float",
          "title": "DEPRECATED in favor of phase1.developer_points",
          "readOnly": true
        },
        "phase1": {
          "$ref": "#/definitions/blastpointsPoints",
          "readOnly": true
        },
        "phase2": {
          "$ref": "#/definitions/blastpointsPoints",
          "readOnly": true
        }
      }
    },
    "blastpointsBlastPointsBatchState": {
      "type": "string",
      "enum": [
        "STATE_UNSPECIFIED",
        "PENDING",
        "CANCELLED",
        "FINALIZING",
        "FINALIZED"
      ],
      "default": "STATE_UNSPECIFIED",
      "description": " - STATE_UNSPECIFIED: default value. this value is unused.\n - PENDING: The batch is pending.\n - CANCELLED: The batch is cancelled.\n - FINALIZING: The batch is finalizing.\n - FINALIZED: The batch is finalized."
    },
    "blastpointsBlastPointsTransferType": {
      "type": "string",
      "enum": [
        "TRANSFER_UNSPECIFIED",
        "POINTS_STAKING",
        "GOLD_REFERRAL",
        "GOLD_RAFFLE",
        "GOLD_WEEKLY_SPACEBAR_POINTS",
        "GOLD_SCORE_UPLOAD",
        "GOLD_SCORE_RANKINGS_WINNER",
        "GOLD_COMMUNITY_EVENT",
        "GOLD_SS_CHALLENGE_WINNER",
        "GOLD_SS_INVITATIONAL"
      ],
      "default": "TRANSFER_UNSPECIFIED",
      "description": " - TRANSFER_UNSPECIFIED: default value. this value is unused."
    },
    "blastpointsBlastPointsType": {
      "type": "string",
      "enum": [
        "TYPE_UNSPECIFIED",
        "LIQUIDITY",
        "DEVELOPER"
      ],
      "default": "TYPE_UNSPECIFIED",
      "description": " - TYPE_UNSPECIFIED: default value. this value is unused."
    },
    "blastpointsCreateBlastGoldReservationRequest": {
      "type": "object",
      "properties": {
        "reservation": {
          "$ref": "#/definitions/blastpointsBlastGoldReservation"
        }
      },
      "title": "CreateBlastGoldReservationRequest",
      "required": [
        "reservation"
      ]
    },
    "blastpointsListAllPendingTransfersResponse": {
      "type": "object",
      "properties": {
        "transfers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/blastpointsTransfer"
          },
          "description": "The list of rows that matched the query."
        }
      }
    },
    "blastpointsListBlastGoldReservationsResponse": {
      "type": "object",
      "properties": {
        "reservations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/blastpointsBlastGoldReservation"
          },
          "description": "The list of rows that matched the query."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The token to retrieve the next page of results, or empty if there are no more results."
        }
      },
      "title": "ListBlastGoldReservationsResponse"
    },
    "blastpointsPoints": {
      "type": "object",
      "properties": {
        "liquidityPoints": {
          "type": "number",
          "format": "float",
          "readOnly": true
        },
        "developerPoints": {
          "type": "number",
          "format": "float",
          "readOnly": true
        }
      }
    },
    "blastpointsReservationState": {
      "type": "string",
      "enum": [
        "RESERVATION_STATE_UNSPECIFIED",
        "RESERVED",
        "TRANSFERRED"
      ],
      "default": "RESERVATION_STATE_UNSPECIFIED",
      "description": " - RESERVATION_STATE_UNSPECIFIED: default value. this value is unused."
    },
    "blastpointsReservationType": {
      "type": "string",
      "enum": [
        "RESERVATION_TYPE_UNSPECIFIED",
        "WEEKLY_SPACEBAR_POINTS",
        "REFERREE_WITH_STAKING",
        "SCORE_RANKINGS_WINNER",
        "SCORE_UPLOAD_BACKFILL",
        "COMMUNITY_EVENT_WINNER",
        "SS_CHALLENGE_WINNER",
        "SS_INVITATIONAL"
      ],
      "default": "RESERVATION_TYPE_UNSPECIFIED",
      "description": " - RESERVATION_TYPE_UNSPECIFIED: default value. this value is unused."
    },
    "blastpointsTransfer": {
      "type": "object",
      "properties": {
        "userAddress": {
          "type": "string",
          "readOnly": true
        },
        "state": {
          "$ref": "#/definitions/blastpointsBlastPointsBatchState",
          "readOnly": true
        },
        "pointsType": {
          "$ref": "#/definitions/blastpointsBlastPointsType",
          "readOnly": true
        },
        "points": {
          "type": "number",
          "format": "float",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "phase": {
          "type": "integer",
          "format": "int32",
          "readOnly": true
        },
        "transferType": {
          "$ref": "#/definitions/blastpointsBlastPointsTransferType",
          "readOnly": true
        }
      }
    },
    "blastpointsTransferReservedBlastGoldsRequest": {
      "type": "object",
      "properties": {
        "reservationType": {
          "$ref": "#/definitions/blastpointsReservationType",
          "title": "type of the reservation to transfer"
        }
      },
      "title": "TransferReservedBlastGoldsRequest"
    },
    "blastpointsTransferReservedBlastGoldsResponse": {
      "type": "object",
      "properties": {
        "reservations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/blastpointsBlastGoldReservation"
          },
          "title": "transfered reservations"
        }
      },
      "title": "TransferReservedBlastGoldsResponse"
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}

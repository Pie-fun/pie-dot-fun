{
  "swagger": "2.0",
  "info": {
    "title": "ethereum/v1/chain/sign.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "ChainSignService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/chain:signKeyMint": {
      "post": {
        "summary": "SignKeyMint signs a key mint with the given token id.",
        "description": "403 error will be returned if the given profile address not not eligible to mint the badge.\n400 error will be returned if the given token id is invalid",
        "operationId": "ChainSignService_SignKeyMint",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/chainSignatureTypedResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/chainSignKeyMintRequest"
            }
          }
        ],
        "tags": [
          "ChainSignService"
        ]
      }
    },
    "/v1/chain:signMessage": {
      "post": {
        "summary": "SignMessage signs a message with arbitrary message.",
        "description": "This rpc is not open to the public request and only used by the internal service.",
        "operationId": "ChainSignService_SignMessage",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/chainSignatureResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/chainSignMessageRequest"
            }
          }
        ],
        "tags": [
          "ChainSignService"
        ]
      }
    },
    "/v1/chain:signScoreMint": {
      "post": {
        "summary": "SignScoreMint signs a score mint with the given profile address and score ID.",
        "description": "Not implemented yet.",
        "operationId": "ChainSignService_SignScoreMint",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/chainSignatureResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/chainSignScoreMintRequest"
            }
          }
        ],
        "tags": [
          "ChainSignService"
        ]
      }
    },
    "/v1/chain:signWKeyMint": {
      "post": {
        "summary": "SignBadgeClaim signs a w key mint with the given EOA address.",
        "description": "403 error will be returned if the given EOA address is on the whitelist.",
        "operationId": "ChainSignService_SignWkeyMint",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/chainSignatureResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/chainSignWKeyMintRequest"
            }
          }
        ],
        "tags": [
          "ChainSignService"
        ]
      }
    }
  },
  "definitions": {
    "chainSignKeyMintRequest": {
      "type": "object",
      "properties": {
        "profileContractAddress": {
          "type": "string",
          "description": "This field will be injected from the auth token by Gateway, which means web client do not need to pass this field."
        },
        "profileTokenId": {
          "type": "string",
          "description": "This field will be injected from the auth token by Gateway, which means web client do not need to pass this field."
        },
        "spaceshipTokenId": {
          "type": "string",
          "description": "This field will be injected from the auth token by Gateway, which means web client do not need to pass this field."
        },
        "keyTokenId": {
          "type": "string"
        },
        "ethContribution": {
          "type": "string"
        }
      },
      "required": [
        "keyTokenId",
        "ethContribution"
      ]
    },
    "chainSignMessageRequest": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string"
        }
      },
      "required": [
        "message"
      ]
    },
    "chainSignScoreMintRequest": {
      "type": "object",
      "properties": {
        "profileAddress": {
          "type": "string"
        },
        "scoreId": {
          "type": "string"
        }
      },
      "required": [
        "profileAddress",
        "scoreId"
      ]
    },
    "chainSignWKeyMintRequest": {
      "type": "object",
      "properties": {
        "eoaAddress": {
          "type": "string"
        }
      },
      "required": [
        "eoaAddress"
      ]
    },
    "chainSignatureResponse": {
      "type": "object",
      "properties": {
        "signature": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "chainSignatureTypedResponse": {
      "type": "object",
      "properties": {
        "signature": {
          "type": "string"
        },
        "message": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
